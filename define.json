{
    "allDomainClass": [
        {
            "fullPackage": "be.cytomine.client",
            "isAbstract": false,
            "parentClassName": "be.cytomine.client.abst.AbstractAnnotationListing",
            "comment": {
                "version": "0.1",
                "description": "Response for annotation search",
                "author": "ClientBuilder (Lo\u00EFc Rollus)"
            },
            "fields": null,
            "methods": null,
            "name": "AnnotationListing"
        },
        {
            "fullPackage": "be.cytomine.client",
            "isAbstract": false,
            "parentClassName": "be.cytomine.client.abst.AbstractProjectSharingSameImage",
            "comment": {
                "version": "0.1",
                "description": "Response for project sharing the same image (list)",
                "author": "ClientBuilder (Lo\u00EFc Rollus)"
            },
            "fields": null,
            "methods": null,
            "name": "ProjectSharingSameImage"
        },
        {
            "fullPackage": "be.cytomine.client",
            "isAbstract": false,
            "parentClassName": "be.cytomine.client.abst.AbstractSearch",
            "comment": {
                "version": "0.1",
                "description": "Response for search request",
                "author": "ClientBuilder (Lo\u00EFc Rollus)"
            },
            "fields": null,
            "methods": null,
            "name": "Search"
        },
        {
            "fullPackage": "be.cytomine.client",
            "isAbstract": false,
            "parentClassName": "be.cytomine.client.abst.AbstractSequencePossibilties",
            "comment": {
                "version": "0.1",
                "description": "Response for sequence possibilities",
                "author": "ClientBuilder (Lo\u00EFc Rollus)"
            },
            "fields": null,
            "methods": null,
            "name": "SequencePossibilties"
        },
        {
            "fullPackage": "be.cytomine.client",
            "isAbstract": false,
            "parentClassName": "be.cytomine.client.abst.AbstractAbstractImage",
            "comment": {
                "version": "0.1",
                "description": "A real image store on disk, see 'image instance' for an image link in a project",
                "author": "ClientBuilder (Lo\u00EFc Rollus)"
            },
            "fields": null,
            "methods": null,
            "name": "AbstractImage"
        },
        {
            "fullPackage": "be.cytomine.client",
            "isAbstract": false,
            "parentClassName": "be.cytomine.client.abst.AbstractAlgoAnnotation",
            "comment": {
                "version": "0.1",
                "description": "",
                "author": "ClientBuilder (Lo\u00EFc Rollus)"
            },
            "fields": null,
            "methods": null,
            "name": "AlgoAnnotation"
        },
        {
            "fullPackage": "be.cytomine.client",
            "isAbstract": false,
            "parentClassName": "be.cytomine.client.abst.AbstractAlgoAnnotationTerm",
            "comment": {
                "version": "0.1",
                "description": "Term added to an annotation by a job. Annotation can be: -algo annotation (create by a job) or -user annotation (create by a real user)",
                "author": "ClientBuilder (Lo\u00EFc Rollus)"
            },
            "fields": null,
            "methods": null,
            "name": "AlgoAnnotationTerm"
        },
        {
            "fullPackage": "be.cytomine.client",
            "isAbstract": false,
            "parentClassName": "be.cytomine.client.abst.AbstractAnnotationFilter",
            "comment": {
                "version": "0.1",
                "description": "Define a set of filter for annotation listing",
                "author": "ClientBuilder (Lo\u00EFc Rollus)"
            },
            "fields": null,
            "methods": null,
            "name": "AnnotationFilter"
        },
        {
            "fullPackage": "be.cytomine.client",
            "isAbstract": false,
            "parentClassName": "be.cytomine.client.abst.AbstractAnnotationIndex",
            "comment": {
                "version": "0.1",
                "description": "A index entry that store, for an image and a user, the number of annotation created/reviewed",
                "author": "ClientBuilder (Lo\u00EFc Rollus)"
            },
            "fields": null,
            "methods": null,
            "name": "AnnotationIndex"
        },
        {
            "fullPackage": "be.cytomine.client",
            "isAbstract": false,
            "parentClassName": "be.cytomine.client.abst.AbstractAnnotationTerm",
            "comment": {
                "version": "0.1",
                "description": "Term added to an annotation by a real user (not a job!). Many user can add a term to a single annotation (not only the user that created this annotation)",
                "author": "ClientBuilder (Lo\u00EFc Rollus)"
            },
            "fields": null,
            "methods": null,
            "name": "AnnotationTerm"
        },
        {
            "fullPackage": "be.cytomine.client",
            "isAbstract": false,
            "parentClassName": "be.cytomine.client.abst.AbstractAttachedFile",
            "comment": {
                "version": "0.1",
                "description": "A file that may be attached to any Cytomine domain. Usefull to include file into description.",
                "author": "ClientBuilder (Lo\u00EFc Rollus)"
            },
            "fields": null,
            "methods": null,
            "name": "AttachedFile"
        },
        {
            "fullPackage": "be.cytomine.client",
            "isAbstract": false,
            "parentClassName": "be.cytomine.client.abst.AbstractDescription",
            "comment": {
                "version": "0.1",
                "description": "A domain description (text, image,...).",
                "author": "ClientBuilder (Lo\u00EFc Rollus)"
            },
            "fields": null,
            "methods": null,
            "name": "Description"
        },
        {
            "fullPackage": "be.cytomine.client",
            "isAbstract": false,
            "parentClassName": "be.cytomine.client.abst.AbstractDiscipline",
            "comment": {
                "version": "0.1",
                "description": "A discipline is a thematic for a project",
                "author": "ClientBuilder (Lo\u00EFc Rollus)"
            },
            "fields": null,
            "methods": null,
            "name": "Discipline"
        },
        {
            "fullPackage": "be.cytomine.client",
            "isAbstract": false,
            "parentClassName": "be.cytomine.client.abst.AbstractGroup",
            "comment": {
                "version": "0.1",
                "description": "A group is a set of users. A user may be in many groups",
                "author": "ClientBuilder (Lo\u00EFc Rollus)"
            },
            "fields": null,
            "methods": null,
            "name": "Group"
        },
        {
            "fullPackage": "be.cytomine.client",
            "isAbstract": false,
            "parentClassName": "be.cytomine.client.abst.AbstractImageFilter",
            "comment": {
                "version": "0.1",
                "description": "An image filter applies image operations (Binary, Eosin,...)",
                "author": "ClientBuilder (Lo\u00EFc Rollus)"
            },
            "fields": null,
            "methods": null,
            "name": "ImageFilter"
        },
        {
            "fullPackage": "be.cytomine.client",
            "isAbstract": false,
            "parentClassName": "be.cytomine.client.abst.AbstractImageFilterProject",
            "comment": {
                "version": "0.1",
                "description": "An image filter can be link to many projects",
                "author": "ClientBuilder (Lo\u00EFc Rollus)"
            },
            "fields": null,
            "methods": null,
            "name": "ImageFilterProject"
        },
        {
            "fullPackage": "be.cytomine.client",
            "isAbstract": false,
            "parentClassName": "be.cytomine.client.abst.AbstractImageGroup",
            "comment": {
                "version": "0.1",
                "description": "A group of image from the same source with different dimension",
                "author": "ClientBuilder (Lo\u00EFc Rollus)"
            },
            "fields": null,
            "methods": null,
            "name": "ImageGroup"
        },
        {
            "fullPackage": "be.cytomine.client",
            "isAbstract": false,
            "parentClassName": "be.cytomine.client.abst.AbstractImageInstance",
            "comment": {
                "version": "0.1",
                "description": "A link between 'abstract image' and 'project'. An 'abstract image' may be in multiple projects.",
                "author": "ClientBuilder (Lo\u00EFc Rollus)"
            },
            "fields": null,
            "methods": null,
            "name": "ImageInstance"
        },
        {
            "fullPackage": "be.cytomine.client",
            "isAbstract": false,
            "parentClassName": "be.cytomine.client.abst.AbstractImageSequence",
            "comment": {
                "version": "0.1",
                "description": "A position of an image in the image group",
                "author": "ClientBuilder (Lo\u00EFc Rollus)"
            },
            "fields": null,
            "methods": null,
            "name": "ImageSequence"
        },
        {
            "fullPackage": "be.cytomine.client",
            "isAbstract": false,
            "parentClassName": "be.cytomine.client.abst.AbstractJob",
            "comment": {
                "version": "0.1",
                "description": "A job is a software instance. This is the execution of software with some parameters",
                "author": "ClientBuilder (Lo\u00EFc Rollus)"
            },
            "fields": null,
            "methods": null,
            "name": "Job"
        },
        {
            "fullPackage": "be.cytomine.client",
            "isAbstract": false,
            "parentClassName": "be.cytomine.client.abst.AbstractJobData",
            "comment": {
                "version": "0.1",
                "description": "Data created by a job. This concerns only data files (annotation or term are store in domain database). If config cytomine.jobdata.filesystem is true, file are stored in filesystem, otherwise they are store in database.",
                "author": "ClientBuilder (Lo\u00EFc Rollus)"
            },
            "fields": null,
            "methods": null,
            "name": "JobData"
        },
        {
            "fullPackage": "be.cytomine.client",
            "isAbstract": false,
            "parentClassName": "be.cytomine.client.abst.AbstractJobParameter",
            "comment": {
                "version": "0.1",
                "description": "A job parameter is an instance of software parameter. When a job is created, we create a job parameter for each software parameter.",
                "author": "ClientBuilder (Lo\u00EFc Rollus)"
            },
            "fields": null,
            "methods": null,
            "name": "JobParameter"
        },
        {
            "fullPackage": "be.cytomine.client",
            "isAbstract": false,
            "parentClassName": "be.cytomine.client.abst.AbstractJobTemplate",
            "comment": {
                "version": "0.1",
                "description": "A job template is a job with pre-filled parameters. It can be used to init a new 'real' job on the basis of this template.",
                "author": "ClientBuilder (Lo\u00EFc Rollus)"
            },
            "fields": null,
            "methods": null,
            "name": "JobTemplate"
        },
        {
            "fullPackage": "be.cytomine.client",
            "isAbstract": false,
            "parentClassName": "be.cytomine.client.abst.AbstractNestedImageInstance",
            "comment": {
                "version": "0.1",
                "description": "An sub image from an image instance (sub area, same image transformed,...)",
                "author": "ClientBuilder (Lo\u00EFc Rollus)"
            },
            "fields": null,
            "methods": null,
            "name": "NestedImageInstance"
        },
        {
            "fullPackage": "be.cytomine.client",
            "isAbstract": false,
            "parentClassName": "be.cytomine.client.abst.AbstractOntology",
            "comment": {
                "version": "0.1",
                "description": "An ontology is a list of term. Each term may be link to other term with a special relation (parent, synonym,...)",
                "author": "ClientBuilder (Lo\u00EFc Rollus)"
            },
            "fields": null,
            "methods": null,
            "name": "Ontology"
        },
        {
            "fullPackage": "be.cytomine.client",
            "isAbstract": false,
            "parentClassName": "be.cytomine.client.abst.AbstractProject",
            "comment": {
                "version": "0.1",
                "description": "A project is the main cytomine domain, its a workspace to store images, annotations,...",
                "author": "ClientBuilder (Lo\u00EFc Rollus)"
            },
            "fields": null,
            "methods": null,
            "name": "Project"
        },
        {
            "fullPackage": "be.cytomine.client",
            "isAbstract": false,
            "parentClassName": "be.cytomine.client.abst.AbstractProperty",
            "comment": {
                "version": "0.1",
                "description": "A key-value entry that can be map to a domain (project, image, annotation,...)",
                "author": "ClientBuilder (Lo\u00EFc Rollus)"
            },
            "fields": null,
            "methods": null,
            "name": "Property"
        },
        {
            "fullPackage": "be.cytomine.client",
            "isAbstract": false,
            "parentClassName": "be.cytomine.client.abst.AbstractRelation",
            "comment": {
                "version": "0.1",
                "description": "Relation between a term 1 , a term 2 and a relantion domain (e.g. term1 PARENT term2)",
                "author": "ClientBuilder (Lo\u00EFc Rollus)"
            },
            "fields": null,
            "methods": null,
            "name": "Relation"
        },
        {
            "fullPackage": "be.cytomine.client",
            "isAbstract": false,
            "parentClassName": "be.cytomine.client.abst.AbstractReviewedAnnotation",
            "comment": {
                "version": "0.1",
                "description": "A reviewed annotation is an user/algo-annotation validated by a user. When a user validate an user/algoannotation, we copy all data from the validated annotation to create the review annotation",
                "author": "ClientBuilder (Lo\u00EFc Rollus)"
            },
            "fields": null,
            "methods": null,
            "name": "ReviewedAnnotation"
        },
        {
            "fullPackage": "be.cytomine.client",
            "isAbstract": false,
            "parentClassName": "be.cytomine.client.abst.AbstractRoiAnnotation",
            "comment": {
                "version": "0.1",
                "description": "An region of interest on a picture",
                "author": "ClientBuilder (Lo\u00EFc Rollus)"
            },
            "fields": null,
            "methods": null,
            "name": "RoiAnnotation"
        },
        {
            "fullPackage": "be.cytomine.client",
            "isAbstract": false,
            "parentClassName": "be.cytomine.client.abst.AbstractSample",
            "comment": {
                "version": "0.1",
                "description": "A sample is a source of image. This is a real thing: blood, a mouse lung,...",
                "author": "ClientBuilder (Lo\u00EFc Rollus)"
            },
            "fields": null,
            "methods": null,
            "name": "Sample"
        },
        {
            "fullPackage": "be.cytomine.client",
            "isAbstract": false,
            "parentClassName": "be.cytomine.client.abst.AbstractSecRole",
            "comment": {
                "version": "0.1",
                "description": "A user role on the full app (user, admin, guest,...)",
                "author": "ClientBuilder (Lo\u00EFc Rollus)"
            },
            "fields": null,
            "methods": null,
            "name": "SecRole"
        },
        {
            "fullPackage": "be.cytomine.client",
            "isAbstract": false,
            "parentClassName": "be.cytomine.client.abst.AbstractSecUserSecRole",
            "comment": {
                "version": "0.1",
                "description": "User - role link. A user may have many role (USER, ADMIN, GUEST)",
                "author": "ClientBuilder (Lo\u00EFc Rollus)"
            },
            "fields": null,
            "methods": null,
            "name": "SecUserSecRole"
        },
        {
            "fullPackage": "be.cytomine.client",
            "isAbstract": false,
            "parentClassName": "be.cytomine.client.abst.AbstractSoftware",
            "comment": {
                "version": "0.1",
                "description": "Software is an application that can read/add/update/delete data from cytomine. Each time a software is launch, we create a job instance",
                "author": "ClientBuilder (Lo\u00EFc Rollus)"
            },
            "fields": null,
            "methods": null,
            "name": "Software"
        },
        {
            "fullPackage": "be.cytomine.client",
            "isAbstract": false,
            "parentClassName": "be.cytomine.client.abst.AbstractSoftwareParameter",
            "comment": {
                "version": "0.1",
                "description": "A parameter for a software. It's a template to create job parameter. When job is init, we create job parameter list based on software parameter list.",
                "author": "ClientBuilder (Lo\u00EFc Rollus)"
            },
            "fields": null,
            "methods": null,
            "name": "SoftwareParameter"
        },
        {
            "fullPackage": "be.cytomine.client",
            "isAbstract": false,
            "parentClassName": "be.cytomine.client.abst.AbstractSoftwareProject",
            "comment": {
                "version": "0.1",
                "description": "A link between a ROI and a job template",
                "author": "ClientBuilder (Lo\u00EFc Rollus)"
            },
            "fields": null,
            "methods": null,
            "name": "SoftwareProject"
        },
        {
            "fullPackage": "be.cytomine.client",
            "isAbstract": false,
            "parentClassName": "be.cytomine.client.abst.AbstractStorageAbstractImage",
            "comment": {
                "version": "0.1",
                "description": "A link between a storage and some images",
                "author": "ClientBuilder (Lo\u00EFc Rollus)"
            },
            "fields": null,
            "methods": null,
            "name": "StorageAbstractImage"
        },
        {
            "fullPackage": "be.cytomine.client",
            "isAbstract": false,
            "parentClassName": "be.cytomine.client.abst.AbstractUploadedFile",
            "comment": {
                "version": "0.1",
                "description": "A file uploaded on the server, when finished, we create an 'abstract image' from this uploaded file",
                "author": "ClientBuilder (Lo\u00EFc Rollus)"
            },
            "fields": null,
            "methods": null,
            "name": "UploadedFile"
        },
        {
            "fullPackage": "be.cytomine.client",
            "isAbstract": false,
            "parentClassName": "be.cytomine.client.abst.AbstractUser",
            "comment": {
                "version": "0.1",
                "description": "A cytomine human user",
                "author": "ClientBuilder (Lo\u00EFc Rollus)"
            },
            "fields": null,
            "methods": null,
            "name": "User"
        },
        {
            "fullPackage": "be.cytomine.client",
            "isAbstract": false,
            "parentClassName": "be.cytomine.client.abst.AbstractUserAnnotation",
            "comment": {
                "version": "0.1",
                "description": "An annotation created by a user",
                "author": "ClientBuilder (Lo\u00EFc Rollus)"
            },
            "fields": null,
            "methods": null,
            "name": "UserAnnotation"
        },
        {
            "fullPackage": "be.cytomine.client",
            "isAbstract": false,
            "parentClassName": "be.cytomine.client.abst.AbstractUserGroup",
            "comment": {
                "version": "0.1",
                "description": "Link between a group and a user in database",
                "author": "ClientBuilder (Lo\u00EFc Rollus)"
            },
            "fields": null,
            "methods": null,
            "name": "UserGroup"
        },
        {
            "fullPackage": "be.cytomine.client",
            "isAbstract": false,
            "parentClassName": "be.cytomine.client.abst.AbstractUserJob",
            "comment": {
                "version": "0.1",
                "description": "A cytomine software user",
                "author": "ClientBuilder (Lo\u00EFc Rollus)"
            },
            "fields": null,
            "methods": null,
            "name": "UserJob"
        }
    ],
    "allAbstractDomainClass": [
        {
            "fullPackage": "be.cytomine.client.abst",
            "isAbstract": true,
            "comment": {
                "version": "0.1",
                "description": "Response for annotation search",
                "author": "ClientBuilder (Lo\u00EFc Rollus)"
            },
            "fields": [
                {
                    "useInConstructor": false,
                    "type": {
                        "type": "List"
                    },
                    "useInSetter": false,
                    "comment": {
                        "description": "(If params showTerm=true) the annotationterms list id"
                    },
                    "useInGetter": false,
                    "name": "annotationTerms"
                },
                {
                    "useInConstructor": false,
                    "type": {
                        "type": "Double"
                    },
                    "useInSetter": false,
                    "comment": {
                        "description": "(If params showGis=true) the area size of the annotation"
                    },
                    "useInGetter": false,
                    "name": "area"
                },
                {
                    "useInConstructor": false,
                    "type": {
                        "type": "Integer"
                    },
                    "useInSetter": false,
                    "comment": {
                        "description": "(If params showGis=true) the area unit (pixels\u00B2=1,micron\u00B2=3)"
                    },
                    "useInGetter": false,
                    "name": "areaUnit"
                },
                {
                    "useInConstructor": false,
                    "type": {
                        "type": "String"
                    },
                    "useInSetter": false,
                    "comment": {
                        "description": "Annotation class name"
                    },
                    "useInGetter": false,
                    "name": "clazz"
                },
                {
                    "useInConstructor": false,
                    "type": {
                        "type": "Long"
                    },
                    "useInSetter": false,
                    "comment": {
                        "description": "(If params showMeta=true) project annotation id"
                    },
                    "useInGetter": false,
                    "name": "container"
                },
                {
                    "useInConstructor": false,
                    "type": {
                        "type": "Long"
                    },
                    "useInSetter": false,
                    "comment": {
                        "description": "(If params showMeta=true) number of comments on this annotation"
                    },
                    "useInGetter": false,
                    "name": "countComments"
                },
                {
                    "useInConstructor": false,
                    "type": {
                        "type": "Integer"
                    },
                    "useInSetter": false,
                    "comment": {
                        "description": "(If params showMeta=true and reviewed=false) the number of reviewed annotation from this annotation"
                    },
                    "useInGetter": false,
                    "name": "countReviewedAnnotations"
                },
                {
                    "useInConstructor": false,
                    "type": {
                        "type": "Date"
                    },
                    "useInSetter": false,
                    "comment": {
                        "description": "(If params showMeta=true) annotation create date"
                    },
                    "useInGetter": false,
                    "name": "created"
                },
                {
                    "useInConstructor": false,
                    "type": {
                        "type": "String"
                    },
                    "useInSetter": false,
                    "comment": {
                        "description": "(If params showUser=true) the username of the creator"
                    },
                    "useInGetter": false,
                    "name": "creator"
                },
                {
                    "useInConstructor": false,
                    "type": {
                        "type": "String"
                    },
                    "useInSetter": false,
                    "comment": {
                        "description": "(If params showMeta=true) URL to get the crop annotation (image view that frame the annotation)"
                    },
                    "useInGetter": false,
                    "name": "cropURL"
                },
                {
                    "useInConstructor": false,
                    "type": {
                        "type": "String"
                    },
                    "useInSetter": false,
                    "comment": {
                        "description": "(If params showUser=true) the firstname of the creator"
                    },
                    "useInGetter": false,
                    "name": "firstname"
                },
                {
                    "useInConstructor": false,
                    "type": {
                        "type": "Double"
                    },
                    "useInSetter": false,
                    "comment": {
                        "description": "(If params showMeta=true) Geometry compression rate used to simplify"
                    },
                    "useInGetter": false,
                    "name": "geometryCompression"
                },
                {
                    "useInConstructor": false,
                    "type": {
                        "type": "Long"
                    },
                    "useInSetter": false,
                    "comment": {
                        "description": "Annotation id"
                    },
                    "useInGetter": false,
                    "name": "id"
                },
                {
                    "useInConstructor": false,
                    "type": {
                        "type": "Long"
                    },
                    "useInSetter": false,
                    "comment": {
                        "description": "(If params showAlgo=true) the expected term (real term add by user previously)"
                    },
                    "useInGetter": false,
                    "name": "idExpectedTerm"
                },
                {
                    "useInConstructor": false,
                    "type": {
                        "type": "Long"
                    },
                    "useInSetter": false,
                    "comment": {
                        "description": "(If params showAlgo=true) the predicted term for the annotation"
                    },
                    "useInGetter": false,
                    "name": "idTerm"
                },
                {
                    "useInConstructor": false,
                    "type": {
                        "type": "Long"
                    },
                    "useInSetter": false,
                    "comment": {
                        "description": "(If params showMeta=true), image annotation id)"
                    },
                    "useInGetter": false,
                    "name": "image"
                },
                {
                    "useInConstructor": false,
                    "type": {
                        "type": "String"
                    },
                    "useInSetter": false,
                    "comment": {
                        "description": "(If params showMeta=true) URL to go to the image on the webapp"
                    },
                    "useInGetter": false,
                    "name": "imageURL"
                },
                {
                    "useInConstructor": false,
                    "type": {
                        "type": "String"
                    },
                    "useInSetter": false,
                    "comment": {
                        "description": "(If params showUser=true) the lastname of the creator"
                    },
                    "useInGetter": false,
                    "name": "lastname"
                },
                {
                    "useInConstructor": false,
                    "type": {
                        "type": "String"
                    },
                    "useInSetter": false,
                    "comment": {
                        "description": "(If params showImage=true) the image filename"
                    },
                    "useInGetter": false,
                    "name": "originalfilename"
                },
                {
                    "useInConstructor": false,
                    "type": {
                        "type": "Long"
                    },
                    "useInSetter": false,
                    "comment": {
                        "description": "(If params showMeta=true, only for reviewed) the annotation parent of the reviewed annotation"
                    },
                    "useInGetter": false,
                    "name": "parentIdent"
                },
                {
                    "useInConstructor": false,
                    "type": {
                        "type": "Double"
                    },
                    "useInSetter": false,
                    "comment": {
                        "description": "(If params showGis=true) the perimeter size of the annotation"
                    },
                    "useInGetter": false,
                    "name": "perimeter"
                },
                {
                    "useInConstructor": false,
                    "type": {
                        "type": "Double"
                    },
                    "useInSetter": false,
                    "comment": {
                        "description": "(If params showGis=true) the perimeter unit (pixels=0,mm=2,)"
                    },
                    "useInGetter": false,
                    "name": "perimeterUnit"
                },
                {
                    "useInConstructor": false,
                    "type": {
                        "type": "Long"
                    },
                    "useInSetter": false,
                    "comment": {
                        "description": "(If params showMeta=true) project annotation id"
                    },
                    "useInGetter": false,
                    "name": "project"
                },
                {
                    "useInConstructor": false,
                    "type": {
                        "type": "Double"
                    },
                    "useInSetter": false,
                    "comment": {
                        "description": "(If params showTerm=true) the reliability of the prediction"
                    },
                    "useInGetter": false,
                    "name": "rate"
                },
                {
                    "useInConstructor": false,
                    "type": {
                        "type": "Long"
                    },
                    "useInSetter": false,
                    "comment": {
                        "description": "(If params showGis=true) the user id thatreview"
                    },
                    "useInGetter": false,
                    "name": "reviewUser"
                },
                {
                    "useInConstructor": false,
                    "type": {
                        "type": "Integer"
                    },
                    "useInSetter": false,
                    "comment": {
                        "description": "(If params showMeta=true) annotation is reviewed"
                    },
                    "useInGetter": false,
                    "name": "reviewed"
                },
                {
                    "useInConstructor": false,
                    "type": {
                        "type": "String"
                    },
                    "useInSetter": false,
                    "comment": {
                        "description": "(If params showMeta=true)  URL to get the small crop annotation (image view that frame the annotation)"
                    },
                    "useInGetter": false,
                    "name": "smallCropURL"
                },
                {
                    "useInConstructor": false,
                    "type": {
                        "type": "List"
                    },
                    "useInSetter": false,
                    "comment": {
                        "description": "(If params showTerm=true) the term list id"
                    },
                    "useInGetter": false,
                    "name": "term"
                },
                {
                    "useInConstructor": false,
                    "type": {
                        "type": "Date"
                    },
                    "useInSetter": false,
                    "comment": {
                        "description": "(If params showMeta=true) annotation update date"
                    },
                    "useInGetter": false,
                    "name": "updated"
                },
                {
                    "useInConstructor": false,
                    "type": {
                        "type": "String"
                    },
                    "useInSetter": false,
                    "comment": {
                        "description": "(If params showMeta=true) URL to go to the annotation on the webapp"
                    },
                    "useInGetter": false,
                    "name": "url"
                },
                {
                    "useInConstructor": false,
                    "type": {
                        "type": "Long"
                    },
                    "useInSetter": false,
                    "comment": {
                        "description": "(If params showMeta=true) user id that create annotation (if reveiwed annotation, user that create the annotation that has been validated)"
                    },
                    "useInGetter": false,
                    "name": "user"
                },
                {
                    "useInConstructor": false,
                    "type": {
                        "type": "Map"
                    },
                    "useInSetter": false,
                    "comment": {
                        "description": "(If params showTerm=true) the user id group by term id"
                    },
                    "useInGetter": false,
                    "name": "userTerm"
                },
                {
                    "useInConstructor": false,
                    "type": {
                        "type": "String"
                    },
                    "useInSetter": false,
                    "comment": {
                        "description": "(If params showWKT=true) the full polygon form in WKT"
                    },
                    "useInGetter": false,
                    "name": "wkt"
                },
                {
                    "useInConstructor": false,
                    "type": {
                        "type": "Double"
                    },
                    "useInSetter": false,
                    "comment": {
                        "description": "(If params showGis=true) the annotation centroid x"
                    },
                    "useInGetter": false,
                    "name": "x"
                },
                {
                    "useInConstructor": false,
                    "type": {
                        "type": "Double"
                    },
                    "useInSetter": false,
                    "comment": {
                        "description": "(If params showGis=true) the annotation centroid y"
                    },
                    "useInGetter": false,
                    "name": "y"
                }
            ],
            "domainName": "AnnotationListing",
            "methods": [
                {
                    "isStatic": false,
                    "isAbstract": false,
                    "type": {
                        "type": "Void"
                    },
                    "queryParameters": [
                        
                    ],
                    "verb": null,
                    "methodParameters": [
                        
                    ],
                    "pathParameters": [
                        
                    ],
                    "isPublic": true,
                    "code": {
                        "code": {
                            "JAVA": "\n\n    "
                        }
                    },
                    "allParameters": [
                        
                    ],
                    "path": null,
                    "name": "build"
                },
                {
                    "isStatic": false,
                    "isAbstract": false,
                    "type": {
                        "type": "Void"
                    },
                    "queryParameters": [
                        
                    ],
                    "verb": null,
                    "methodParameters": [
                        {
                            "type": {
                                "type": "JSONObject"
                            },
                            "name": "json"
                        }
                    ],
                    "pathParameters": [
                        
                    ],
                    "isPublic": true,
                    "code": {
                        "code": {
                            "JAVA": "\n\t\tthis.annotationTerms =JSONUtils.extractJSONList(json.get(\"annotationTerms\"));\n\t\tthis.area =JSONUtils.extractJSONDouble(json.get(\"area\"));\n\t\tthis.areaUnit =JSONUtils.extractJSONInteger(json.get(\"areaUnit\"));\n\t\tthis.clazz =JSONUtils.extractJSONString(json.get(\"class\"));\n\t\tthis.container =JSONUtils.extractJSONLong(json.get(\"container\"));\n\t\tthis.countComments =JSONUtils.extractJSONLong(json.get(\"countComments\"));\n\t\tthis.countReviewedAnnotations =JSONUtils.extractJSONInteger(json.get(\"countReviewedAnnotations\"));\n\t\tthis.created =JSONUtils.extractJSONDate(json.get(\"created\"));\n\t\tthis.creator =JSONUtils.extractJSONString(json.get(\"creator\"));\n\t\tthis.cropURL =JSONUtils.extractJSONString(json.get(\"cropURL\"));\n\t\tthis.firstname =JSONUtils.extractJSONString(json.get(\"firstname\"));\n\t\tthis.geometryCompression =JSONUtils.extractJSONDouble(json.get(\"geometryCompression\"));\n\t\tthis.id =JSONUtils.extractJSONLong(json.get(\"id\"));\n\t\tthis.idExpectedTerm =JSONUtils.extractJSONLong(json.get(\"idExpectedTerm\"));\n\t\tthis.idTerm =JSONUtils.extractJSONLong(json.get(\"idTerm\"));\n\t\tthis.image =JSONUtils.extractJSONLong(json.get(\"image\"));\n\t\tthis.imageURL =JSONUtils.extractJSONString(json.get(\"imageURL\"));\n\t\tthis.lastname =JSONUtils.extractJSONString(json.get(\"lastname\"));\n\t\tthis.originalfilename =JSONUtils.extractJSONString(json.get(\"originalfilename\"));\n\t\tthis.parentIdent =JSONUtils.extractJSONLong(json.get(\"parentIdent\"));\n\t\tthis.perimeter =JSONUtils.extractJSONDouble(json.get(\"perimeter\"));\n\t\tthis.perimeterUnit =JSONUtils.extractJSONDouble(json.get(\"perimeterUnit\"));\n\t\tthis.project =JSONUtils.extractJSONLong(json.get(\"project\"));\n\t\tthis.rate =JSONUtils.extractJSONDouble(json.get(\"rate\"));\n\t\tthis.reviewUser =JSONUtils.extractJSONLong(json.get(\"reviewUser\"));\n\t\tthis.reviewed =JSONUtils.extractJSONInteger(json.get(\"reviewed\"));\n\t\tthis.smallCropURL =JSONUtils.extractJSONString(json.get(\"smallCropURL\"));\n\t\tthis.term =JSONUtils.extractJSONList(json.get(\"term\"));\n\t\tthis.updated =JSONUtils.extractJSONDate(json.get(\"updated\"));\n\t\tthis.url =JSONUtils.extractJSONString(json.get(\"url\"));\n\t\tthis.user =JSONUtils.extractJSONLong(json.get(\"user\"));\n\t\tthis.userTerm =JSONUtils.extractJSONMap(json.get(\"userTerm\"));\n\t\tthis.wkt =JSONUtils.extractJSONString(json.get(\"wkt\"));\n\t\tthis.x =JSONUtils.extractJSONDouble(json.get(\"x\"));\n\t\tthis.y =JSONUtils.extractJSONDouble(json.get(\"y\"));\n\n    "
                        }
                    },
                    "allParameters": [
                        {
                            "type": {
                                "type": "JSONObject"
                            },
                            "name": "json"
                        }
                    ],
                    "path": null,
                    "name": "build"
                },
                {
                    "isStatic": false,
                    "isAbstract": false,
                    "type": {
                        "type": "JSONObject"
                    },
                    "queryParameters": [
                        
                    ],
                    "verb": null,
                    "methodParameters": [
                        
                    ],
                    "pathParameters": [
                        
                    ],
                    "isPublic": true,
                    "code": {
                        "code": {
                            "JAVA": "\n\t\tJSONObject json=new JSONObject();\n\n\t\treturn json;\n    "
                        }
                    },
                    "allParameters": [
                        
                    ],
                    "path": null,
                    "name": "toJSON"
                }
            ],
            "name": "AbstractAnnotationListing"
        },
        {
            "fullPackage": "be.cytomine.client.abst",
            "isAbstract": true,
            "comment": {
                "version": "0.1",
                "description": "Response for project sharing the same image (list)",
                "author": "ClientBuilder (Lo\u00EFc Rollus)"
            },
            "fields": [
                {
                    "useInConstructor": false,
                    "type": {
                        "type": "Boolean"
                    },
                    "useInSetter": false,
                    "comment": {
                        "description": "User is admin or not"
                    },
                    "useInGetter": false,
                    "name": "admin"
                },
                {
                    "useInConstructor": false,
                    "type": {
                        "type": "Long"
                    },
                    "useInSetter": false,
                    "comment": {
                        "description": "Image id"
                    },
                    "useInGetter": false,
                    "name": "imageinstanceId"
                },
                {
                    "useInConstructor": false,
                    "type": {
                        "type": "Long"
                    },
                    "useInSetter": false,
                    "comment": {
                        "description": "User id"
                    },
                    "useInGetter": false,
                    "name": "layerId"
                },
                {
                    "useInConstructor": false,
                    "type": {
                        "type": "Long"
                    },
                    "useInSetter": false,
                    "comment": {
                        "description": "User name"
                    },
                    "useInGetter": false,
                    "name": "layerName"
                },
                {
                    "useInConstructor": false,
                    "type": {
                        "type": "Long"
                    },
                    "useInSetter": false,
                    "comment": {
                        "description": "Project id"
                    },
                    "useInGetter": false,
                    "name": "projectId"
                },
                {
                    "useInConstructor": false,
                    "type": {
                        "type": "Long"
                    },
                    "useInSetter": false,
                    "comment": {
                        "description": "Project name"
                    },
                    "useInGetter": false,
                    "name": "projectName"
                }
            ],
            "domainName": "ProjectSharingSameImage",
            "methods": [
                {
                    "isStatic": false,
                    "isAbstract": false,
                    "type": {
                        "type": "Void"
                    },
                    "queryParameters": [
                        
                    ],
                    "verb": null,
                    "methodParameters": [
                        
                    ],
                    "pathParameters": [
                        
                    ],
                    "isPublic": true,
                    "code": {
                        "code": {
                            "JAVA": "\n\n    "
                        }
                    },
                    "allParameters": [
                        
                    ],
                    "path": null,
                    "name": "build"
                },
                {
                    "isStatic": false,
                    "isAbstract": false,
                    "type": {
                        "type": "Void"
                    },
                    "queryParameters": [
                        
                    ],
                    "verb": null,
                    "methodParameters": [
                        {
                            "type": {
                                "type": "JSONObject"
                            },
                            "name": "json"
                        }
                    ],
                    "pathParameters": [
                        
                    ],
                    "isPublic": true,
                    "code": {
                        "code": {
                            "JAVA": "\n\t\tthis.admin =JSONUtils.extractJSONBoolean(json.get(\"admin\"));\n\t\tthis.imageinstanceId =JSONUtils.extractJSONLong(json.get(\"imageinstanceId\"));\n\t\tthis.layerId =JSONUtils.extractJSONLong(json.get(\"layerId\"));\n\t\tthis.layerName =JSONUtils.extractJSONLong(json.get(\"layerName\"));\n\t\tthis.projectId =JSONUtils.extractJSONLong(json.get(\"projectId\"));\n\t\tthis.projectName =JSONUtils.extractJSONLong(json.get(\"projectName\"));\n\n    "
                        }
                    },
                    "allParameters": [
                        {
                            "type": {
                                "type": "JSONObject"
                            },
                            "name": "json"
                        }
                    ],
                    "path": null,
                    "name": "build"
                },
                {
                    "isStatic": false,
                    "isAbstract": false,
                    "type": {
                        "type": "JSONObject"
                    },
                    "queryParameters": [
                        
                    ],
                    "verb": null,
                    "methodParameters": [
                        
                    ],
                    "pathParameters": [
                        
                    ],
                    "isPublic": true,
                    "code": {
                        "code": {
                            "JAVA": "\n\t\tJSONObject json=new JSONObject();\n\n\t\treturn json;\n    "
                        }
                    },
                    "allParameters": [
                        
                    ],
                    "path": null,
                    "name": "toJSON"
                }
            ],
            "name": "AbstractProjectSharingSameImage"
        },
        {
            "fullPackage": "be.cytomine.client.abst",
            "isAbstract": true,
            "comment": {
                "version": "0.1",
                "description": "Response for search request",
                "author": "ClientBuilder (Lo\u00EFc Rollus)"
            },
            "fields": [
                {
                    "useInConstructor": false,
                    "type": {
                        "type": "String"
                    },
                    "useInSetter": false,
                    "comment": {
                        "description": "Domain class"
                    },
                    "useInGetter": false,
                    "name": "clazz"
                },
                {
                    "useInConstructor": false,
                    "type": {
                        "type": "Date"
                    },
                    "useInSetter": false,
                    "comment": {
                        "description": "Domain creation timestamp"
                    },
                    "useInGetter": false,
                    "name": "created"
                },
                {
                    "useInConstructor": false,
                    "type": {
                        "type": "String"
                    },
                    "useInSetter": false,
                    "comment": {
                        "description": "Domain description text"
                    },
                    "useInGetter": false,
                    "name": "description"
                },
                {
                    "useInConstructor": false,
                    "type": {
                        "type": "Long"
                    },
                    "useInSetter": false,
                    "comment": {
                        "description": "Domain id"
                    },
                    "useInGetter": false,
                    "name": "id"
                },
                {
                    "useInConstructor": false,
                    "type": {
                        "type": "String"
                    },
                    "useInSetter": false,
                    "comment": {
                        "description": "Image (storing the domain) name. If domain is project, then null"
                    },
                    "useInGetter": false,
                    "name": "imageName"
                },
                {
                    "useInConstructor": false,
                    "type": {
                        "type": "String"
                    },
                    "useInSetter": false,
                    "comment": {
                        "description": "Domain name"
                    },
                    "useInGetter": false,
                    "name": "name"
                },
                {
                    "useInConstructor": false,
                    "type": {
                        "type": "String"
                    },
                    "useInSetter": false,
                    "comment": {
                        "description": "Project (storing the domain) name"
                    },
                    "useInGetter": false,
                    "name": "projectName"
                },
                {
                    "useInConstructor": false,
                    "type": {
                        "type": "String"
                    },
                    "useInSetter": false,
                    "comment": {
                        "description": "URL to get JSON data on the current domain"
                    },
                    "useInGetter": false,
                    "name": "urlApi"
                },
                {
                    "useInConstructor": false,
                    "type": {
                        "type": "String"
                    },
                    "useInSetter": false,
                    "comment": {
                        "description": "URL to go to the domain on the webapp (GUI)"
                    },
                    "useInGetter": false,
                    "name": "urlGoTo"
                },
                {
                    "useInConstructor": false,
                    "type": {
                        "type": "List"
                    },
                    "useInSetter": false,
                    "comment": {
                        "description": "Domain thumb (if annotation: crop, if image: thumb, if project: null)"
                    },
                    "useInGetter": false,
                    "name": "urlImage"
                },
                {
                    "useInConstructor": false,
                    "type": {
                        "type": "Long"
                    },
                    "useInSetter": false,
                    "comment": {
                        "description": "Domain creator"
                    },
                    "useInGetter": false,
                    "name": "user"
                },
                {
                    "useInConstructor": false,
                    "type": {
                        "type": "String"
                    },
                    "useInSetter": false,
                    "comment": {
                        "description": "Domain creator name (Lastname Firstname)"
                    },
                    "useInGetter": false,
                    "name": "userfullname"
                }
            ],
            "domainName": "Search",
            "methods": [
                {
                    "isStatic": false,
                    "isAbstract": false,
                    "type": {
                        "type": "Void"
                    },
                    "queryParameters": [
                        
                    ],
                    "verb": null,
                    "methodParameters": [
                        
                    ],
                    "pathParameters": [
                        
                    ],
                    "isPublic": true,
                    "code": {
                        "code": {
                            "JAVA": "\n\n    "
                        }
                    },
                    "allParameters": [
                        
                    ],
                    "path": null,
                    "name": "build"
                },
                {
                    "isStatic": false,
                    "isAbstract": false,
                    "type": {
                        "type": "Void"
                    },
                    "queryParameters": [
                        
                    ],
                    "verb": null,
                    "methodParameters": [
                        {
                            "type": {
                                "type": "JSONObject"
                            },
                            "name": "json"
                        }
                    ],
                    "pathParameters": [
                        
                    ],
                    "isPublic": true,
                    "code": {
                        "code": {
                            "JAVA": "\n\t\tthis.clazz =JSONUtils.extractJSONString(json.get(\"class\"));\n\t\tthis.created =JSONUtils.extractJSONDate(json.get(\"created\"));\n\t\tthis.description =JSONUtils.extractJSONString(json.get(\"description\"));\n\t\tthis.id =JSONUtils.extractJSONLong(json.get(\"id\"));\n\t\tthis.imageName =JSONUtils.extractJSONString(json.get(\"imageName\"));\n\t\tthis.name =JSONUtils.extractJSONString(json.get(\"name\"));\n\t\tthis.projectName =JSONUtils.extractJSONString(json.get(\"projectName\"));\n\t\tthis.urlApi =JSONUtils.extractJSONString(json.get(\"urlApi\"));\n\t\tthis.urlGoTo =JSONUtils.extractJSONString(json.get(\"urlGoTo\"));\n\t\tthis.urlImage =JSONUtils.extractJSONList(json.get(\"urlImage\"));\n\t\tthis.user =JSONUtils.extractJSONLong(json.get(\"user\"));\n\t\tthis.userfullname =JSONUtils.extractJSONString(json.get(\"userfullname\"));\n\n    "
                        }
                    },
                    "allParameters": [
                        {
                            "type": {
                                "type": "JSONObject"
                            },
                            "name": "json"
                        }
                    ],
                    "path": null,
                    "name": "build"
                },
                {
                    "isStatic": false,
                    "isAbstract": false,
                    "type": {
                        "type": "JSONObject"
                    },
                    "queryParameters": [
                        
                    ],
                    "verb": null,
                    "methodParameters": [
                        
                    ],
                    "pathParameters": [
                        
                    ],
                    "isPublic": true,
                    "code": {
                        "code": {
                            "JAVA": "\n\t\tJSONObject json=new JSONObject();\n\n\t\treturn json;\n    "
                        }
                    },
                    "allParameters": [
                        
                    ],
                    "path": null,
                    "name": "toJSON"
                },
                {
                    "isStatic": true,
                    "isAbstract": false,
                    "type": {
                        "type": "Search"
                    },
                    "queryParameters": [
                        {
                            "type": {
                                "type": "List"
                            },
                            "name": "keywords"
                        },
                        {
                            "type": {
                                "type": "String"
                            },
                            "name": "operator"
                        },
                        {
                            "type": {
                                "type": "String"
                            },
                            "name": "filter"
                        },
                        {
                            "type": {
                                "type": "String"
                            },
                            "name": "projects"
                        }
                    ],
                    "verb": "GET",
                    "methodParameters": [
                        {
                            "type": {
                                "type": "Server"
                            },
                            "name": "server"
                        }
                    ],
                    "pathParameters": [
                        
                    ],
                    "isPublic": true,
                    "code": {
                        "code": {
                            "JAVA": "\n\t\tthrow new Exception(\"Not yet implemented\");\n    "
                        }
                    },
                    "allParameters": [
                        {
                            "type": {
                                "type": "Server"
                            },
                            "name": "server"
                        },
                        {
                            "type": {
                                "type": "List"
                            },
                            "name": "keywords"
                        },
                        {
                            "type": {
                                "type": "String"
                            },
                            "name": "operator"
                        },
                        {
                            "type": {
                                "type": "String"
                            },
                            "name": "filter"
                        },
                        {
                            "type": {
                                "type": "String"
                            },
                            "name": "projects"
                        }
                    ],
                    "path": "/api/search.json",
                    "name": "listResponse"
                }
            ],
            "name": "AbstractSearch"
        },
        {
            "fullPackage": "be.cytomine.client.abst",
            "isAbstract": true,
            "comment": {
                "version": "0.1",
                "description": "Response for sequence possibilities",
                "author": "ClientBuilder (Lo\u00EFc Rollus)"
            },
            "fields": [
                {
                    "useInConstructor": false,
                    "type": {
                        "type": "List"
                    },
                    "useInSetter": false,
                    "comment": {
                        "description": "Range of possible channel index for image group"
                    },
                    "useInGetter": false,
                    "name": "c"
                },
                {
                    "useInConstructor": false,
                    "type": {
                        "type": "List"
                    },
                    "useInSetter": false,
                    "comment": {
                        "description": "Image channel index"
                    },
                    "useInGetter": false,
                    "name": "channel"
                },
                {
                    "useInConstructor": false,
                    "type": {
                        "type": "List"
                    },
                    "useInSetter": false,
                    "comment": {
                        "description": "Image group id"
                    },
                    "useInGetter": false,
                    "name": "imageGroup"
                },
                {
                    "useInConstructor": false,
                    "type": {
                        "type": "List"
                    },
                    "useInSetter": false,
                    "comment": {
                        "description": "Range of possible slice index for image group"
                    },
                    "useInGetter": false,
                    "name": "s"
                },
                {
                    "useInConstructor": false,
                    "type": {
                        "type": "List"
                    },
                    "useInSetter": false,
                    "comment": {
                        "description": "Image slice index"
                    },
                    "useInGetter": false,
                    "name": "slice"
                },
                {
                    "useInConstructor": false,
                    "type": {
                        "type": "List"
                    },
                    "useInSetter": false,
                    "comment": {
                        "description": "Range of possible time index for image group"
                    },
                    "useInGetter": false,
                    "name": "t"
                },
                {
                    "useInConstructor": false,
                    "type": {
                        "type": "List"
                    },
                    "useInSetter": false,
                    "comment": {
                        "description": "Image time index"
                    },
                    "useInGetter": false,
                    "name": "time"
                },
                {
                    "useInConstructor": false,
                    "type": {
                        "type": "List"
                    },
                    "useInSetter": false,
                    "comment": {
                        "description": "Range of possible zstack index for image group"
                    },
                    "useInGetter": false,
                    "name": "z"
                },
                {
                    "useInConstructor": false,
                    "type": {
                        "type": "List"
                    },
                    "useInSetter": false,
                    "comment": {
                        "description": "Image zstack index"
                    },
                    "useInGetter": false,
                    "name": "zStack"
                }
            ],
            "domainName": "SequencePossibilties",
            "methods": [
                {
                    "isStatic": false,
                    "isAbstract": false,
                    "type": {
                        "type": "Void"
                    },
                    "queryParameters": [
                        
                    ],
                    "verb": null,
                    "methodParameters": [
                        
                    ],
                    "pathParameters": [
                        
                    ],
                    "isPublic": true,
                    "code": {
                        "code": {
                            "JAVA": "\n\n    "
                        }
                    },
                    "allParameters": [
                        
                    ],
                    "path": null,
                    "name": "build"
                },
                {
                    "isStatic": false,
                    "isAbstract": false,
                    "type": {
                        "type": "Void"
                    },
                    "queryParameters": [
                        
                    ],
                    "verb": null,
                    "methodParameters": [
                        {
                            "type": {
                                "type": "JSONObject"
                            },
                            "name": "json"
                        }
                    ],
                    "pathParameters": [
                        
                    ],
                    "isPublic": true,
                    "code": {
                        "code": {
                            "JAVA": "\n\t\tthis.c =JSONUtils.extractJSONList(json.get(\"c\"));\n\t\tthis.channel =JSONUtils.extractJSONList(json.get(\"channel\"));\n\t\tthis.imageGroup =JSONUtils.extractJSONList(json.get(\"imageGroup\"));\n\t\tthis.s =JSONUtils.extractJSONList(json.get(\"s\"));\n\t\tthis.slice =JSONUtils.extractJSONList(json.get(\"slice\"));\n\t\tthis.t =JSONUtils.extractJSONList(json.get(\"t\"));\n\t\tthis.time =JSONUtils.extractJSONList(json.get(\"time\"));\n\t\tthis.z =JSONUtils.extractJSONList(json.get(\"z\"));\n\t\tthis.zStack =JSONUtils.extractJSONList(json.get(\"zStack\"));\n\n    "
                        }
                    },
                    "allParameters": [
                        {
                            "type": {
                                "type": "JSONObject"
                            },
                            "name": "json"
                        }
                    ],
                    "path": null,
                    "name": "build"
                },
                {
                    "isStatic": false,
                    "isAbstract": false,
                    "type": {
                        "type": "JSONObject"
                    },
                    "queryParameters": [
                        
                    ],
                    "verb": null,
                    "methodParameters": [
                        
                    ],
                    "pathParameters": [
                        
                    ],
                    "isPublic": true,
                    "code": {
                        "code": {
                            "JAVA": "\n\t\tJSONObject json=new JSONObject();\n\n\t\treturn json;\n    "
                        }
                    },
                    "allParameters": [
                        
                    ],
                    "path": null,
                    "name": "toJSON"
                }
            ],
            "name": "AbstractSequencePossibilties"
        },
        {
            "fullPackage": "be.cytomine.client.abst",
            "isAbstract": true,
            "comment": {
                "version": "0.1",
                "description": "A real image store on disk, see 'image instance' for an image link in a project",
                "author": "ClientBuilder (Lo\u00EFc Rollus)"
            },
            "fields": [
                {
                    "useInConstructor": false,
                    "type": {
                        "type": "String"
                    },
                    "useInSetter": false,
                    "comment": {
                        "description": "The full class name of the domain"
                    },
                    "useInGetter": true,
                    "name": "clazz"
                },
                {
                    "useInConstructor": false,
                    "type": {
                        "type": "Long"
                    },
                    "useInSetter": false,
                    "comment": {
                        "description": "The domain id"
                    },
                    "useInGetter": true,
                    "name": "id"
                },
                {
                    "useInConstructor": false,
                    "type": {
                        "type": "Date"
                    },
                    "useInSetter": false,
                    "comment": {
                        "description": "The date of the domain creation"
                    },
                    "useInGetter": true,
                    "name": "created"
                },
                {
                    "useInConstructor": false,
                    "type": {
                        "type": "Date"
                    },
                    "useInSetter": false,
                    "comment": {
                        "description": "The date of the domain modification"
                    },
                    "useInGetter": true,
                    "name": "updated"
                },
                {
                    "useInConstructor": false,
                    "type": {
                        "type": "Date"
                    },
                    "useInSetter": false,
                    "comment": {
                        "description": "When domain was removed from Cytomine"
                    },
                    "useInGetter": true,
                    "name": "deleted"
                },
                {
                    "useInConstructor": true,
                    "type": {
                        "type": "String"
                    },
                    "useInSetter": true,
                    "comment": {
                        "description": "The exact image full filename"
                    },
                    "useInGetter": true,
                    "name": "filename"
                },
                {
                    "useInConstructor": false,
                    "type": {
                        "type": "String"
                    },
                    "useInSetter": false,
                    "comment": {
                        "description": "The image short filename (will be show in GUI)"
                    },
                    "useInGetter": true,
                    "name": "originalFilename"
                },
                {
                    "useInConstructor": false,
                    "type": {
                        "type": "Long"
                    },
                    "useInSetter": true,
                    "comment": {
                        "description": "The instrument that digitalize the image"
                    },
                    "useInGetter": true,
                    "name": "scanner"
                },
                {
                    "useInConstructor": false,
                    "type": {
                        "type": "Long"
                    },
                    "useInSetter": true,
                    "comment": {
                        "description": "The source of the image (human, annimal,...)"
                    },
                    "useInGetter": true,
                    "name": "sample"
                },
                {
                    "useInConstructor": true,
                    "type": {
                        "type": "String"
                    },
                    "useInSetter": true,
                    "comment": {
                        "description": "The full image path directory"
                    },
                    "useInGetter": true,
                    "name": "path"
                },
                {
                    "useInConstructor": true,
                    "type": {
                        "type": "Long"
                    },
                    "useInSetter": true,
                    "comment": {
                        "description": "The image type. For creation, use the ext (not the mime id!)"
                    },
                    "useInGetter": true,
                    "name": "mime"
                },
                {
                    "useInConstructor": false,
                    "type": {
                        "type": "Integer"
                    },
                    "useInSetter": true,
                    "comment": {
                        "description": "The image width lenght"
                    },
                    "useInGetter": true,
                    "name": "width"
                },
                {
                    "useInConstructor": false,
                    "type": {
                        "type": "Integer"
                    },
                    "useInSetter": true,
                    "comment": {
                        "description": "The image height lenght"
                    },
                    "useInGetter": true,
                    "name": "height"
                },
                {
                    "useInConstructor": false,
                    "type": {
                        "type": "Object"
                    },
                    "useInSetter": true,
                    "comment": {
                        "description": "Undefined"
                    },
                    "useInGetter": true,
                    "name": "depth"
                },
                {
                    "useInConstructor": true,
                    "type": {
                        "type": "Double"
                    },
                    "useInSetter": true,
                    "comment": {
                        "description": "The image resolution (microm per pixel)"
                    },
                    "useInGetter": true,
                    "name": "resolution"
                },
                {
                    "useInConstructor": true,
                    "type": {
                        "type": "Integer"
                    },
                    "useInSetter": true,
                    "comment": {
                        "description": "The image max zoom"
                    },
                    "useInGetter": true,
                    "name": "magnification"
                },
                {
                    "useInConstructor": false,
                    "type": {
                        "type": "String"
                    },
                    "useInSetter": false,
                    "comment": {
                        "description": "URL to get abstract image short view (htumb)"
                    },
                    "useInGetter": true,
                    "name": "thumb"
                },
                {
                    "useInConstructor": false,
                    "type": {
                        "type": "Object"
                    },
                    "useInSetter": true,
                    "comment": {
                        "description": "Undefined"
                    },
                    "useInGetter": true,
                    "name": "fullPath"
                },
                {
                    "useInConstructor": false,
                    "type": {
                        "type": "Object"
                    },
                    "useInSetter": true,
                    "comment": {
                        "description": "Undefined"
                    },
                    "useInGetter": true,
                    "name": "macroURL"
                },
                {
                    "useInConstructor": false,
                    "type": {
                        "type": "String"
                    },
                    "useInSetter": false,
                    "comment": {
                        "description": "URL to get image file metadata"
                    },
                    "useInGetter": true,
                    "name": "metadataUrl"
                },
                {
                    "useInConstructor": false,
                    "type": {
                        "type": "Long"
                    },
                    "useInSetter": true,
                    "comment": {
                        "description": "The image owner"
                    },
                    "useInGetter": false,
                    "name": "user"
                }
            ],
            "domainName": "AbstractImage",
            "methods": [
                {
                    "isStatic": false,
                    "isAbstract": false,
                    "type": {
                        "type": "Void"
                    },
                    "queryParameters": [
                        
                    ],
                    "verb": null,
                    "methodParameters": [
                        {
                            "type": {
                                "type": "String"
                            },
                            "name": "filename"
                        },
                        {
                            "type": {
                                "type": "String"
                            },
                            "name": "path"
                        },
                        {
                            "type": {
                                "type": "Long"
                            },
                            "name": "mime"
                        },
                        {
                            "type": {
                                "type": "Double"
                            },
                            "name": "resolution"
                        },
                        {
                            "type": {
                                "type": "Integer"
                            },
                            "name": "magnification"
                        }
                    ],
                    "pathParameters": [
                        
                    ],
                    "isPublic": true,
                    "code": {
                        "code": {
                            "JAVA": "\n\t\tthis.filename=filename;\n\t\tthis.path=path;\n\t\tthis.mime=mime;\n\t\tthis.resolution=resolution;\n\t\tthis.magnification=magnification;\n\n    "
                        }
                    },
                    "allParameters": [
                        {
                            "type": {
                                "type": "String"
                            },
                            "name": "filename"
                        },
                        {
                            "type": {
                                "type": "String"
                            },
                            "name": "path"
                        },
                        {
                            "type": {
                                "type": "Long"
                            },
                            "name": "mime"
                        },
                        {
                            "type": {
                                "type": "Double"
                            },
                            "name": "resolution"
                        },
                        {
                            "type": {
                                "type": "Integer"
                            },
                            "name": "magnification"
                        }
                    ],
                    "path": null,
                    "name": "build"
                },
                {
                    "isStatic": false,
                    "isAbstract": false,
                    "type": {
                        "type": "Void"
                    },
                    "queryParameters": [
                        
                    ],
                    "verb": null,
                    "methodParameters": [
                        {
                            "type": {
                                "type": "JSONObject"
                            },
                            "name": "json"
                        }
                    ],
                    "pathParameters": [
                        
                    ],
                    "isPublic": true,
                    "code": {
                        "code": {
                            "JAVA": "\n\t\tthis.clazz =JSONUtils.extractJSONString(json.get(\"class\"));\n\t\tthis.id =JSONUtils.extractJSONLong(json.get(\"id\"));\n\t\tthis.created =JSONUtils.extractJSONDate(json.get(\"created\"));\n\t\tthis.updated =JSONUtils.extractJSONDate(json.get(\"updated\"));\n\t\tthis.deleted =JSONUtils.extractJSONDate(json.get(\"deleted\"));\n\t\tthis.filename =JSONUtils.extractJSONString(json.get(\"filename\"));\n\t\tthis.originalFilename =JSONUtils.extractJSONString(json.get(\"originalFilename\"));\n\t\tthis.scanner =JSONUtils.extractJSONLong(json.get(\"scanner\"));\n\t\tthis.sample =JSONUtils.extractJSONLong(json.get(\"sample\"));\n\t\tthis.path =JSONUtils.extractJSONString(json.get(\"path\"));\n\t\tthis.mime =JSONUtils.extractJSONLong(json.get(\"mime\"));\n\t\tthis.width =JSONUtils.extractJSONInteger(json.get(\"width\"));\n\t\tthis.height =JSONUtils.extractJSONInteger(json.get(\"height\"));\n\t\tthis.depth =JSONUtils.extractJSONObject(json.get(\"depth\"));\n\t\tthis.resolution =JSONUtils.extractJSONDouble(json.get(\"resolution\"));\n\t\tthis.magnification =JSONUtils.extractJSONInteger(json.get(\"magnification\"));\n\t\tthis.thumb =JSONUtils.extractJSONString(json.get(\"thumb\"));\n\t\tthis.fullPath =JSONUtils.extractJSONObject(json.get(\"fullPath\"));\n\t\tthis.macroURL =JSONUtils.extractJSONObject(json.get(\"macroURL\"));\n\t\tthis.metadataUrl =JSONUtils.extractJSONString(json.get(\"metadataUrl\"));\n\t\tthis.user =JSONUtils.extractJSONLong(json.get(\"user\"));\n\n    "
                        }
                    },
                    "allParameters": [
                        {
                            "type": {
                                "type": "JSONObject"
                            },
                            "name": "json"
                        }
                    ],
                    "path": null,
                    "name": "build"
                },
                {
                    "isStatic": false,
                    "isAbstract": false,
                    "type": {
                        "type": "JSONObject"
                    },
                    "queryParameters": [
                        
                    ],
                    "verb": null,
                    "methodParameters": [
                        
                    ],
                    "pathParameters": [
                        
                    ],
                    "isPublic": true,
                    "code": {
                        "code": {
                            "JAVA": "\n\t\tJSONObject json=new JSONObject();\n\t\tjson.put(\"class\",JSONUtils.formatJSON(this.clazz));\n\t\tjson.put(\"id\",JSONUtils.formatJSON(this.id));\n\t\tjson.put(\"created\",JSONUtils.formatJSON(this.created));\n\t\tjson.put(\"updated\",JSONUtils.formatJSON(this.updated));\n\t\tjson.put(\"deleted\",JSONUtils.formatJSON(this.deleted));\n\t\tjson.put(\"filename\",JSONUtils.formatJSON(this.filename));\n\t\tjson.put(\"originalFilename\",JSONUtils.formatJSON(this.originalFilename));\n\t\tjson.put(\"scanner\",JSONUtils.formatJSON(this.scanner));\n\t\tjson.put(\"sample\",JSONUtils.formatJSON(this.sample));\n\t\tjson.put(\"path\",JSONUtils.formatJSON(this.path));\n\t\tjson.put(\"mime\",JSONUtils.formatJSON(this.mime));\n\t\tjson.put(\"width\",JSONUtils.formatJSON(this.width));\n\t\tjson.put(\"height\",JSONUtils.formatJSON(this.height));\n\t\tjson.put(\"depth\",JSONUtils.formatJSON(this.depth));\n\t\tjson.put(\"resolution\",JSONUtils.formatJSON(this.resolution));\n\t\tjson.put(\"magnification\",JSONUtils.formatJSON(this.magnification));\n\t\tjson.put(\"thumb\",JSONUtils.formatJSON(this.thumb));\n\t\tjson.put(\"fullPath\",JSONUtils.formatJSON(this.fullPath));\n\t\tjson.put(\"macroURL\",JSONUtils.formatJSON(this.macroURL));\n\t\tjson.put(\"metadataUrl\",JSONUtils.formatJSON(this.metadataUrl));\n\n\t\treturn json;\n    "
                        }
                    },
                    "allParameters": [
                        
                    ],
                    "path": null,
                    "name": "toJSON"
                },
                {
                    "isStatic": true,
                    "isAbstract": false,
                    "type": {
                        "type": "AbstractImage"
                    },
                    "queryParameters": [
                        
                    ],
                    "verb": "GET",
                    "methodParameters": [
                        {
                            "type": {
                                "type": "Server"
                            },
                            "name": "server"
                        }
                    ],
                    "pathParameters": [
                        {
                            "type": {
                                "type": "Long"
                            },
                            "name": "id"
                        }
                    ],
                    "isPublic": true,
                    "code": {
                        "code": {
                            "JAVA": "\n\t\tString path = \"/api/abstractimage/{id}.json?\";\n\t\tpath = path.replace(\"{id}\",id+\"\");\n\n\t\tJSONObject json = server.doGET(path);\n\t\tAbstractImage domain = new AbstractImage();\n\t\tdomain.build(json);\n\t\treturn domain;\n\n    "
                        }
                    },
                    "allParameters": [
                        {
                            "type": {
                                "type": "Server"
                            },
                            "name": "server"
                        },
                        {
                            "type": {
                                "type": "Long"
                            },
                            "name": "id"
                        }
                    ],
                    "path": "/api/abstractimage/{id}.json",
                    "name": "get"
                },
                {
                    "isStatic": true,
                    "isAbstract": false,
                    "type": {
                        "type": "Metadata:x"
                    },
                    "queryParameters": [
                        {
                            "type": {
                                "type": "Boolean"
                            },
                            "name": "extract"
                        }
                    ],
                    "verb": "GET",
                    "methodParameters": [
                        {
                            "type": {
                                "type": "Server"
                            },
                            "name": "server"
                        }
                    ],
                    "pathParameters": [
                        {
                            "type": {
                                "type": "Long"
                            },
                            "name": "id"
                        }
                    ],
                    "isPublic": true,
                    "code": {
                        "code": {
                            "JAVA": "\n\t\tthrow new Exception(\"Not yet implemented\");\n    "
                        }
                    },
                    "allParameters": [
                        {
                            "type": {
                                "type": "Server"
                            },
                            "name": "server"
                        },
                        {
                            "type": {
                                "type": "Long"
                            },
                            "name": "id"
                        },
                        {
                            "type": {
                                "type": "Boolean"
                            },
                            "name": "extract"
                        }
                    ],
                    "path": "/api/abstractimage/{id}/metadata.json",
                    "name": "metadata"
                },
                {
                    "isStatic": true,
                    "isAbstract": false,
                    "type": {
                        "type": "Image(bytes)"
                    },
                    "queryParameters": [
                        
                    ],
                    "verb": "GET",
                    "methodParameters": [
                        {
                            "type": {
                                "type": "Server"
                            },
                            "name": "server"
                        }
                    ],
                    "pathParameters": [
                        {
                            "type": {
                                "type": "Long"
                            },
                            "name": "id"
                        },
                        {
                            "type": {
                                "type": "String"
                            },
                            "name": "label"
                        }
                    ],
                    "isPublic": true,
                    "code": {
                        "code": {
                            "JAVA": "\n\t\tthrow new Exception(\"Not yet implemented\");\n    "
                        }
                    },
                    "allParameters": [
                        {
                            "type": {
                                "type": "Server"
                            },
                            "name": "server"
                        },
                        {
                            "type": {
                                "type": "Long"
                            },
                            "name": "id"
                        },
                        {
                            "type": {
                                "type": "String"
                            },
                            "name": "label"
                        }
                    ],
                    "path": "/api/abstractimage/{id}/associated/{label}.json",
                    "name": "label"
                },
                {
                    "isStatic": true,
                    "isAbstract": false,
                    "type": {
                        "type": "Image(bytes)"
                    },
                    "queryParameters": [
                        
                    ],
                    "verb": "GET",
                    "methodParameters": [
                        {
                            "type": {
                                "type": "Server"
                            },
                            "name": "server"
                        }
                    ],
                    "pathParameters": [
                        {
                            "type": {
                                "type": "Long"
                            },
                            "name": "id"
                        }
                    ],
                    "isPublic": true,
                    "code": {
                        "code": {
                            "JAVA": "\n\t\tthrow new Exception(\"Not yet implemented\");\n    "
                        }
                    },
                    "allParameters": [
                        {
                            "type": {
                                "type": "Server"
                            },
                            "name": "server"
                        },
                        {
                            "type": {
                                "type": "Long"
                            },
                            "name": "id"
                        }
                    ],
                    "path": "/api/abstractimage/{id}/preview.json",
                    "name": "preview"
                },
                {
                    "isStatic": true,
                    "isAbstract": false,
                    "type": {
                        "type": "Image(bytes)"
                    },
                    "queryParameters": [
                        
                    ],
                    "verb": "GET",
                    "methodParameters": [
                        {
                            "type": {
                                "type": "Server"
                            },
                            "name": "server"
                        }
                    ],
                    "pathParameters": [
                        {
                            "type": {
                                "type": "Long"
                            },
                            "name": "id"
                        }
                    ],
                    "isPublic": true,
                    "code": {
                        "code": {
                            "JAVA": "\n\t\tthrow new Exception(\"Not yet implemented\");\n    "
                        }
                    },
                    "allParameters": [
                        {
                            "type": {
                                "type": "Server"
                            },
                            "name": "server"
                        },
                        {
                            "type": {
                                "type": "Long"
                            },
                            "name": "id"
                        }
                    ],
                    "path": "/api/abstractimage/{id}/thumb.json",
                    "name": "thumb"
                },
                {
                    "isStatic": true,
                    "isAbstract": false,
                    "type": {
                        "type": "URLList"
                    },
                    "queryParameters": [
                        {
                            "type": {
                                "type": "Boolean"
                            },
                            "name": "merge"
                        },
                        {
                            "type": {
                                "type": "List"
                            },
                            "name": "channels"
                        },
                        {
                            "type": {
                                "type": "List"
                            },
                            "name": "colors"
                        }
                    ],
                    "verb": "GET",
                    "methodParameters": [
                        {
                            "type": {
                                "type": "Server"
                            },
                            "name": "server"
                        }
                    ],
                    "pathParameters": [
                        {
                            "type": {
                                "type": "Long"
                            },
                            "name": "id"
                        }
                    ],
                    "isPublic": true,
                    "code": {
                        "code": {
                            "JAVA": "\n\t\tthrow new Exception(\"Not yet implemented\");\n    "
                        }
                    },
                    "allParameters": [
                        {
                            "type": {
                                "type": "Server"
                            },
                            "name": "server"
                        },
                        {
                            "type": {
                                "type": "Long"
                            },
                            "name": "id"
                        },
                        {
                            "type": {
                                "type": "Boolean"
                            },
                            "name": "merge"
                        },
                        {
                            "type": {
                                "type": "List"
                            },
                            "name": "channels"
                        },
                        {
                            "type": {
                                "type": "List"
                            },
                            "name": "colors"
                        }
                    ],
                    "path": "/api/abstractimage/{id}/imageservers.json",
                    "name": "imageServers"
                },
                {
                    "isStatic": true,
                    "isAbstract": false,
                    "type": {
                        "type": "AssociatedImageLabels"
                    },
                    "queryParameters": [
                        {
                            "type": {
                                "type": "Integer"
                            },
                            "name": "max"
                        },
                        {
                            "type": {
                                "type": "Integer"
                            },
                            "name": "offset"
                        }
                    ],
                    "verb": "GET",
                    "methodParameters": [
                        {
                            "type": {
                                "type": "Server"
                            },
                            "name": "server"
                        }
                    ],
                    "pathParameters": [
                        {
                            "type": {
                                "type": "Long"
                            },
                            "name": "id"
                        }
                    ],
                    "isPublic": true,
                    "code": {
                        "code": {
                            "JAVA": "\n\t\tthrow new Exception(\"Not yet implemented\");\n    "
                        }
                    },
                    "allParameters": [
                        {
                            "type": {
                                "type": "Server"
                            },
                            "name": "server"
                        },
                        {
                            "type": {
                                "type": "Long"
                            },
                            "name": "id"
                        },
                        {
                            "type": {
                                "type": "Integer"
                            },
                            "name": "max"
                        },
                        {
                            "type": {
                                "type": "Integer"
                            },
                            "name": "offset"
                        }
                    ],
                    "path": "/api/abstractimage/{id}/associated.json",
                    "name": "associated"
                },
                {
                    "isStatic": true,
                    "isAbstract": false,
                    "type": {
                        "type": "ImageProperty"
                    },
                    "queryParameters": [
                        {
                            "type": {
                                "type": "Integer"
                            },
                            "name": "max"
                        },
                        {
                            "type": {
                                "type": "Integer"
                            },
                            "name": "offset"
                        }
                    ],
                    "verb": "GET",
                    "methodParameters": [
                        {
                            "type": {
                                "type": "Server"
                            },
                            "name": "server"
                        }
                    ],
                    "pathParameters": [
                        {
                            "type": {
                                "type": "Long"
                            },
                            "name": "id"
                        }
                    ],
                    "isPublic": true,
                    "code": {
                        "code": {
                            "JAVA": "\n\t\tthrow new Exception(\"Not yet implemented\");\n    "
                        }
                    },
                    "allParameters": [
                        {
                            "type": {
                                "type": "Server"
                            },
                            "name": "server"
                        },
                        {
                            "type": {
                                "type": "Long"
                            },
                            "name": "id"
                        },
                        {
                            "type": {
                                "type": "Integer"
                            },
                            "name": "max"
                        },
                        {
                            "type": {
                                "type": "Integer"
                            },
                            "name": "offset"
                        }
                    ],
                    "path": "/api/abstractimage/{id}/property.json",
                    "name": "imageProperties"
                },
                {
                    "isStatic": true,
                    "isAbstract": false,
                    "type": {
                        "type": "ImageProperty"
                    },
                    "queryParameters": [
                        {
                            "type": {
                                "type": "Integer"
                            },
                            "name": "max"
                        },
                        {
                            "type": {
                                "type": "Integer"
                            },
                            "name": "offset"
                        }
                    ],
                    "verb": "GET",
                    "methodParameters": [
                        {
                            "type": {
                                "type": "Server"
                            },
                            "name": "server"
                        }
                    ],
                    "pathParameters": [
                        {
                            "type": {
                                "type": "Long"
                            },
                            "name": "id"
                        }
                    ],
                    "isPublic": true,
                    "code": {
                        "code": {
                            "JAVA": "\n\t\tthrow new Exception(\"Not yet implemented\");\n    "
                        }
                    },
                    "allParameters": [
                        {
                            "type": {
                                "type": "Server"
                            },
                            "name": "server"
                        },
                        {
                            "type": {
                                "type": "Long"
                            },
                            "name": "id"
                        },
                        {
                            "type": {
                                "type": "Integer"
                            },
                            "name": "max"
                        },
                        {
                            "type": {
                                "type": "Integer"
                            },
                            "name": "offset"
                        }
                    ],
                    "path": "/api/abstractimage/{id}/property/{imageproperty}.json",
                    "name": "imageProperty"
                },
                {
                    "isStatic": true,
                    "isAbstract": false,
                    "type": {
                        "type": "AbstractImage"
                    },
                    "queryParameters": [
                        {
                            "type": {
                                "type": "Integer"
                            },
                            "name": "max"
                        },
                        {
                            "type": {
                                "type": "Integer"
                            },
                            "name": "offset"
                        }
                    ],
                    "verb": "GET",
                    "methodParameters": [
                        {
                            "type": {
                                "type": "Server"
                            },
                            "name": "server"
                        }
                    ],
                    "pathParameters": [
                        {
                            "type": {
                                "type": "Long"
                            },
                            "name": "id"
                        }
                    ],
                    "isPublic": true,
                    "code": {
                        "code": {
                            "JAVA": "\n\t\tthrow new Exception(\"Not yet implemented\");\n    "
                        }
                    },
                    "allParameters": [
                        {
                            "type": {
                                "type": "Server"
                            },
                            "name": "server"
                        },
                        {
                            "type": {
                                "type": "Long"
                            },
                            "name": "id"
                        },
                        {
                            "type": {
                                "type": "Integer"
                            },
                            "name": "max"
                        },
                        {
                            "type": {
                                "type": "Integer"
                            },
                            "name": "offset"
                        }
                    ],
                    "path": "/api/project/{id}/image.json",
                    "name": "listByProject"
                },
                {
                    "isStatic": false,
                    "isAbstract": false,
                    "type": {
                        "type": "Void"
                    },
                    "queryParameters": [
                        
                    ],
                    "verb": "POST",
                    "methodParameters": [
                        {
                            "type": {
                                "type": "Server"
                            },
                            "name": "server"
                        }
                    ],
                    "pathParameters": [
                        
                    ],
                    "isPublic": true,
                    "code": {
                        "code": {
                            "JAVA": "\n\t\tString path = \"/api/abstractimage.json?\";\n\n\t\tJSONObject json = server.doPOST(path,this.toJSON());\n\n\t\tthis.build((JSONObject)json.get(\"abstractimage\"));\n\n    "
                        }
                    },
                    "allParameters": [
                        {
                            "type": {
                                "type": "Server"
                            },
                            "name": "server"
                        }
                    ],
                    "path": "/api/abstractimage.json",
                    "name": "add"
                },
                {
                    "isStatic": true,
                    "isAbstract": false,
                    "type": {
                        "type": "AbstractImage"
                    },
                    "queryParameters": [
                        {
                            "type": {
                                "type": "String"
                            },
                            "name": "sortColumn"
                        },
                        {
                            "type": {
                                "type": "String"
                            },
                            "name": "sortDirection"
                        },
                        {
                            "type": {
                                "type": "String"
                            },
                            "name": "search"
                        },
                        {
                            "type": {
                                "type": "Integer"
                            },
                            "name": "max"
                        },
                        {
                            "type": {
                                "type": "Integer"
                            },
                            "name": "offset"
                        }
                    ],
                    "verb": "GET",
                    "methodParameters": [
                        {
                            "type": {
                                "type": "Server"
                            },
                            "name": "server"
                        }
                    ],
                    "pathParameters": [
                        {
                            "type": {
                                "type": "Long"
                            },
                            "name": "project"
                        }
                    ],
                    "isPublic": true,
                    "code": {
                        "code": {
                            "JAVA": "\n\t\tthrow new Exception(\"Not yet implemented\");\n    "
                        }
                    },
                    "allParameters": [
                        {
                            "type": {
                                "type": "Server"
                            },
                            "name": "server"
                        },
                        {
                            "type": {
                                "type": "Long"
                            },
                            "name": "project"
                        },
                        {
                            "type": {
                                "type": "String"
                            },
                            "name": "sortColumn"
                        },
                        {
                            "type": {
                                "type": "String"
                            },
                            "name": "sortDirection"
                        },
                        {
                            "type": {
                                "type": "String"
                            },
                            "name": "search"
                        },
                        {
                            "type": {
                                "type": "Integer"
                            },
                            "name": "max"
                        },
                        {
                            "type": {
                                "type": "Integer"
                            },
                            "name": "offset"
                        }
                    ],
                    "path": "/api/abstractimage.json",
                    "name": "list"
                },
                {
                    "isStatic": false,
                    "isAbstract": false,
                    "type": {
                        "type": "Void"
                    },
                    "queryParameters": [
                        
                    ],
                    "verb": "DELETE",
                    "methodParameters": [
                        {
                            "type": {
                                "type": "Server"
                            },
                            "name": "server"
                        }
                    ],
                    "pathParameters": [
                        
                    ],
                    "isPublic": true,
                    "code": {
                        "code": {
                            "JAVA": "\n\t\tString path = \"/api/abstractimage/{id}.json?\";\n\t\tpath = path.replace(\"{id}\",getId()+\"\");\n\n\t\tserver.doDELETE(path);\n\t\tbuild(new JSONObject());\n\n    "
                        }
                    },
                    "allParameters": [
                        {
                            "type": {
                                "type": "Server"
                            },
                            "name": "server"
                        }
                    ],
                    "path": "/api/abstractimage/{id}.json",
                    "name": "delete"
                },
                {
                    "isStatic": false,
                    "isAbstract": false,
                    "type": {
                        "type": "Void"
                    },
                    "queryParameters": [
                        
                    ],
                    "verb": "PUT",
                    "methodParameters": [
                        {
                            "type": {
                                "type": "Server"
                            },
                            "name": "server"
                        }
                    ],
                    "pathParameters": [
                        
                    ],
                    "isPublic": true,
                    "code": {
                        "code": {
                            "JAVA": "\n\t\tString path = \"/api/abstractimage/{id}.json?\";\n\t\tpath = path.replace(\"{id}\",getId()+\"\");\n\n\t\tJSONObject json = server.doPUT(path,this.toJSON());\n\n\t\tthis.build((JSONObject)json.get(\"abstractimage\"));\n\n    "
                        }
                    },
                    "allParameters": [
                        {
                            "type": {
                                "type": "Server"
                            },
                            "name": "server"
                        }
                    ],
                    "path": "/api/abstractimage/{id}.json",
                    "name": "edit"
                }
            ],
            "name": "AbstractAbstractImage"
        },
        {
            "fullPackage": "be.cytomine.client.abst",
            "isAbstract": true,
            "comment": {
                "version": "0.1",
                "description": "",
                "author": "ClientBuilder (Lo\u00EFc Rollus)"
            },
            "fields": [
                {
                    "useInConstructor": false,
                    "type": {
                        "type": "String"
                    },
                    "useInSetter": false,
                    "comment": {
                        "description": "The full class name of the domain"
                    },
                    "useInGetter": true,
                    "name": "clazz"
                },
                {
                    "useInConstructor": false,
                    "type": {
                        "type": "Long"
                    },
                    "useInSetter": false,
                    "comment": {
                        "description": "The domain id"
                    },
                    "useInGetter": true,
                    "name": "id"
                },
                {
                    "useInConstructor": false,
                    "type": {
                        "type": "Date"
                    },
                    "useInSetter": false,
                    "comment": {
                        "description": "The date of the domain creation"
                    },
                    "useInGetter": true,
                    "name": "created"
                },
                {
                    "useInConstructor": false,
                    "type": {
                        "type": "Date"
                    },
                    "useInSetter": false,
                    "comment": {
                        "description": "The date of the domain modification"
                    },
                    "useInGetter": true,
                    "name": "updated"
                },
                {
                    "useInConstructor": false,
                    "type": {
                        "type": "Date"
                    },
                    "useInSetter": false,
                    "comment": {
                        "description": "When domain was removed from Cytomine"
                    },
                    "useInGetter": true,
                    "name": "deleted"
                },
                {
                    "useInConstructor": true,
                    "type": {
                        "type": "String"
                    },
                    "useInSetter": true,
                    "comment": {
                        "description": "The WKT of the annotation form"
                    },
                    "useInGetter": true,
                    "name": "location"
                },
                {
                    "useInConstructor": true,
                    "type": {
                        "type": "Long"
                    },
                    "useInSetter": true,
                    "comment": {
                        "description": "The image id of the annotation"
                    },
                    "useInGetter": true,
                    "name": "image"
                },
                {
                    "useInConstructor": false,
                    "type": {
                        "type": "Double"
                    },
                    "useInSetter": true,
                    "comment": {
                        "description": "The geometry compression rate used to simplify the annotation (during creation)"
                    },
                    "useInGetter": true,
                    "name": "geometryCompression"
                },
                {
                    "useInConstructor": true,
                    "type": {
                        "type": "Long"
                    },
                    "useInSetter": true,
                    "comment": {
                        "description": "The project id of the annotation"
                    },
                    "useInGetter": true,
                    "name": "project"
                },
                {
                    "useInConstructor": false,
                    "type": {
                        "type": "Object"
                    },
                    "useInSetter": true,
                    "comment": {
                        "description": "Undefined"
                    },
                    "useInGetter": true,
                    "name": "container"
                },
                {
                    "useInConstructor": true,
                    "type": {
                        "type": "Long"
                    },
                    "useInSetter": true,
                    "comment": {
                        "description": "The user job that add this annotation"
                    },
                    "useInGetter": true,
                    "name": "user"
                },
                {
                    "useInConstructor": false,
                    "type": {
                        "type": "Long"
                    },
                    "useInSetter": false,
                    "comment": {
                        "description": "The number of comments added by a user on this annotation"
                    },
                    "useInGetter": true,
                    "name": "nbComments"
                },
                {
                    "useInConstructor": false,
                    "type": {
                        "type": "Double"
                    },
                    "useInSetter": false,
                    "comment": {
                        "description": "The annotation form area"
                    },
                    "useInGetter": true,
                    "name": "area"
                },
                {
                    "useInConstructor": false,
                    "type": {
                        "type": "Integer"
                    },
                    "useInSetter": false,
                    "comment": {
                        "description": "The annotation unit used for perimeter (pixels=0,mm=2,)"
                    },
                    "useInGetter": true,
                    "name": "perimeterUnit"
                },
                {
                    "useInConstructor": false,
                    "type": {
                        "type": "Integer"
                    },
                    "useInSetter": false,
                    "comment": {
                        "description": "The annotation unit used for area (pixels\u00B2=1,micron\u00B2=3)"
                    },
                    "useInGetter": true,
                    "name": "areaUnit"
                },
                {
                    "useInConstructor": false,
                    "type": {
                        "type": "Double"
                    },
                    "useInSetter": false,
                    "comment": {
                        "description": "The annotation form perimeter"
                    },
                    "useInGetter": true,
                    "name": "perimeter"
                },
                {
                    "useInConstructor": false,
                    "type": {
                        "type": "Map"
                    },
                    "useInSetter": false,
                    "comment": {
                        "description": "X,Y coord of the annotation centroid"
                    },
                    "useInGetter": true,
                    "name": "centroid"
                },
                {
                    "useInConstructor": false,
                    "type": {
                        "type": "List"
                    },
                    "useInSetter": true,
                    "comment": {
                        "description": "List of term id mapped with this annotation"
                    },
                    "useInGetter": true,
                    "name": "term"
                },
                {
                    "useInConstructor": false,
                    "type": {
                        "type": "Double"
                    },
                    "useInSetter": false,
                    "comment": {
                        "description": "The similarity rate for this annotation compare to another annotation (from retrieval)"
                    },
                    "useInGetter": true,
                    "name": "similarity"
                },
                {
                    "useInConstructor": false,
                    "type": {
                        "type": "Double"
                    },
                    "useInSetter": false,
                    "comment": {
                        "description": "The reliability value estimated by the software for the mapping between annotation and term"
                    },
                    "useInGetter": true,
                    "name": "rate"
                },
                {
                    "useInConstructor": false,
                    "type": {
                        "type": "Long"
                    },
                    "useInSetter": false,
                    "comment": {
                        "description": "The id of the term map with this annotation by a the software"
                    },
                    "useInGetter": true,
                    "name": "idTerm"
                },
                {
                    "useInConstructor": false,
                    "type": {
                        "type": "Long"
                    },
                    "useInSetter": false,
                    "comment": {
                        "description": "The id of the real term (corresponding to the term add by a real user)"
                    },
                    "useInGetter": true,
                    "name": "idExpectedTerm"
                },
                {
                    "useInConstructor": false,
                    "type": {
                        "type": "String"
                    },
                    "useInSetter": false,
                    "comment": {
                        "description": "URL to get the annotation crop"
                    },
                    "useInGetter": true,
                    "name": "cropURL"
                },
                {
                    "useInConstructor": false,
                    "type": {
                        "type": "String"
                    },
                    "useInSetter": false,
                    "comment": {
                        "description": "URL to get a small annotation crop (<256px)"
                    },
                    "useInGetter": true,
                    "name": "smallCropURL"
                },
                {
                    "useInConstructor": false,
                    "type": {
                        "type": "String"
                    },
                    "useInSetter": false,
                    "comment": {
                        "description": "URL to go to the annotation on the image"
                    },
                    "useInGetter": true,
                    "name": "url"
                },
                {
                    "useInConstructor": false,
                    "type": {
                        "type": "String"
                    },
                    "useInSetter": false,
                    "comment": {
                        "description": "URL to go to the image"
                    },
                    "useInGetter": true,
                    "name": "imageURL"
                },
                {
                    "useInConstructor": false,
                    "type": {
                        "type": "Boolean"
                    },
                    "useInSetter": false,
                    "comment": {
                        "description": "True if annotation has at least one review"
                    },
                    "useInGetter": true,
                    "name": "reviewed"
                },
                {
                    "useInConstructor": false,
                    "type": {
                        "type": "Integer"
                    },
                    "useInSetter": false,
                    "comment": {
                        "description": "The number of reviewed annotations for this annotation"
                    },
                    "useInGetter": false,
                    "name": "countReviewedAnnotations"
                }
            ],
            "domainName": "AlgoAnnotation",
            "methods": [
                {
                    "isStatic": false,
                    "isAbstract": false,
                    "type": {
                        "type": "Void"
                    },
                    "queryParameters": [
                        
                    ],
                    "verb": null,
                    "methodParameters": [
                        {
                            "type": {
                                "type": "String"
                            },
                            "name": "location"
                        },
                        {
                            "type": {
                                "type": "Long"
                            },
                            "name": "image"
                        },
                        {
                            "type": {
                                "type": "Long"
                            },
                            "name": "project"
                        },
                        {
                            "type": {
                                "type": "Long"
                            },
                            "name": "user"
                        }
                    ],
                    "pathParameters": [
                        
                    ],
                    "isPublic": true,
                    "code": {
                        "code": {
                            "JAVA": "\n\t\tthis.location=location;\n\t\tthis.image=image;\n\t\tthis.project=project;\n\t\tthis.user=user;\n\n    "
                        }
                    },
                    "allParameters": [
                        {
                            "type": {
                                "type": "String"
                            },
                            "name": "location"
                        },
                        {
                            "type": {
                                "type": "Long"
                            },
                            "name": "image"
                        },
                        {
                            "type": {
                                "type": "Long"
                            },
                            "name": "project"
                        },
                        {
                            "type": {
                                "type": "Long"
                            },
                            "name": "user"
                        }
                    ],
                    "path": null,
                    "name": "build"
                },
                {
                    "isStatic": false,
                    "isAbstract": false,
                    "type": {
                        "type": "Void"
                    },
                    "queryParameters": [
                        
                    ],
                    "verb": null,
                    "methodParameters": [
                        {
                            "type": {
                                "type": "JSONObject"
                            },
                            "name": "json"
                        }
                    ],
                    "pathParameters": [
                        
                    ],
                    "isPublic": true,
                    "code": {
                        "code": {
                            "JAVA": "\n\t\tthis.clazz =JSONUtils.extractJSONString(json.get(\"class\"));\n\t\tthis.id =JSONUtils.extractJSONLong(json.get(\"id\"));\n\t\tthis.created =JSONUtils.extractJSONDate(json.get(\"created\"));\n\t\tthis.updated =JSONUtils.extractJSONDate(json.get(\"updated\"));\n\t\tthis.deleted =JSONUtils.extractJSONDate(json.get(\"deleted\"));\n\t\tthis.location =JSONUtils.extractJSONString(json.get(\"location\"));\n\t\tthis.image =JSONUtils.extractJSONLong(json.get(\"image\"));\n\t\tthis.geometryCompression =JSONUtils.extractJSONDouble(json.get(\"geometryCompression\"));\n\t\tthis.project =JSONUtils.extractJSONLong(json.get(\"project\"));\n\t\tthis.container =JSONUtils.extractJSONObject(json.get(\"container\"));\n\t\tthis.user =JSONUtils.extractJSONLong(json.get(\"user\"));\n\t\tthis.nbComments =JSONUtils.extractJSONLong(json.get(\"nbComments\"));\n\t\tthis.area =JSONUtils.extractJSONDouble(json.get(\"area\"));\n\t\tthis.perimeterUnit =JSONUtils.extractJSONInteger(json.get(\"perimeterUnit\"));\n\t\tthis.areaUnit =JSONUtils.extractJSONInteger(json.get(\"areaUnit\"));\n\t\tthis.perimeter =JSONUtils.extractJSONDouble(json.get(\"perimeter\"));\n\t\tthis.centroid =JSONUtils.extractJSONMap(json.get(\"centroid\"));\n\t\tthis.term =JSONUtils.extractJSONList(json.get(\"term\"));\n\t\tthis.similarity =JSONUtils.extractJSONDouble(json.get(\"similarity\"));\n\t\tthis.rate =JSONUtils.extractJSONDouble(json.get(\"rate\"));\n\t\tthis.idTerm =JSONUtils.extractJSONLong(json.get(\"idTerm\"));\n\t\tthis.idExpectedTerm =JSONUtils.extractJSONLong(json.get(\"idExpectedTerm\"));\n\t\tthis.cropURL =JSONUtils.extractJSONString(json.get(\"cropURL\"));\n\t\tthis.smallCropURL =JSONUtils.extractJSONString(json.get(\"smallCropURL\"));\n\t\tthis.url =JSONUtils.extractJSONString(json.get(\"url\"));\n\t\tthis.imageURL =JSONUtils.extractJSONString(json.get(\"imageURL\"));\n\t\tthis.reviewed =JSONUtils.extractJSONBoolean(json.get(\"reviewed\"));\n\t\tthis.countReviewedAnnotations =JSONUtils.extractJSONInteger(json.get(\"countReviewedAnnotations\"));\n\n    "
                        }
                    },
                    "allParameters": [
                        {
                            "type": {
                                "type": "JSONObject"
                            },
                            "name": "json"
                        }
                    ],
                    "path": null,
                    "name": "build"
                },
                {
                    "isStatic": false,
                    "isAbstract": false,
                    "type": {
                        "type": "JSONObject"
                    },
                    "queryParameters": [
                        
                    ],
                    "verb": null,
                    "methodParameters": [
                        
                    ],
                    "pathParameters": [
                        
                    ],
                    "isPublic": true,
                    "code": {
                        "code": {
                            "JAVA": "\n\t\tJSONObject json=new JSONObject();\n\t\tjson.put(\"class\",JSONUtils.formatJSON(this.clazz));\n\t\tjson.put(\"id\",JSONUtils.formatJSON(this.id));\n\t\tjson.put(\"created\",JSONUtils.formatJSON(this.created));\n\t\tjson.put(\"updated\",JSONUtils.formatJSON(this.updated));\n\t\tjson.put(\"deleted\",JSONUtils.formatJSON(this.deleted));\n\t\tjson.put(\"location\",JSONUtils.formatJSON(this.location));\n\t\tjson.put(\"image\",JSONUtils.formatJSON(this.image));\n\t\tjson.put(\"geometryCompression\",JSONUtils.formatJSON(this.geometryCompression));\n\t\tjson.put(\"project\",JSONUtils.formatJSON(this.project));\n\t\tjson.put(\"container\",JSONUtils.formatJSON(this.container));\n\t\tjson.put(\"user\",JSONUtils.formatJSON(this.user));\n\t\tjson.put(\"nbComments\",JSONUtils.formatJSON(this.nbComments));\n\t\tjson.put(\"area\",JSONUtils.formatJSON(this.area));\n\t\tjson.put(\"perimeterUnit\",JSONUtils.formatJSON(this.perimeterUnit));\n\t\tjson.put(\"areaUnit\",JSONUtils.formatJSON(this.areaUnit));\n\t\tjson.put(\"perimeter\",JSONUtils.formatJSON(this.perimeter));\n\t\tjson.put(\"centroid\",JSONUtils.formatJSON(this.centroid));\n\t\tjson.put(\"term\",JSONUtils.formatJSON(this.term));\n\t\tjson.put(\"similarity\",JSONUtils.formatJSON(this.similarity));\n\t\tjson.put(\"rate\",JSONUtils.formatJSON(this.rate));\n\t\tjson.put(\"idTerm\",JSONUtils.formatJSON(this.idTerm));\n\t\tjson.put(\"idExpectedTerm\",JSONUtils.formatJSON(this.idExpectedTerm));\n\t\tjson.put(\"cropURL\",JSONUtils.formatJSON(this.cropURL));\n\t\tjson.put(\"smallCropURL\",JSONUtils.formatJSON(this.smallCropURL));\n\t\tjson.put(\"url\",JSONUtils.formatJSON(this.url));\n\t\tjson.put(\"imageURL\",JSONUtils.formatJSON(this.imageURL));\n\t\tjson.put(\"reviewed\",JSONUtils.formatJSON(this.reviewed));\n\n\t\treturn json;\n    "
                        }
                    },
                    "allParameters": [
                        
                    ],
                    "path": null,
                    "name": "toJSON"
                },
                {
                    "isStatic": true,
                    "isAbstract": false,
                    "type": {
                        "type": "AlgoAnnotation"
                    },
                    "queryParameters": [
                        
                    ],
                    "verb": "GET",
                    "methodParameters": [
                        {
                            "type": {
                                "type": "Server"
                            },
                            "name": "server"
                        }
                    ],
                    "pathParameters": [
                        {
                            "type": {
                                "type": "Long"
                            },
                            "name": "id"
                        }
                    ],
                    "isPublic": true,
                    "code": {
                        "code": {
                            "JAVA": "\n\t\tString path = \"/api/algoannotation/{id}.json?\";\n\t\tpath = path.replace(\"{id}\",id+\"\");\n\n\t\tJSONObject json = server.doGET(path);\n\t\tAlgoAnnotation domain = new AlgoAnnotation();\n\t\tdomain.build(json);\n\t\treturn domain;\n\n    "
                        }
                    },
                    "allParameters": [
                        {
                            "type": {
                                "type": "Server"
                            },
                            "name": "server"
                        },
                        {
                            "type": {
                                "type": "Long"
                            },
                            "name": "id"
                        }
                    ],
                    "path": "/api/algoannotation/{id}.json",
                    "name": "get"
                },
                {
                    "isStatic": true,
                    "isAbstract": false,
                    "type": {
                        "type": "File"
                    },
                    "queryParameters": [
                        {
                            "type": {
                                "type": "List"
                            },
                            "name": "terms"
                        },
                        {
                            "type": {
                                "type": "List"
                            },
                            "name": "users"
                        },
                        {
                            "type": {
                                "type": "List"
                            },
                            "name": "images"
                        },
                        {
                            "type": {
                                "type": "String"
                            },
                            "name": "format"
                        }
                    ],
                    "verb": "GET",
                    "methodParameters": [
                        {
                            "type": {
                                "type": "Server"
                            },
                            "name": "server"
                        }
                    ],
                    "pathParameters": [
                        {
                            "type": {
                                "type": "Long"
                            },
                            "name": "id"
                        }
                    ],
                    "isPublic": true,
                    "code": {
                        "code": {
                            "JAVA": "\n\t\tthrow new Exception(\"Not yet implemented\");\n    "
                        }
                    },
                    "allParameters": [
                        {
                            "type": {
                                "type": "Server"
                            },
                            "name": "server"
                        },
                        {
                            "type": {
                                "type": "Long"
                            },
                            "name": "id"
                        },
                        {
                            "type": {
                                "type": "List"
                            },
                            "name": "terms"
                        },
                        {
                            "type": {
                                "type": "List"
                            },
                            "name": "users"
                        },
                        {
                            "type": {
                                "type": "List"
                            },
                            "name": "images"
                        },
                        {
                            "type": {
                                "type": "String"
                            },
                            "name": "format"
                        }
                    ],
                    "path": "/api/project/{id}/algoannotation/download",
                    "name": "downloadDocumentByProject"
                },
                {
                    "isStatic": true,
                    "isAbstract": false,
                    "type": {
                        "type": "File"
                    },
                    "queryParameters": [
                        
                    ],
                    "verb": "GET",
                    "methodParameters": [
                        {
                            "type": {
                                "type": "Server"
                            },
                            "name": "server"
                        }
                    ],
                    "pathParameters": [
                        {
                            "type": {
                                "type": "Long"
                            },
                            "name": "id"
                        },
                        {
                            "type": {
                                "type": "Integer"
                            },
                            "name": "max_size"
                        },
                        {
                            "type": {
                                "type": "Integer"
                            },
                            "name": "zoom"
                        },
                        {
                            "type": {
                                "type": "Boolean"
                            },
                            "name": "draw"
                        }
                    ],
                    "isPublic": true,
                    "code": {
                        "code": {
                            "JAVA": "\n\t\tthrow new Exception(\"Not yet implemented\");\n    "
                        }
                    },
                    "allParameters": [
                        {
                            "type": {
                                "type": "Server"
                            },
                            "name": "server"
                        },
                        {
                            "type": {
                                "type": "Long"
                            },
                            "name": "id"
                        },
                        {
                            "type": {
                                "type": "Integer"
                            },
                            "name": "max_size"
                        },
                        {
                            "type": {
                                "type": "Integer"
                            },
                            "name": "zoom"
                        },
                        {
                            "type": {
                                "type": "Boolean"
                            },
                            "name": "draw"
                        }
                    ],
                    "path": "/api/algoannotation/{id}/crop.json",
                    "name": "crop"
                },
                {
                    "isStatic": false,
                    "isAbstract": false,
                    "type": {
                        "type": "Void"
                    },
                    "queryParameters": [
                        
                    ],
                    "verb": "POST",
                    "methodParameters": [
                        {
                            "type": {
                                "type": "Server"
                            },
                            "name": "server"
                        }
                    ],
                    "pathParameters": [
                        
                    ],
                    "isPublic": true,
                    "code": {
                        "code": {
                            "JAVA": "\n\t\tString path = \"/api/algoannotation.json?\";\n\n\t\tJSONObject json = server.doPOST(path,this.toJSON());\n\n\t\tthis.build((JSONObject)json.get(\"algoannotation\"));\n\n    "
                        }
                    },
                    "allParameters": [
                        {
                            "type": {
                                "type": "Server"
                            },
                            "name": "server"
                        }
                    ],
                    "path": "/api/algoannotation.json",
                    "name": "add"
                },
                {
                    "isStatic": true,
                    "isAbstract": false,
                    "type": {
                        "type": "AnnotationListing"
                    },
                    "queryParameters": [
                        {
                            "type": {
                                "type": "Integer"
                            },
                            "name": "max"
                        },
                        {
                            "type": {
                                "type": "Integer"
                            },
                            "name": "offset"
                        }
                    ],
                    "verb": "GET",
                    "methodParameters": [
                        {
                            "type": {
                                "type": "Server"
                            },
                            "name": "server"
                        }
                    ],
                    "pathParameters": [
                        
                    ],
                    "isPublic": true,
                    "code": {
                        "code": {
                            "JAVA": "\n\t\tthrow new Exception(\"Not yet implemented\");\n    "
                        }
                    },
                    "allParameters": [
                        {
                            "type": {
                                "type": "Server"
                            },
                            "name": "server"
                        },
                        {
                            "type": {
                                "type": "Integer"
                            },
                            "name": "max"
                        },
                        {
                            "type": {
                                "type": "Integer"
                            },
                            "name": "offset"
                        }
                    ],
                    "path": "/api/algoannotation.json",
                    "name": "list"
                },
                {
                    "isStatic": false,
                    "isAbstract": false,
                    "type": {
                        "type": "Void"
                    },
                    "queryParameters": [
                        
                    ],
                    "verb": "DELETE",
                    "methodParameters": [
                        {
                            "type": {
                                "type": "Server"
                            },
                            "name": "server"
                        }
                    ],
                    "pathParameters": [
                        
                    ],
                    "isPublic": true,
                    "code": {
                        "code": {
                            "JAVA": "\n\t\tString path = \"/api/algoannotation/{id}.json?\";\n\t\tpath = path.replace(\"{id}\",getId()+\"\");\n\n\t\tserver.doDELETE(path);\n\t\tbuild(new JSONObject());\n\n    "
                        }
                    },
                    "allParameters": [
                        {
                            "type": {
                                "type": "Server"
                            },
                            "name": "server"
                        }
                    ],
                    "path": "/api/algoannotation/{id}.json",
                    "name": "delete"
                },
                {
                    "isStatic": false,
                    "isAbstract": false,
                    "type": {
                        "type": "Void"
                    },
                    "queryParameters": [
                        
                    ],
                    "verb": "PUT",
                    "methodParameters": [
                        {
                            "type": {
                                "type": "Server"
                            },
                            "name": "server"
                        }
                    ],
                    "pathParameters": [
                        
                    ],
                    "isPublic": true,
                    "code": {
                        "code": {
                            "JAVA": "\n\t\tString path = \"/api/algoannotation/{id}.json?\";\n\t\tpath = path.replace(\"{id}\",getId()+\"\");\n\n\t\tJSONObject json = server.doPUT(path,this.toJSON());\n\n\t\tthis.build((JSONObject)json.get(\"algoannotation\"));\n\n    "
                        }
                    },
                    "allParameters": [
                        {
                            "type": {
                                "type": "Server"
                            },
                            "name": "server"
                        }
                    ],
                    "path": "/api/algoannotation/{id}.json",
                    "name": "edit"
                }
            ],
            "name": "AbstractAlgoAnnotation"
        },
        {
            "fullPackage": "be.cytomine.client.abst",
            "isAbstract": true,
            "comment": {
                "version": "0.1",
                "description": "Term added to an annotation by a job. Annotation can be: -algo annotation (create by a job) or -user annotation (create by a real user)",
                "author": "ClientBuilder (Lo\u00EFc Rollus)"
            },
            "fields": [
                {
                    "useInConstructor": false,
                    "type": {
                        "type": "String"
                    },
                    "useInSetter": false,
                    "comment": {
                        "description": "The full class name of the domain"
                    },
                    "useInGetter": true,
                    "name": "clazz"
                },
                {
                    "useInConstructor": false,
                    "type": {
                        "type": "Long"
                    },
                    "useInSetter": false,
                    "comment": {
                        "description": "The domain id"
                    },
                    "useInGetter": true,
                    "name": "id"
                },
                {
                    "useInConstructor": false,
                    "type": {
                        "type": "Date"
                    },
                    "useInSetter": false,
                    "comment": {
                        "description": "The date of the domain creation"
                    },
                    "useInGetter": true,
                    "name": "created"
                },
                {
                    "useInConstructor": false,
                    "type": {
                        "type": "Date"
                    },
                    "useInSetter": false,
                    "comment": {
                        "description": "The date of the domain modification"
                    },
                    "useInGetter": true,
                    "name": "updated"
                },
                {
                    "useInConstructor": false,
                    "type": {
                        "type": "Date"
                    },
                    "useInSetter": false,
                    "comment": {
                        "description": "When domain was removed from Cytomine"
                    },
                    "useInGetter": true,
                    "name": "deleted"
                },
                {
                    "useInConstructor": true,
                    "type": {
                        "type": "Long"
                    },
                    "useInSetter": true,
                    "comment": {
                        "description": "The annotation id"
                    },
                    "useInGetter": true,
                    "name": "annotationIdent"
                },
                {
                    "useInConstructor": true,
                    "type": {
                        "type": "String"
                    },
                    "useInSetter": true,
                    "comment": {
                        "description": "The annotation class type (user or algo)"
                    },
                    "useInGetter": true,
                    "name": "annotationClassName"
                },
                {
                    "useInConstructor": false,
                    "type": {
                        "type": "Object"
                    },
                    "useInSetter": true,
                    "comment": {
                        "description": "Undefined"
                    },
                    "useInGetter": true,
                    "name": "annotation"
                },
                {
                    "useInConstructor": true,
                    "type": {
                        "type": "Long"
                    },
                    "useInSetter": true,
                    "comment": {
                        "description": "The term id"
                    },
                    "useInGetter": true,
                    "name": "term"
                },
                {
                    "useInConstructor": true,
                    "type": {
                        "type": "Long"
                    },
                    "useInSetter": true,
                    "comment": {
                        "description": "The real term id, the term added by the user previously"
                    },
                    "useInGetter": true,
                    "name": "expectedTerm"
                },
                {
                    "useInConstructor": true,
                    "type": {
                        "type": "Double"
                    },
                    "useInSetter": true,
                    "comment": {
                        "description": "The reliability of the prediction"
                    },
                    "useInGetter": true,
                    "name": "rate"
                },
                {
                    "useInConstructor": true,
                    "type": {
                        "type": "Long"
                    },
                    "useInSetter": true,
                    "comment": {
                        "description": "The user job id"
                    },
                    "useInGetter": true,
                    "name": "user"
                },
                {
                    "useInConstructor": true,
                    "type": {
                        "type": "Long"
                    },
                    "useInSetter": true,
                    "comment": {
                        "description": "The project id"
                    },
                    "useInGetter": true,
                    "name": "project"
                }
            ],
            "domainName": "AlgoAnnotationTerm",
            "methods": [
                {
                    "isStatic": false,
                    "isAbstract": false,
                    "type": {
                        "type": "Void"
                    },
                    "queryParameters": [
                        
                    ],
                    "verb": null,
                    "methodParameters": [
                        {
                            "type": {
                                "type": "Long"
                            },
                            "name": "annotationIdent"
                        },
                        {
                            "type": {
                                "type": "String"
                            },
                            "name": "annotationClassName"
                        },
                        {
                            "type": {
                                "type": "Long"
                            },
                            "name": "term"
                        },
                        {
                            "type": {
                                "type": "Long"
                            },
                            "name": "expectedTerm"
                        },
                        {
                            "type": {
                                "type": "Double"
                            },
                            "name": "rate"
                        },
                        {
                            "type": {
                                "type": "Long"
                            },
                            "name": "user"
                        },
                        {
                            "type": {
                                "type": "Long"
                            },
                            "name": "project"
                        }
                    ],
                    "pathParameters": [
                        
                    ],
                    "isPublic": true,
                    "code": {
                        "code": {
                            "JAVA": "\n\t\tthis.annotationIdent=annotationIdent;\n\t\tthis.annotationClassName=annotationClassName;\n\t\tthis.term=term;\n\t\tthis.expectedTerm=expectedTerm;\n\t\tthis.rate=rate;\n\t\tthis.user=user;\n\t\tthis.project=project;\n\n    "
                        }
                    },
                    "allParameters": [
                        {
                            "type": {
                                "type": "Long"
                            },
                            "name": "annotationIdent"
                        },
                        {
                            "type": {
                                "type": "String"
                            },
                            "name": "annotationClassName"
                        },
                        {
                            "type": {
                                "type": "Long"
                            },
                            "name": "term"
                        },
                        {
                            "type": {
                                "type": "Long"
                            },
                            "name": "expectedTerm"
                        },
                        {
                            "type": {
                                "type": "Double"
                            },
                            "name": "rate"
                        },
                        {
                            "type": {
                                "type": "Long"
                            },
                            "name": "user"
                        },
                        {
                            "type": {
                                "type": "Long"
                            },
                            "name": "project"
                        }
                    ],
                    "path": null,
                    "name": "build"
                },
                {
                    "isStatic": false,
                    "isAbstract": false,
                    "type": {
                        "type": "Void"
                    },
                    "queryParameters": [
                        
                    ],
                    "verb": null,
                    "methodParameters": [
                        {
                            "type": {
                                "type": "JSONObject"
                            },
                            "name": "json"
                        }
                    ],
                    "pathParameters": [
                        
                    ],
                    "isPublic": true,
                    "code": {
                        "code": {
                            "JAVA": "\n\t\tthis.clazz =JSONUtils.extractJSONString(json.get(\"class\"));\n\t\tthis.id =JSONUtils.extractJSONLong(json.get(\"id\"));\n\t\tthis.created =JSONUtils.extractJSONDate(json.get(\"created\"));\n\t\tthis.updated =JSONUtils.extractJSONDate(json.get(\"updated\"));\n\t\tthis.deleted =JSONUtils.extractJSONDate(json.get(\"deleted\"));\n\t\tthis.annotationIdent =JSONUtils.extractJSONLong(json.get(\"annotationIdent\"));\n\t\tthis.annotationClassName =JSONUtils.extractJSONString(json.get(\"annotationClassName\"));\n\t\tthis.annotation =JSONUtils.extractJSONObject(json.get(\"annotation\"));\n\t\tthis.term =JSONUtils.extractJSONLong(json.get(\"term\"));\n\t\tthis.expectedTerm =JSONUtils.extractJSONLong(json.get(\"expectedTerm\"));\n\t\tthis.rate =JSONUtils.extractJSONDouble(json.get(\"rate\"));\n\t\tthis.user =JSONUtils.extractJSONLong(json.get(\"user\"));\n\t\tthis.project =JSONUtils.extractJSONLong(json.get(\"project\"));\n\n    "
                        }
                    },
                    "allParameters": [
                        {
                            "type": {
                                "type": "JSONObject"
                            },
                            "name": "json"
                        }
                    ],
                    "path": null,
                    "name": "build"
                },
                {
                    "isStatic": false,
                    "isAbstract": false,
                    "type": {
                        "type": "JSONObject"
                    },
                    "queryParameters": [
                        
                    ],
                    "verb": null,
                    "methodParameters": [
                        
                    ],
                    "pathParameters": [
                        
                    ],
                    "isPublic": true,
                    "code": {
                        "code": {
                            "JAVA": "\n\t\tJSONObject json=new JSONObject();\n\t\tjson.put(\"class\",JSONUtils.formatJSON(this.clazz));\n\t\tjson.put(\"id\",JSONUtils.formatJSON(this.id));\n\t\tjson.put(\"created\",JSONUtils.formatJSON(this.created));\n\t\tjson.put(\"updated\",JSONUtils.formatJSON(this.updated));\n\t\tjson.put(\"deleted\",JSONUtils.formatJSON(this.deleted));\n\t\tjson.put(\"annotationIdent\",JSONUtils.formatJSON(this.annotationIdent));\n\t\tjson.put(\"annotationClassName\",JSONUtils.formatJSON(this.annotationClassName));\n\t\tjson.put(\"annotation\",JSONUtils.formatJSON(this.annotation));\n\t\tjson.put(\"term\",JSONUtils.formatJSON(this.term));\n\t\tjson.put(\"expectedTerm\",JSONUtils.formatJSON(this.expectedTerm));\n\t\tjson.put(\"rate\",JSONUtils.formatJSON(this.rate));\n\t\tjson.put(\"user\",JSONUtils.formatJSON(this.user));\n\t\tjson.put(\"project\",JSONUtils.formatJSON(this.project));\n\n\t\treturn json;\n    "
                        }
                    },
                    "allParameters": [
                        
                    ],
                    "path": null,
                    "name": "toJSON"
                }
            ],
            "name": "AbstractAlgoAnnotationTerm"
        },
        {
            "fullPackage": "be.cytomine.client.abst",
            "isAbstract": true,
            "comment": {
                "version": "0.1",
                "description": "Define a set of filter for annotation listing",
                "author": "ClientBuilder (Lo\u00EFc Rollus)"
            },
            "fields": [
                {
                    "useInConstructor": false,
                    "type": {
                        "type": "String"
                    },
                    "useInSetter": false,
                    "comment": {
                        "description": "The full class name of the domain"
                    },
                    "useInGetter": true,
                    "name": "clazz"
                },
                {
                    "useInConstructor": false,
                    "type": {
                        "type": "Long"
                    },
                    "useInSetter": false,
                    "comment": {
                        "description": "The domain id"
                    },
                    "useInGetter": true,
                    "name": "id"
                },
                {
                    "useInConstructor": false,
                    "type": {
                        "type": "Date"
                    },
                    "useInSetter": false,
                    "comment": {
                        "description": "The date of the domain creation"
                    },
                    "useInGetter": true,
                    "name": "created"
                },
                {
                    "useInConstructor": false,
                    "type": {
                        "type": "Date"
                    },
                    "useInSetter": false,
                    "comment": {
                        "description": "The date of the domain modification"
                    },
                    "useInGetter": true,
                    "name": "updated"
                },
                {
                    "useInConstructor": false,
                    "type": {
                        "type": "Date"
                    },
                    "useInSetter": false,
                    "comment": {
                        "description": "When domain was removed from Cytomine"
                    },
                    "useInGetter": true,
                    "name": "deleted"
                },
                {
                    "useInConstructor": true,
                    "type": {
                        "type": "String"
                    },
                    "useInSetter": true,
                    "comment": {
                        "description": "The filter name"
                    },
                    "useInGetter": true,
                    "name": "name"
                },
                {
                    "useInConstructor": false,
                    "type": {
                        "type": "Long"
                    },
                    "useInSetter": false,
                    "comment": {
                        "description": "The user that create the filter (auto field)"
                    },
                    "useInGetter": true,
                    "name": "user"
                },
                {
                    "useInConstructor": true,
                    "type": {
                        "type": "Long"
                    },
                    "useInSetter": true,
                    "comment": {
                        "description": "The project of the filter"
                    },
                    "useInGetter": true,
                    "name": "project"
                },
                {
                    "useInConstructor": false,
                    "type": {
                        "type": "List"
                    },
                    "useInSetter": true,
                    "comment": {
                        "description": "Terms filter id"
                    },
                    "useInGetter": true,
                    "name": "terms"
                },
                {
                    "useInConstructor": false,
                    "type": {
                        "type": "List"
                    },
                    "useInSetter": true,
                    "comment": {
                        "description": "Users filter id"
                    },
                    "useInGetter": true,
                    "name": "users"
                }
            ],
            "domainName": "AnnotationFilter",
            "methods": [
                {
                    "isStatic": false,
                    "isAbstract": false,
                    "type": {
                        "type": "Void"
                    },
                    "queryParameters": [
                        
                    ],
                    "verb": null,
                    "methodParameters": [
                        {
                            "type": {
                                "type": "String"
                            },
                            "name": "name"
                        },
                        {
                            "type": {
                                "type": "Long"
                            },
                            "name": "project"
                        }
                    ],
                    "pathParameters": [
                        
                    ],
                    "isPublic": true,
                    "code": {
                        "code": {
                            "JAVA": "\n\t\tthis.name=name;\n\t\tthis.project=project;\n\n    "
                        }
                    },
                    "allParameters": [
                        {
                            "type": {
                                "type": "String"
                            },
                            "name": "name"
                        },
                        {
                            "type": {
                                "type": "Long"
                            },
                            "name": "project"
                        }
                    ],
                    "path": null,
                    "name": "build"
                },
                {
                    "isStatic": false,
                    "isAbstract": false,
                    "type": {
                        "type": "Void"
                    },
                    "queryParameters": [
                        
                    ],
                    "verb": null,
                    "methodParameters": [
                        {
                            "type": {
                                "type": "JSONObject"
                            },
                            "name": "json"
                        }
                    ],
                    "pathParameters": [
                        
                    ],
                    "isPublic": true,
                    "code": {
                        "code": {
                            "JAVA": "\n\t\tthis.clazz =JSONUtils.extractJSONString(json.get(\"class\"));\n\t\tthis.id =JSONUtils.extractJSONLong(json.get(\"id\"));\n\t\tthis.created =JSONUtils.extractJSONDate(json.get(\"created\"));\n\t\tthis.updated =JSONUtils.extractJSONDate(json.get(\"updated\"));\n\t\tthis.deleted =JSONUtils.extractJSONDate(json.get(\"deleted\"));\n\t\tthis.name =JSONUtils.extractJSONString(json.get(\"name\"));\n\t\tthis.user =JSONUtils.extractJSONLong(json.get(\"user\"));\n\t\tthis.project =JSONUtils.extractJSONLong(json.get(\"project\"));\n\t\tthis.terms =JSONUtils.extractJSONList(json.get(\"terms\"));\n\t\tthis.users =JSONUtils.extractJSONList(json.get(\"users\"));\n\n    "
                        }
                    },
                    "allParameters": [
                        {
                            "type": {
                                "type": "JSONObject"
                            },
                            "name": "json"
                        }
                    ],
                    "path": null,
                    "name": "build"
                },
                {
                    "isStatic": false,
                    "isAbstract": false,
                    "type": {
                        "type": "JSONObject"
                    },
                    "queryParameters": [
                        
                    ],
                    "verb": null,
                    "methodParameters": [
                        
                    ],
                    "pathParameters": [
                        
                    ],
                    "isPublic": true,
                    "code": {
                        "code": {
                            "JAVA": "\n\t\tJSONObject json=new JSONObject();\n\t\tjson.put(\"class\",JSONUtils.formatJSON(this.clazz));\n\t\tjson.put(\"id\",JSONUtils.formatJSON(this.id));\n\t\tjson.put(\"created\",JSONUtils.formatJSON(this.created));\n\t\tjson.put(\"updated\",JSONUtils.formatJSON(this.updated));\n\t\tjson.put(\"deleted\",JSONUtils.formatJSON(this.deleted));\n\t\tjson.put(\"name\",JSONUtils.formatJSON(this.name));\n\t\tjson.put(\"user\",JSONUtils.formatJSON(this.user));\n\t\tjson.put(\"project\",JSONUtils.formatJSON(this.project));\n\t\tjson.put(\"terms\",JSONUtils.formatJSON(this.terms));\n\t\tjson.put(\"users\",JSONUtils.formatJSON(this.users));\n\n\t\treturn json;\n    "
                        }
                    },
                    "allParameters": [
                        
                    ],
                    "path": null,
                    "name": "toJSON"
                },
                {
                    "isStatic": true,
                    "isAbstract": false,
                    "type": {
                        "type": "AnnotationFilter"
                    },
                    "queryParameters": [
                        
                    ],
                    "verb": "GET",
                    "methodParameters": [
                        {
                            "type": {
                                "type": "Server"
                            },
                            "name": "server"
                        }
                    ],
                    "pathParameters": [
                        {
                            "type": {
                                "type": "Long"
                            },
                            "name": "id"
                        }
                    ],
                    "isPublic": true,
                    "code": {
                        "code": {
                            "JAVA": "\n\t\tString path = \"/api/annotationfilter/{id}.json?\";\n\t\tpath = path.replace(\"{id}\",id+\"\");\n\n\t\tJSONObject json = server.doGET(path);\n\t\tAnnotationFilter domain = new AnnotationFilter();\n\t\tdomain.build(json);\n\t\treturn domain;\n\n    "
                        }
                    },
                    "allParameters": [
                        {
                            "type": {
                                "type": "Server"
                            },
                            "name": "server"
                        },
                        {
                            "type": {
                                "type": "Long"
                            },
                            "name": "id"
                        }
                    ],
                    "path": "/api/annotationfilter/{id}.json",
                    "name": "get"
                },
                {
                    "isStatic": true,
                    "isAbstract": false,
                    "type": {
                        "type": "AnnotationFilter"
                    },
                    "queryParameters": [
                        {
                            "type": {
                                "type": "Integer"
                            },
                            "name": "max"
                        },
                        {
                            "type": {
                                "type": "Integer"
                            },
                            "name": "offset"
                        }
                    ],
                    "verb": "GET",
                    "methodParameters": [
                        {
                            "type": {
                                "type": "Server"
                            },
                            "name": "server"
                        }
                    ],
                    "pathParameters": [
                        {
                            "type": {
                                "type": "Long"
                            },
                            "name": "idOntology"
                        }
                    ],
                    "isPublic": true,
                    "code": {
                        "code": {
                            "JAVA": "\n\t\tthrow new Exception(\"Not yet implemented\");\n    "
                        }
                    },
                    "allParameters": [
                        {
                            "type": {
                                "type": "Server"
                            },
                            "name": "server"
                        },
                        {
                            "type": {
                                "type": "Long"
                            },
                            "name": "idOntology"
                        },
                        {
                            "type": {
                                "type": "Integer"
                            },
                            "name": "max"
                        },
                        {
                            "type": {
                                "type": "Integer"
                            },
                            "name": "offset"
                        }
                    ],
                    "path": "/api/ontology/{idOntology}/annotationfilter.json",
                    "name": "listByOntology"
                },
                {
                    "isStatic": true,
                    "isAbstract": false,
                    "type": {
                        "type": "AnnotationFilter"
                    },
                    "queryParameters": [
                        {
                            "type": {
                                "type": "Integer"
                            },
                            "name": "max"
                        },
                        {
                            "type": {
                                "type": "Integer"
                            },
                            "name": "offset"
                        }
                    ],
                    "verb": "GET",
                    "methodParameters": [
                        {
                            "type": {
                                "type": "Server"
                            },
                            "name": "server"
                        }
                    ],
                    "pathParameters": [
                        {
                            "type": {
                                "type": "Long"
                            },
                            "name": "project"
                        }
                    ],
                    "isPublic": true,
                    "code": {
                        "code": {
                            "JAVA": "\n\t\tthrow new Exception(\"Not yet implemented\");\n    "
                        }
                    },
                    "allParameters": [
                        {
                            "type": {
                                "type": "Server"
                            },
                            "name": "server"
                        },
                        {
                            "type": {
                                "type": "Long"
                            },
                            "name": "project"
                        },
                        {
                            "type": {
                                "type": "Integer"
                            },
                            "name": "max"
                        },
                        {
                            "type": {
                                "type": "Integer"
                            },
                            "name": "offset"
                        }
                    ],
                    "path": "/api/annotationfilter.json",
                    "name": "listByProject"
                },
                {
                    "isStatic": false,
                    "isAbstract": false,
                    "type": {
                        "type": "Void"
                    },
                    "queryParameters": [
                        
                    ],
                    "verb": "POST",
                    "methodParameters": [
                        {
                            "type": {
                                "type": "Server"
                            },
                            "name": "server"
                        }
                    ],
                    "pathParameters": [
                        
                    ],
                    "isPublic": true,
                    "code": {
                        "code": {
                            "JAVA": "\n\t\tString path = \"/api/annotationfilter.json?\";\n\n\t\tJSONObject json = server.doPOST(path,this.toJSON());\n\n\t\tthis.build((JSONObject)json.get(\"annotationfilter\"));\n\n    "
                        }
                    },
                    "allParameters": [
                        {
                            "type": {
                                "type": "Server"
                            },
                            "name": "server"
                        }
                    ],
                    "path": "/api/annotationfilter.json",
                    "name": "add"
                },
                {
                    "isStatic": false,
                    "isAbstract": false,
                    "type": {
                        "type": "Void"
                    },
                    "queryParameters": [
                        
                    ],
                    "verb": "DELETE",
                    "methodParameters": [
                        {
                            "type": {
                                "type": "Server"
                            },
                            "name": "server"
                        }
                    ],
                    "pathParameters": [
                        
                    ],
                    "isPublic": true,
                    "code": {
                        "code": {
                            "JAVA": "\n\t\tString path = \"/api/annotationfilter/{id}.json?\";\n\t\tpath = path.replace(\"{id}\",getId()+\"\");\n\n\t\tserver.doDELETE(path);\n\t\tbuild(new JSONObject());\n\n    "
                        }
                    },
                    "allParameters": [
                        {
                            "type": {
                                "type": "Server"
                            },
                            "name": "server"
                        }
                    ],
                    "path": "/api/annotationfilter/{id}.json",
                    "name": "delete"
                },
                {
                    "isStatic": false,
                    "isAbstract": false,
                    "type": {
                        "type": "Void"
                    },
                    "queryParameters": [
                        
                    ],
                    "verb": "PUT",
                    "methodParameters": [
                        {
                            "type": {
                                "type": "Server"
                            },
                            "name": "server"
                        }
                    ],
                    "pathParameters": [
                        
                    ],
                    "isPublic": true,
                    "code": {
                        "code": {
                            "JAVA": "\n\t\tString path = \"/api/annotationfilter/{id}.json?\";\n\t\tpath = path.replace(\"{id}\",getId()+\"\");\n\n\t\tJSONObject json = server.doPUT(path,this.toJSON());\n\n\t\tthis.build((JSONObject)json.get(\"annotationfilter\"));\n\n    "
                        }
                    },
                    "allParameters": [
                        {
                            "type": {
                                "type": "Server"
                            },
                            "name": "server"
                        }
                    ],
                    "path": "/api/annotationfilter/{id}.json",
                    "name": "edit"
                }
            ],
            "name": "AbstractAnnotationFilter"
        },
        {
            "fullPackage": "be.cytomine.client.abst",
            "isAbstract": true,
            "comment": {
                "version": "0.1",
                "description": "A index entry that store, for an image and a user, the number of annotation created/reviewed",
                "author": "ClientBuilder (Lo\u00EFc Rollus)"
            },
            "fields": [
                {
                    "useInConstructor": false,
                    "type": {
                        "type": "Object"
                    },
                    "useInSetter": true,
                    "comment": {
                        "description": "Undefined"
                    },
                    "useInGetter": true,
                    "name": "clazz"
                },
                {
                    "useInConstructor": false,
                    "type": {
                        "type": "Object"
                    },
                    "useInSetter": true,
                    "comment": {
                        "description": "Undefined"
                    },
                    "useInGetter": true,
                    "name": "id"
                },
                {
                    "useInConstructor": false,
                    "type": {
                        "type": "Object"
                    },
                    "useInSetter": true,
                    "comment": {
                        "description": "Undefined"
                    },
                    "useInGetter": true,
                    "name": "created"
                },
                {
                    "useInConstructor": false,
                    "type": {
                        "type": "Object"
                    },
                    "useInSetter": true,
                    "comment": {
                        "description": "Undefined"
                    },
                    "useInGetter": true,
                    "name": "updated"
                },
                {
                    "useInConstructor": false,
                    "type": {
                        "type": "Object"
                    },
                    "useInSetter": true,
                    "comment": {
                        "description": "Undefined"
                    },
                    "useInGetter": true,
                    "name": "deleted"
                },
                {
                    "useInConstructor": false,
                    "type": {
                        "type": "Long"
                    },
                    "useInSetter": false,
                    "comment": {
                        "description": "The user criteria"
                    },
                    "useInGetter": true,
                    "name": "user"
                },
                {
                    "useInConstructor": false,
                    "type": {
                        "type": "Long"
                    },
                    "useInSetter": false,
                    "comment": {
                        "description": "The image criteria"
                    },
                    "useInGetter": true,
                    "name": "image"
                },
                {
                    "useInConstructor": false,
                    "type": {
                        "type": "Long"
                    },
                    "useInSetter": false,
                    "comment": {
                        "description": "The number of annotation added by the user (auto incr with trigger)"
                    },
                    "useInGetter": true,
                    "name": "countAnnotation"
                },
                {
                    "useInConstructor": false,
                    "type": {
                        "type": "Long"
                    },
                    "useInSetter": false,
                    "comment": {
                        "description": "The number of review added by the user (auto incr with trigger)"
                    },
                    "useInGetter": true,
                    "name": "countReviewedAnnotation"
                }
            ],
            "domainName": "AnnotationIndex",
            "methods": [
                {
                    "isStatic": false,
                    "isAbstract": false,
                    "type": {
                        "type": "Void"
                    },
                    "queryParameters": [
                        
                    ],
                    "verb": null,
                    "methodParameters": [
                        
                    ],
                    "pathParameters": [
                        
                    ],
                    "isPublic": true,
                    "code": {
                        "code": {
                            "JAVA": "\n\n    "
                        }
                    },
                    "allParameters": [
                        
                    ],
                    "path": null,
                    "name": "build"
                },
                {
                    "isStatic": false,
                    "isAbstract": false,
                    "type": {
                        "type": "Void"
                    },
                    "queryParameters": [
                        
                    ],
                    "verb": null,
                    "methodParameters": [
                        {
                            "type": {
                                "type": "JSONObject"
                            },
                            "name": "json"
                        }
                    ],
                    "pathParameters": [
                        
                    ],
                    "isPublic": true,
                    "code": {
                        "code": {
                            "JAVA": "\n\t\tthis.clazz =JSONUtils.extractJSONObject(json.get(\"class\"));\n\t\tthis.id =JSONUtils.extractJSONObject(json.get(\"id\"));\n\t\tthis.created =JSONUtils.extractJSONObject(json.get(\"created\"));\n\t\tthis.updated =JSONUtils.extractJSONObject(json.get(\"updated\"));\n\t\tthis.deleted =JSONUtils.extractJSONObject(json.get(\"deleted\"));\n\t\tthis.user =JSONUtils.extractJSONLong(json.get(\"user\"));\n\t\tthis.image =JSONUtils.extractJSONLong(json.get(\"image\"));\n\t\tthis.countAnnotation =JSONUtils.extractJSONLong(json.get(\"countAnnotation\"));\n\t\tthis.countReviewedAnnotation =JSONUtils.extractJSONLong(json.get(\"countReviewedAnnotation\"));\n\n    "
                        }
                    },
                    "allParameters": [
                        {
                            "type": {
                                "type": "JSONObject"
                            },
                            "name": "json"
                        }
                    ],
                    "path": null,
                    "name": "build"
                },
                {
                    "isStatic": false,
                    "isAbstract": false,
                    "type": {
                        "type": "JSONObject"
                    },
                    "queryParameters": [
                        
                    ],
                    "verb": null,
                    "methodParameters": [
                        
                    ],
                    "pathParameters": [
                        
                    ],
                    "isPublic": true,
                    "code": {
                        "code": {
                            "JAVA": "\n\t\tJSONObject json=new JSONObject();\n\t\tjson.put(\"class\",JSONUtils.formatJSON(this.clazz));\n\t\tjson.put(\"id\",JSONUtils.formatJSON(this.id));\n\t\tjson.put(\"created\",JSONUtils.formatJSON(this.created));\n\t\tjson.put(\"updated\",JSONUtils.formatJSON(this.updated));\n\t\tjson.put(\"deleted\",JSONUtils.formatJSON(this.deleted));\n\t\tjson.put(\"user\",JSONUtils.formatJSON(this.user));\n\t\tjson.put(\"image\",JSONUtils.formatJSON(this.image));\n\t\tjson.put(\"countAnnotation\",JSONUtils.formatJSON(this.countAnnotation));\n\t\tjson.put(\"countReviewedAnnotation\",JSONUtils.formatJSON(this.countReviewedAnnotation));\n\n\t\treturn json;\n    "
                        }
                    },
                    "allParameters": [
                        
                    ],
                    "path": null,
                    "name": "toJSON"
                },
                {
                    "isStatic": true,
                    "isAbstract": false,
                    "type": {
                        "type": "AnnotationIndex"
                    },
                    "queryParameters": [
                        {
                            "type": {
                                "type": "Integer"
                            },
                            "name": "max"
                        },
                        {
                            "type": {
                                "type": "Integer"
                            },
                            "name": "offset"
                        }
                    ],
                    "verb": "GET",
                    "methodParameters": [
                        {
                            "type": {
                                "type": "Server"
                            },
                            "name": "server"
                        }
                    ],
                    "pathParameters": [
                        {
                            "type": {
                                "type": "Long"
                            },
                            "name": "id"
                        }
                    ],
                    "isPublic": true,
                    "code": {
                        "code": {
                            "JAVA": "\n\t\tthrow new Exception(\"Not yet implemented\");\n    "
                        }
                    },
                    "allParameters": [
                        {
                            "type": {
                                "type": "Server"
                            },
                            "name": "server"
                        },
                        {
                            "type": {
                                "type": "Long"
                            },
                            "name": "id"
                        },
                        {
                            "type": {
                                "type": "Integer"
                            },
                            "name": "max"
                        },
                        {
                            "type": {
                                "type": "Integer"
                            },
                            "name": "offset"
                        }
                    ],
                    "path": "/api/imageinstance/{id}/annotationindex.json",
                    "name": "listByImage"
                }
            ],
            "name": "AbstractAnnotationIndex"
        },
        {
            "fullPackage": "be.cytomine.client.abst",
            "isAbstract": true,
            "comment": {
                "version": "0.1",
                "description": "Term added to an annotation by a real user (not a job!). Many user can add a term to a single annotation (not only the user that created this annotation)",
                "author": "ClientBuilder (Lo\u00EFc Rollus)"
            },
            "fields": [
                {
                    "useInConstructor": false,
                    "type": {
                        "type": "String"
                    },
                    "useInSetter": false,
                    "comment": {
                        "description": "The full class name of the domain"
                    },
                    "useInGetter": true,
                    "name": "clazz"
                },
                {
                    "useInConstructor": false,
                    "type": {
                        "type": "Long"
                    },
                    "useInSetter": false,
                    "comment": {
                        "description": "The domain id"
                    },
                    "useInGetter": true,
                    "name": "id"
                },
                {
                    "useInConstructor": false,
                    "type": {
                        "type": "Date"
                    },
                    "useInSetter": false,
                    "comment": {
                        "description": "The date of the domain creation"
                    },
                    "useInGetter": true,
                    "name": "created"
                },
                {
                    "useInConstructor": false,
                    "type": {
                        "type": "Date"
                    },
                    "useInSetter": false,
                    "comment": {
                        "description": "The date of the domain modification"
                    },
                    "useInGetter": true,
                    "name": "updated"
                },
                {
                    "useInConstructor": false,
                    "type": {
                        "type": "Date"
                    },
                    "useInSetter": false,
                    "comment": {
                        "description": "When domain was removed from Cytomine"
                    },
                    "useInGetter": true,
                    "name": "deleted"
                },
                {
                    "useInConstructor": true,
                    "type": {
                        "type": "Long"
                    },
                    "useInSetter": true,
                    "comment": {
                        "description": "The annotation id"
                    },
                    "useInGetter": true,
                    "name": "userannotation"
                },
                {
                    "useInConstructor": true,
                    "type": {
                        "type": "Long"
                    },
                    "useInSetter": true,
                    "comment": {
                        "description": "The term id"
                    },
                    "useInGetter": true,
                    "name": "term"
                },
                {
                    "useInConstructor": false,
                    "type": {
                        "type": "Long"
                    },
                    "useInSetter": true,
                    "comment": {
                        "description": "The user id"
                    },
                    "useInGetter": true,
                    "name": "user"
                }
            ],
            "domainName": "AnnotationTerm",
            "methods": [
                {
                    "isStatic": false,
                    "isAbstract": false,
                    "type": {
                        "type": "Void"
                    },
                    "queryParameters": [
                        
                    ],
                    "verb": null,
                    "methodParameters": [
                        {
                            "type": {
                                "type": "Long"
                            },
                            "name": "userannotation"
                        },
                        {
                            "type": {
                                "type": "Long"
                            },
                            "name": "term"
                        }
                    ],
                    "pathParameters": [
                        
                    ],
                    "isPublic": true,
                    "code": {
                        "code": {
                            "JAVA": "\n\t\tthis.userannotation=userannotation;\n\t\tthis.term=term;\n\n    "
                        }
                    },
                    "allParameters": [
                        {
                            "type": {
                                "type": "Long"
                            },
                            "name": "userannotation"
                        },
                        {
                            "type": {
                                "type": "Long"
                            },
                            "name": "term"
                        }
                    ],
                    "path": null,
                    "name": "build"
                },
                {
                    "isStatic": false,
                    "isAbstract": false,
                    "type": {
                        "type": "Void"
                    },
                    "queryParameters": [
                        
                    ],
                    "verb": null,
                    "methodParameters": [
                        {
                            "type": {
                                "type": "JSONObject"
                            },
                            "name": "json"
                        }
                    ],
                    "pathParameters": [
                        
                    ],
                    "isPublic": true,
                    "code": {
                        "code": {
                            "JAVA": "\n\t\tthis.clazz =JSONUtils.extractJSONString(json.get(\"class\"));\n\t\tthis.id =JSONUtils.extractJSONLong(json.get(\"id\"));\n\t\tthis.created =JSONUtils.extractJSONDate(json.get(\"created\"));\n\t\tthis.updated =JSONUtils.extractJSONDate(json.get(\"updated\"));\n\t\tthis.deleted =JSONUtils.extractJSONDate(json.get(\"deleted\"));\n\t\tthis.userannotation =JSONUtils.extractJSONLong(json.get(\"userannotation\"));\n\t\tthis.term =JSONUtils.extractJSONLong(json.get(\"term\"));\n\t\tthis.user =JSONUtils.extractJSONLong(json.get(\"user\"));\n\n    "
                        }
                    },
                    "allParameters": [
                        {
                            "type": {
                                "type": "JSONObject"
                            },
                            "name": "json"
                        }
                    ],
                    "path": null,
                    "name": "build"
                },
                {
                    "isStatic": false,
                    "isAbstract": false,
                    "type": {
                        "type": "JSONObject"
                    },
                    "queryParameters": [
                        
                    ],
                    "verb": null,
                    "methodParameters": [
                        
                    ],
                    "pathParameters": [
                        
                    ],
                    "isPublic": true,
                    "code": {
                        "code": {
                            "JAVA": "\n\t\tJSONObject json=new JSONObject();\n\t\tjson.put(\"class\",JSONUtils.formatJSON(this.clazz));\n\t\tjson.put(\"id\",JSONUtils.formatJSON(this.id));\n\t\tjson.put(\"created\",JSONUtils.formatJSON(this.created));\n\t\tjson.put(\"updated\",JSONUtils.formatJSON(this.updated));\n\t\tjson.put(\"deleted\",JSONUtils.formatJSON(this.deleted));\n\t\tjson.put(\"userannotation\",JSONUtils.formatJSON(this.userannotation));\n\t\tjson.put(\"term\",JSONUtils.formatJSON(this.term));\n\t\tjson.put(\"user\",JSONUtils.formatJSON(this.user));\n\n\t\treturn json;\n    "
                        }
                    },
                    "allParameters": [
                        
                    ],
                    "path": null,
                    "name": "toJSON"
                },
                {
                    "isStatic": true,
                    "isAbstract": false,
                    "type": {
                        "type": "AnnotationTerm"
                    },
                    "queryParameters": [
                        
                    ],
                    "verb": "GET",
                    "methodParameters": [
                        {
                            "type": {
                                "type": "Server"
                            },
                            "name": "server"
                        }
                    ],
                    "pathParameters": [
                        {
                            "type": {
                                "type": "Long"
                            },
                            "name": "idannotation"
                        },
                        {
                            "type": {
                                "type": "Long"
                            },
                            "name": "idterm"
                        }
                    ],
                    "isPublic": true,
                    "code": {
                        "code": {
                            "JAVA": "\n\t\tString path = \"/api/annotation/{idannotation}/term/{idterm}/user/{idUser}.json?\";\n\t\tpath = path.replace(\"{idannotation}\",idannotation+\"\");\n\t\tpath = path.replace(\"{idterm}\",idterm+\"\");\n\n\t\tJSONObject json = server.doGET(path);\n\t\tAnnotationTerm domain = new AnnotationTerm();\n\t\tdomain.build(json);\n\t\treturn domain;\n\n    "
                        }
                    },
                    "allParameters": [
                        {
                            "type": {
                                "type": "Server"
                            },
                            "name": "server"
                        },
                        {
                            "type": {
                                "type": "Long"
                            },
                            "name": "idannotation"
                        },
                        {
                            "type": {
                                "type": "Long"
                            },
                            "name": "idterm"
                        }
                    ],
                    "path": "/api/annotation/{idannotation}/term/{idterm}/user/{idUser}.json",
                    "name": "get"
                },
                {
                    "isStatic": true,
                    "isAbstract": false,
                    "type": {
                        "type": "AnnotationTerm"
                    },
                    "queryParameters": [
                        {
                            "type": {
                                "type": "Integer"
                            },
                            "name": "max"
                        },
                        {
                            "type": {
                                "type": "Integer"
                            },
                            "name": "offset"
                        }
                    ],
                    "verb": "GET",
                    "methodParameters": [
                        {
                            "type": {
                                "type": "Server"
                            },
                            "name": "server"
                        }
                    ],
                    "pathParameters": [
                        {
                            "type": {
                                "type": "Long"
                            },
                            "name": "idannotation"
                        },
                        {
                            "type": {
                                "type": "Long"
                            },
                            "name": "idUser"
                        }
                    ],
                    "isPublic": true,
                    "code": {
                        "code": {
                            "JAVA": "\n\t\tthrow new Exception(\"Not yet implemented\");\n    "
                        }
                    },
                    "allParameters": [
                        {
                            "type": {
                                "type": "Server"
                            },
                            "name": "server"
                        },
                        {
                            "type": {
                                "type": "Long"
                            },
                            "name": "idannotation"
                        },
                        {
                            "type": {
                                "type": "Long"
                            },
                            "name": "idUser"
                        },
                        {
                            "type": {
                                "type": "Integer"
                            },
                            "name": "max"
                        },
                        {
                            "type": {
                                "type": "Integer"
                            },
                            "name": "offset"
                        }
                    ],
                    "path": "/api/annotation/{idannotation}/term.json",
                    "name": "listTermByAnnotation"
                },
                {
                    "isStatic": true,
                    "isAbstract": false,
                    "type": {
                        "type": "AnnotationTerm"
                    },
                    "queryParameters": [
                        {
                            "type": {
                                "type": "Integer"
                            },
                            "name": "max"
                        },
                        {
                            "type": {
                                "type": "Integer"
                            },
                            "name": "offset"
                        }
                    ],
                    "verb": "GET",
                    "methodParameters": [
                        {
                            "type": {
                                "type": "Server"
                            },
                            "name": "server"
                        }
                    ],
                    "pathParameters": [
                        {
                            "type": {
                                "type": "Long"
                            },
                            "name": "idannotation"
                        },
                        {
                            "type": {
                                "type": "Long"
                            },
                            "name": "idNotUser"
                        }
                    ],
                    "isPublic": true,
                    "code": {
                        "code": {
                            "JAVA": "\n\t\tthrow new Exception(\"Not yet implemented\");\n    "
                        }
                    },
                    "allParameters": [
                        {
                            "type": {
                                "type": "Server"
                            },
                            "name": "server"
                        },
                        {
                            "type": {
                                "type": "Long"
                            },
                            "name": "idannotation"
                        },
                        {
                            "type": {
                                "type": "Long"
                            },
                            "name": "idNotUser"
                        },
                        {
                            "type": {
                                "type": "Integer"
                            },
                            "name": "max"
                        },
                        {
                            "type": {
                                "type": "Integer"
                            },
                            "name": "offset"
                        }
                    ],
                    "path": "/api/annotation/{idannotation}/notuser/{idNotUser}/term.json",
                    "name": "listAnnotationTermByUserNot"
                },
                {
                    "isStatic": true,
                    "isAbstract": false,
                    "type": {
                        "type": "AnnotationTerm"
                    },
                    "queryParameters": [
                        {
                            "type": {
                                "type": "Boolean"
                            },
                            "name": "clearForAll"
                        }
                    ],
                    "verb": "POST",
                    "methodParameters": [
                        {
                            "type": {
                                "type": "Server"
                            },
                            "name": "server"
                        }
                    ],
                    "pathParameters": [
                        {
                            "type": {
                                "type": "Long"
                            },
                            "name": "idannotation"
                        },
                        {
                            "type": {
                                "type": "Long"
                            },
                            "name": "idterm"
                        }
                    ],
                    "isPublic": true,
                    "code": {
                        "code": {
                            "JAVA": "\n\t\tthrow new Exception(\"Not yet implemented\");\n    "
                        }
                    },
                    "allParameters": [
                        {
                            "type": {
                                "type": "Server"
                            },
                            "name": "server"
                        },
                        {
                            "type": {
                                "type": "Long"
                            },
                            "name": "idannotation"
                        },
                        {
                            "type": {
                                "type": "Long"
                            },
                            "name": "idterm"
                        },
                        {
                            "type": {
                                "type": "Boolean"
                            },
                            "name": "clearForAll"
                        }
                    ],
                    "path": "/api/annotation/{idannotation}/term/{idterm}/clearBefore.json",
                    "name": "addWithDeletingOldTerm"
                },
                {
                    "isStatic": false,
                    "isAbstract": false,
                    "type": {
                        "type": "Void"
                    },
                    "queryParameters": [
                        
                    ],
                    "verb": "POST",
                    "methodParameters": [
                        {
                            "type": {
                                "type": "Server"
                            },
                            "name": "server"
                        }
                    ],
                    "pathParameters": [
                        
                    ],
                    "isPublic": true,
                    "code": {
                        "code": {
                            "JAVA": "\n\t\tString path = \"/api/annotation/{idannotation}/term/{idterm}.json?\";\n\n\t\tJSONObject json = server.doPOST(path,this.toJSON());\n\n\t\tthis.build((JSONObject)json.get(\"annotationterm\"));\n\n    "
                        }
                    },
                    "allParameters": [
                        {
                            "type": {
                                "type": "Server"
                            },
                            "name": "server"
                        }
                    ],
                    "path": "/api/annotation/{idannotation}/term/{idterm}.json",
                    "name": "add"
                },
                {
                    "isStatic": false,
                    "isAbstract": false,
                    "type": {
                        "type": "Void"
                    },
                    "queryParameters": [
                        
                    ],
                    "verb": "DELETE",
                    "methodParameters": [
                        {
                            "type": {
                                "type": "Server"
                            },
                            "name": "server"
                        }
                    ],
                    "pathParameters": [
                        
                    ],
                    "isPublic": true,
                    "code": {
                        "code": {
                            "JAVA": "\n\t\tString path = \"/api/annotation/{idannotation}/term/{idterm}/user/{idUser}.json?\";\n\t\tpath = path.replace(\"{idannotation}\",getIdannotation()+\"\");\n\t\tpath = path.replace(\"{idterm}\",getIdterm()+\"\");\n\n\t\tserver.doDELETE(path);\n\t\tbuild(new JSONObject());\n\n    "
                        }
                    },
                    "allParameters": [
                        {
                            "type": {
                                "type": "Server"
                            },
                            "name": "server"
                        }
                    ],
                    "path": "/api/annotation/{idannotation}/term/{idterm}/user/{idUser}.json",
                    "name": "delete"
                }
            ],
            "name": "AbstractAnnotationTerm"
        },
        {
            "fullPackage": "be.cytomine.client.abst",
            "isAbstract": true,
            "comment": {
                "version": "0.1",
                "description": "A file that may be attached to any Cytomine domain. Usefull to include file into description.",
                "author": "ClientBuilder (Lo\u00EFc Rollus)"
            },
            "fields": [
                {
                    "useInConstructor": false,
                    "type": {
                        "type": "String"
                    },
                    "useInSetter": false,
                    "comment": {
                        "description": "The full class name of the domain"
                    },
                    "useInGetter": true,
                    "name": "clazz"
                },
                {
                    "useInConstructor": false,
                    "type": {
                        "type": "Long"
                    },
                    "useInSetter": false,
                    "comment": {
                        "description": "The domain id"
                    },
                    "useInGetter": true,
                    "name": "id"
                },
                {
                    "useInConstructor": false,
                    "type": {
                        "type": "Date"
                    },
                    "useInSetter": false,
                    "comment": {
                        "description": "The date of the domain creation"
                    },
                    "useInGetter": true,
                    "name": "created"
                },
                {
                    "useInConstructor": false,
                    "type": {
                        "type": "Date"
                    },
                    "useInSetter": false,
                    "comment": {
                        "description": "The date of the domain modification"
                    },
                    "useInGetter": true,
                    "name": "updated"
                },
                {
                    "useInConstructor": false,
                    "type": {
                        "type": "Date"
                    },
                    "useInSetter": false,
                    "comment": {
                        "description": "When domain was removed from Cytomine"
                    },
                    "useInGetter": true,
                    "name": "deleted"
                },
                {
                    "useInConstructor": true,
                    "type": {
                        "type": "Long"
                    },
                    "useInSetter": true,
                    "comment": {
                        "description": "Domain id"
                    },
                    "useInGetter": true,
                    "name": "domainIdent"
                },
                {
                    "useInConstructor": true,
                    "type": {
                        "type": "String"
                    },
                    "useInSetter": true,
                    "comment": {
                        "description": "Domain class name"
                    },
                    "useInGetter": true,
                    "name": "domainClassName"
                },
                {
                    "useInConstructor": false,
                    "type": {
                        "type": "String"
                    },
                    "useInSetter": false,
                    "comment": {
                        "description": "URL to get this file"
                    },
                    "useInGetter": true,
                    "name": "url"
                },
                {
                    "useInConstructor": true,
                    "type": {
                        "type": "String"
                    },
                    "useInSetter": true,
                    "comment": {
                        "description": "File name with ext"
                    },
                    "useInGetter": true,
                    "name": "filename"
                }
            ],
            "domainName": "AttachedFile",
            "methods": [
                {
                    "isStatic": false,
                    "isAbstract": false,
                    "type": {
                        "type": "Void"
                    },
                    "queryParameters": [
                        
                    ],
                    "verb": null,
                    "methodParameters": [
                        {
                            "type": {
                                "type": "Long"
                            },
                            "name": "domainIdent"
                        },
                        {
                            "type": {
                                "type": "String"
                            },
                            "name": "domainClassName"
                        },
                        {
                            "type": {
                                "type": "String"
                            },
                            "name": "filename"
                        }
                    ],
                    "pathParameters": [
                        
                    ],
                    "isPublic": true,
                    "code": {
                        "code": {
                            "JAVA": "\n\t\tthis.domainIdent=domainIdent;\n\t\tthis.domainClassName=domainClassName;\n\t\tthis.filename=filename;\n\n    "
                        }
                    },
                    "allParameters": [
                        {
                            "type": {
                                "type": "Long"
                            },
                            "name": "domainIdent"
                        },
                        {
                            "type": {
                                "type": "String"
                            },
                            "name": "domainClassName"
                        },
                        {
                            "type": {
                                "type": "String"
                            },
                            "name": "filename"
                        }
                    ],
                    "path": null,
                    "name": "build"
                },
                {
                    "isStatic": false,
                    "isAbstract": false,
                    "type": {
                        "type": "Void"
                    },
                    "queryParameters": [
                        
                    ],
                    "verb": null,
                    "methodParameters": [
                        {
                            "type": {
                                "type": "JSONObject"
                            },
                            "name": "json"
                        }
                    ],
                    "pathParameters": [
                        
                    ],
                    "isPublic": true,
                    "code": {
                        "code": {
                            "JAVA": "\n\t\tthis.clazz =JSONUtils.extractJSONString(json.get(\"class\"));\n\t\tthis.id =JSONUtils.extractJSONLong(json.get(\"id\"));\n\t\tthis.created =JSONUtils.extractJSONDate(json.get(\"created\"));\n\t\tthis.updated =JSONUtils.extractJSONDate(json.get(\"updated\"));\n\t\tthis.deleted =JSONUtils.extractJSONDate(json.get(\"deleted\"));\n\t\tthis.domainIdent =JSONUtils.extractJSONLong(json.get(\"domainIdent\"));\n\t\tthis.domainClassName =JSONUtils.extractJSONString(json.get(\"domainClassName\"));\n\t\tthis.url =JSONUtils.extractJSONString(json.get(\"url\"));\n\t\tthis.filename =JSONUtils.extractJSONString(json.get(\"filename\"));\n\n    "
                        }
                    },
                    "allParameters": [
                        {
                            "type": {
                                "type": "JSONObject"
                            },
                            "name": "json"
                        }
                    ],
                    "path": null,
                    "name": "build"
                },
                {
                    "isStatic": false,
                    "isAbstract": false,
                    "type": {
                        "type": "JSONObject"
                    },
                    "queryParameters": [
                        
                    ],
                    "verb": null,
                    "methodParameters": [
                        
                    ],
                    "pathParameters": [
                        
                    ],
                    "isPublic": true,
                    "code": {
                        "code": {
                            "JAVA": "\n\t\tJSONObject json=new JSONObject();\n\t\tjson.put(\"class\",JSONUtils.formatJSON(this.clazz));\n\t\tjson.put(\"id\",JSONUtils.formatJSON(this.id));\n\t\tjson.put(\"created\",JSONUtils.formatJSON(this.created));\n\t\tjson.put(\"updated\",JSONUtils.formatJSON(this.updated));\n\t\tjson.put(\"deleted\",JSONUtils.formatJSON(this.deleted));\n\t\tjson.put(\"domainIdent\",JSONUtils.formatJSON(this.domainIdent));\n\t\tjson.put(\"domainClassName\",JSONUtils.formatJSON(this.domainClassName));\n\t\tjson.put(\"url\",JSONUtils.formatJSON(this.url));\n\t\tjson.put(\"filename\",JSONUtils.formatJSON(this.filename));\n\n\t\treturn json;\n    "
                        }
                    },
                    "allParameters": [
                        
                    ],
                    "path": null,
                    "name": "toJSON"
                },
                {
                    "isStatic": true,
                    "isAbstract": false,
                    "type": {
                        "type": "AttachedFile"
                    },
                    "queryParameters": [
                        
                    ],
                    "verb": "GET",
                    "methodParameters": [
                        {
                            "type": {
                                "type": "Server"
                            },
                            "name": "server"
                        }
                    ],
                    "pathParameters": [
                        {
                            "type": {
                                "type": "Long"
                            },
                            "name": "id"
                        }
                    ],
                    "isPublic": true,
                    "code": {
                        "code": {
                            "JAVA": "\n\t\tString path = \"/api/attachedfile/{id}.json?\";\n\t\tpath = path.replace(\"{id}\",id+\"\");\n\n\t\tJSONObject json = server.doGET(path);\n\t\tAttachedFile domain = new AttachedFile();\n\t\tdomain.build(json);\n\t\treturn domain;\n\n    "
                        }
                    },
                    "allParameters": [
                        {
                            "type": {
                                "type": "Server"
                            },
                            "name": "server"
                        },
                        {
                            "type": {
                                "type": "Long"
                            },
                            "name": "id"
                        }
                    ],
                    "path": "/api/attachedfile/{id}.json",
                    "name": "get"
                },
                {
                    "isStatic": true,
                    "isAbstract": false,
                    "type": {
                        "type": "File"
                    },
                    "queryParameters": [
                        
                    ],
                    "verb": "GET",
                    "methodParameters": [
                        {
                            "type": {
                                "type": "Server"
                            },
                            "name": "server"
                        }
                    ],
                    "pathParameters": [
                        {
                            "type": {
                                "type": "Long"
                            },
                            "name": "id"
                        }
                    ],
                    "isPublic": true,
                    "code": {
                        "code": {
                            "JAVA": "\n\t\tthrow new Exception(\"Not yet implemented\");\n    "
                        }
                    },
                    "allParameters": [
                        {
                            "type": {
                                "type": "Server"
                            },
                            "name": "server"
                        },
                        {
                            "type": {
                                "type": "Long"
                            },
                            "name": "id"
                        }
                    ],
                    "path": "/api/attachedfile/{id}/download",
                    "name": "download"
                },
                {
                    "isStatic": true,
                    "isAbstract": false,
                    "type": {
                        "type": "AttachedFile"
                    },
                    "queryParameters": [
                        
                    ],
                    "verb": "PUT",
                    "methodParameters": [
                        {
                            "type": {
                                "type": "Server"
                            },
                            "name": "server"
                        }
                    ],
                    "pathParameters": [
                        {
                            "type": {
                                "type": "Long"
                            },
                            "name": "domainIdent"
                        },
                        {
                            "type": {
                                "type": "String"
                            },
                            "name": "domainClassName"
                        }
                    ],
                    "isPublic": true,
                    "code": {
                        "code": {
                            "JAVA": "\n\t\tthrow new Exception(\"Not yet implemented\");\n    "
                        }
                    },
                    "allParameters": [
                        {
                            "type": {
                                "type": "Server"
                            },
                            "name": "server"
                        },
                        {
                            "type": {
                                "type": "Long"
                            },
                            "name": "domainIdent"
                        },
                        {
                            "type": {
                                "type": "String"
                            },
                            "name": "domainClassName"
                        }
                    ],
                    "path": "/api/attachedfile.json",
                    "name": "upload"
                },
                {
                    "isStatic": true,
                    "isAbstract": false,
                    "type": {
                        "type": "AttachedFile"
                    },
                    "queryParameters": [
                        {
                            "type": {
                                "type": "Integer"
                            },
                            "name": "max"
                        },
                        {
                            "type": {
                                "type": "Integer"
                            },
                            "name": "offset"
                        }
                    ],
                    "verb": "GET",
                    "methodParameters": [
                        {
                            "type": {
                                "type": "Server"
                            },
                            "name": "server"
                        }
                    ],
                    "pathParameters": [
                        {
                            "type": {
                                "type": "Long"
                            },
                            "name": "domainIdent"
                        },
                        {
                            "type": {
                                "type": "String"
                            },
                            "name": "domainClassName"
                        }
                    ],
                    "isPublic": true,
                    "code": {
                        "code": {
                            "JAVA": "\n\t\tthrow new Exception(\"Not yet implemented\");\n    "
                        }
                    },
                    "allParameters": [
                        {
                            "type": {
                                "type": "Server"
                            },
                            "name": "server"
                        },
                        {
                            "type": {
                                "type": "Long"
                            },
                            "name": "domainIdent"
                        },
                        {
                            "type": {
                                "type": "String"
                            },
                            "name": "domainClassName"
                        },
                        {
                            "type": {
                                "type": "Integer"
                            },
                            "name": "max"
                        },
                        {
                            "type": {
                                "type": "Integer"
                            },
                            "name": "offset"
                        }
                    ],
                    "path": "/api/domain/{domainClassName}/{domainIdent}/attachedfile.json",
                    "name": "listByDomain"
                },
                {
                    "isStatic": true,
                    "isAbstract": false,
                    "type": {
                        "type": "AttachedFile"
                    },
                    "queryParameters": [
                        
                    ],
                    "verb": "POST",
                    "methodParameters": [
                        {
                            "type": {
                                "type": "Server"
                            },
                            "name": "server"
                        }
                    ],
                    "pathParameters": [
                        {
                            "type": {
                                "type": "Long"
                            },
                            "name": "domainIdent"
                        },
                        {
                            "type": {
                                "type": "String"
                            },
                            "name": "domainClassName"
                        }
                    ],
                    "isPublic": true,
                    "code": {
                        "code": {
                            "JAVA": "\n\t\tthrow new Exception(\"Not yet implemented\");\n    "
                        }
                    },
                    "allParameters": [
                        {
                            "type": {
                                "type": "Server"
                            },
                            "name": "server"
                        },
                        {
                            "type": {
                                "type": "Long"
                            },
                            "name": "domainIdent"
                        },
                        {
                            "type": {
                                "type": "String"
                            },
                            "name": "domainClassName"
                        }
                    ],
                    "path": "/api/attachedfileCKEditor.json",
                    "name": "uploadFromCKEditor"
                },
                {
                    "isStatic": true,
                    "isAbstract": false,
                    "type": {
                        "type": "AttachedFile"
                    },
                    "queryParameters": [
                        {
                            "type": {
                                "type": "Integer"
                            },
                            "name": "max"
                        },
                        {
                            "type": {
                                "type": "Integer"
                            },
                            "name": "offset"
                        }
                    ],
                    "verb": "GET",
                    "methodParameters": [
                        {
                            "type": {
                                "type": "Server"
                            },
                            "name": "server"
                        }
                    ],
                    "pathParameters": [
                        
                    ],
                    "isPublic": true,
                    "code": {
                        "code": {
                            "JAVA": "\n\t\tthrow new Exception(\"Not yet implemented\");\n    "
                        }
                    },
                    "allParameters": [
                        {
                            "type": {
                                "type": "Server"
                            },
                            "name": "server"
                        },
                        {
                            "type": {
                                "type": "Integer"
                            },
                            "name": "max"
                        },
                        {
                            "type": {
                                "type": "Integer"
                            },
                            "name": "offset"
                        }
                    ],
                    "path": "/api/attachedfile.json",
                    "name": "list"
                }
            ],
            "name": "AbstractAttachedFile"
        },
        {
            "fullPackage": "be.cytomine.client.abst",
            "isAbstract": true,
            "comment": {
                "version": "0.1",
                "description": "A domain description (text, image,...).",
                "author": "ClientBuilder (Lo\u00EFc Rollus)"
            },
            "fields": [
                {
                    "useInConstructor": false,
                    "type": {
                        "type": "String"
                    },
                    "useInSetter": false,
                    "comment": {
                        "description": "The full class name of the domain"
                    },
                    "useInGetter": true,
                    "name": "clazz"
                },
                {
                    "useInConstructor": false,
                    "type": {
                        "type": "Long"
                    },
                    "useInSetter": false,
                    "comment": {
                        "description": "The domain id"
                    },
                    "useInGetter": true,
                    "name": "id"
                },
                {
                    "useInConstructor": false,
                    "type": {
                        "type": "Date"
                    },
                    "useInSetter": false,
                    "comment": {
                        "description": "The date of the domain creation"
                    },
                    "useInGetter": true,
                    "name": "created"
                },
                {
                    "useInConstructor": false,
                    "type": {
                        "type": "Date"
                    },
                    "useInSetter": false,
                    "comment": {
                        "description": "The date of the domain modification"
                    },
                    "useInGetter": true,
                    "name": "updated"
                },
                {
                    "useInConstructor": false,
                    "type": {
                        "type": "Date"
                    },
                    "useInSetter": false,
                    "comment": {
                        "description": "When domain was removed from Cytomine"
                    },
                    "useInGetter": true,
                    "name": "deleted"
                },
                {
                    "useInConstructor": true,
                    "type": {
                        "type": "String"
                    },
                    "useInSetter": true,
                    "comment": {
                        "description": "Domain class name"
                    },
                    "useInGetter": true,
                    "name": "domainClassName"
                },
                {
                    "useInConstructor": true,
                    "type": {
                        "type": "Long"
                    },
                    "useInSetter": true,
                    "comment": {
                        "description": "Domain id"
                    },
                    "useInGetter": true,
                    "name": "domainIdent"
                },
                {
                    "useInConstructor": true,
                    "type": {
                        "type": "String"
                    },
                    "useInSetter": true,
                    "comment": {
                        "description": "Description text"
                    },
                    "useInGetter": true,
                    "name": "data"
                }
            ],
            "domainName": "Description",
            "methods": [
                {
                    "isStatic": false,
                    "isAbstract": false,
                    "type": {
                        "type": "Void"
                    },
                    "queryParameters": [
                        
                    ],
                    "verb": null,
                    "methodParameters": [
                        {
                            "type": {
                                "type": "String"
                            },
                            "name": "domainClassName"
                        },
                        {
                            "type": {
                                "type": "Long"
                            },
                            "name": "domainIdent"
                        },
                        {
                            "type": {
                                "type": "String"
                            },
                            "name": "data"
                        }
                    ],
                    "pathParameters": [
                        
                    ],
                    "isPublic": true,
                    "code": {
                        "code": {
                            "JAVA": "\n\t\tthis.domainClassName=domainClassName;\n\t\tthis.domainIdent=domainIdent;\n\t\tthis.data=data;\n\n    "
                        }
                    },
                    "allParameters": [
                        {
                            "type": {
                                "type": "String"
                            },
                            "name": "domainClassName"
                        },
                        {
                            "type": {
                                "type": "Long"
                            },
                            "name": "domainIdent"
                        },
                        {
                            "type": {
                                "type": "String"
                            },
                            "name": "data"
                        }
                    ],
                    "path": null,
                    "name": "build"
                },
                {
                    "isStatic": false,
                    "isAbstract": false,
                    "type": {
                        "type": "Void"
                    },
                    "queryParameters": [
                        
                    ],
                    "verb": null,
                    "methodParameters": [
                        {
                            "type": {
                                "type": "JSONObject"
                            },
                            "name": "json"
                        }
                    ],
                    "pathParameters": [
                        
                    ],
                    "isPublic": true,
                    "code": {
                        "code": {
                            "JAVA": "\n\t\tthis.clazz =JSONUtils.extractJSONString(json.get(\"class\"));\n\t\tthis.id =JSONUtils.extractJSONLong(json.get(\"id\"));\n\t\tthis.created =JSONUtils.extractJSONDate(json.get(\"created\"));\n\t\tthis.updated =JSONUtils.extractJSONDate(json.get(\"updated\"));\n\t\tthis.deleted =JSONUtils.extractJSONDate(json.get(\"deleted\"));\n\t\tthis.domainClassName =JSONUtils.extractJSONString(json.get(\"domainClassName\"));\n\t\tthis.domainIdent =JSONUtils.extractJSONLong(json.get(\"domainIdent\"));\n\t\tthis.data =JSONUtils.extractJSONString(json.get(\"data\"));\n\n    "
                        }
                    },
                    "allParameters": [
                        {
                            "type": {
                                "type": "JSONObject"
                            },
                            "name": "json"
                        }
                    ],
                    "path": null,
                    "name": "build"
                },
                {
                    "isStatic": false,
                    "isAbstract": false,
                    "type": {
                        "type": "JSONObject"
                    },
                    "queryParameters": [
                        
                    ],
                    "verb": null,
                    "methodParameters": [
                        
                    ],
                    "pathParameters": [
                        
                    ],
                    "isPublic": true,
                    "code": {
                        "code": {
                            "JAVA": "\n\t\tJSONObject json=new JSONObject();\n\t\tjson.put(\"class\",JSONUtils.formatJSON(this.clazz));\n\t\tjson.put(\"id\",JSONUtils.formatJSON(this.id));\n\t\tjson.put(\"created\",JSONUtils.formatJSON(this.created));\n\t\tjson.put(\"updated\",JSONUtils.formatJSON(this.updated));\n\t\tjson.put(\"deleted\",JSONUtils.formatJSON(this.deleted));\n\t\tjson.put(\"domainClassName\",JSONUtils.formatJSON(this.domainClassName));\n\t\tjson.put(\"domainIdent\",JSONUtils.formatJSON(this.domainIdent));\n\t\tjson.put(\"data\",JSONUtils.formatJSON(this.data));\n\n\t\treturn json;\n    "
                        }
                    },
                    "allParameters": [
                        
                    ],
                    "path": null,
                    "name": "toJSON"
                },
                {
                    "isStatic": true,
                    "isAbstract": false,
                    "type": {
                        "type": "Description"
                    },
                    "queryParameters": [
                        
                    ],
                    "verb": "GET",
                    "methodParameters": [
                        {
                            "type": {
                                "type": "Server"
                            },
                            "name": "server"
                        }
                    ],
                    "pathParameters": [
                        {
                            "type": {
                                "type": "Long"
                            },
                            "name": "domainIdent"
                        },
                        {
                            "type": {
                                "type": "String"
                            },
                            "name": "domainClassName"
                        }
                    ],
                    "isPublic": true,
                    "code": {
                        "code": {
                            "JAVA": "\n\t\tthrow new Exception(\"Not yet implemented\");\n    "
                        }
                    },
                    "allParameters": [
                        {
                            "type": {
                                "type": "Server"
                            },
                            "name": "server"
                        },
                        {
                            "type": {
                                "type": "Long"
                            },
                            "name": "domainIdent"
                        },
                        {
                            "type": {
                                "type": "String"
                            },
                            "name": "domainClassName"
                        }
                    ],
                    "path": "/api/domain/{domainClassName}/{domainIdent}/description.json",
                    "name": "showByDomain"
                },
                {
                    "isStatic": false,
                    "isAbstract": false,
                    "type": {
                        "type": "Void"
                    },
                    "queryParameters": [
                        
                    ],
                    "verb": "POST",
                    "methodParameters": [
                        {
                            "type": {
                                "type": "Server"
                            },
                            "name": "server"
                        }
                    ],
                    "pathParameters": [
                        
                    ],
                    "isPublic": true,
                    "code": {
                        "code": {
                            "JAVA": "\n\t\tString path = \"/api/domain/{domainClassName}/{domainIdent}/description.json?\";\n\n\t\tJSONObject json = server.doPOST(path,this.toJSON());\n\n\t\tthis.build((JSONObject)json.get(\"description\"));\n\n    "
                        }
                    },
                    "allParameters": [
                        {
                            "type": {
                                "type": "Server"
                            },
                            "name": "server"
                        }
                    ],
                    "path": "/api/domain/{domainClassName}/{domainIdent}/description.json",
                    "name": "add"
                },
                {
                    "isStatic": true,
                    "isAbstract": false,
                    "type": {
                        "type": "List"
                    },
                    "queryParameters": [
                        
                    ],
                    "verb": "GET",
                    "methodParameters": [
                        {
                            "type": {
                                "type": "Server"
                            },
                            "name": "server"
                        }
                    ],
                    "pathParameters": [
                        
                    ],
                    "isPublic": true,
                    "code": {
                        "code": {
                            "JAVA": "\n\t\tString path = \"/rest description/list.json?\";\n\n\t\tJSONArray json = server.doGETList(path);\n\t\tList<Description> domains = new ArrayList<Description>();\n\t\tfor(int i=0;i<json.size();i++) {\n\t\t\tDescription domain = new Description();\n\t\t\tdomain.build((JSONObject)json.get(i));\n\t\t\t domains.add(domain);\n\t\t }\n\t\treturn domains;\n\n    "
                        }
                    },
                    "allParameters": [
                        {
                            "type": {
                                "type": "Server"
                            },
                            "name": "server"
                        }
                    ],
                    "path": "/rest description/list.json",
                    "name": "list"
                },
                {
                    "isStatic": true,
                    "isAbstract": false,
                    "type": {
                        "type": "List"
                    },
                    "queryParameters": [
                        {
                            "type": {
                                "type": "Integer"
                            },
                            "name": "max"
                        },
                        {
                            "type": {
                                "type": "Integer"
                            },
                            "name": "offset"
                        }
                    ],
                    "verb": "GET",
                    "methodParameters": [
                        {
                            "type": {
                                "type": "Server"
                            },
                            "name": "server"
                        }
                    ],
                    "pathParameters": [
                        
                    ],
                    "isPublic": true,
                    "code": {
                        "code": {
                            "JAVA": "\n\t\tString path = \"/rest description/list.json?\";\n\t\tpath = path + \"&max=\" + max;\n\t\tpath = path + \"&offset=\" + offset;\n\n\t\tJSONArray json = server.doGETList(path);\n\t\tList<Description> domains = new ArrayList<Description>();\n\t\tfor(int i=0;i<json.size();i++) {\n\t\t\tDescription domain = new Description();\n\t\t\tdomain.build((JSONObject)json.get(i));\n\t\t\t domains.add(domain);\n\t\t }\n\t\treturn domains;\n\n    "
                        }
                    },
                    "allParameters": [
                        {
                            "type": {
                                "type": "Server"
                            },
                            "name": "server"
                        },
                        {
                            "type": {
                                "type": "Integer"
                            },
                            "name": "max"
                        },
                        {
                            "type": {
                                "type": "Integer"
                            },
                            "name": "offset"
                        }
                    ],
                    "path": "/rest description/list.json",
                    "name": "list"
                },
                {
                    "isStatic": false,
                    "isAbstract": false,
                    "type": {
                        "type": "Void"
                    },
                    "queryParameters": [
                        
                    ],
                    "verb": "DELETE",
                    "methodParameters": [
                        {
                            "type": {
                                "type": "Server"
                            },
                            "name": "server"
                        }
                    ],
                    "pathParameters": [
                        
                    ],
                    "isPublic": true,
                    "code": {
                        "code": {
                            "JAVA": "\n\t\tString path = \"/api/domain/{domainClassName}/{domainIdent}/description.json?\";\n\t\tpath = path.replace(\"{domainIdent}\",getDomainIdent()+\"\");\n\t\tpath = path.replace(\"{domainClassName}\",getDomainClassName()+\"\");\n\n\t\tserver.doDELETE(path);\n\t\tbuild(new JSONObject());\n\n    "
                        }
                    },
                    "allParameters": [
                        {
                            "type": {
                                "type": "Server"
                            },
                            "name": "server"
                        }
                    ],
                    "path": "/api/domain/{domainClassName}/{domainIdent}/description.json",
                    "name": "delete"
                },
                {
                    "isStatic": false,
                    "isAbstract": false,
                    "type": {
                        "type": "Void"
                    },
                    "queryParameters": [
                        
                    ],
                    "verb": "PUT",
                    "methodParameters": [
                        {
                            "type": {
                                "type": "Server"
                            },
                            "name": "server"
                        }
                    ],
                    "pathParameters": [
                        
                    ],
                    "isPublic": true,
                    "code": {
                        "code": {
                            "JAVA": "\n\t\tString path = \"/api/domain/{domainClassName}/{domainIdent}/description.json?\";\n\t\tpath = path.replace(\"{domainIdent}\",getDomainIdent()+\"\");\n\t\tpath = path.replace(\"{domainClassName}\",getDomainClassName()+\"\");\n\n\t\tJSONObject json = server.doPUT(path,this.toJSON());\n\n\t\tthis.build((JSONObject)json.get(\"description\"));\n\n    "
                        }
                    },
                    "allParameters": [
                        {
                            "type": {
                                "type": "Server"
                            },
                            "name": "server"
                        }
                    ],
                    "path": "/api/domain/{domainClassName}/{domainIdent}/description.json",
                    "name": "edit"
                }
            ],
            "name": "AbstractDescription"
        },
        {
            "fullPackage": "be.cytomine.client.abst",
            "isAbstract": true,
            "comment": {
                "version": "0.1",
                "description": "A discipline is a thematic for a project",
                "author": "ClientBuilder (Lo\u00EFc Rollus)"
            },
            "fields": [
                {
                    "useInConstructor": false,
                    "type": {
                        "type": "String"
                    },
                    "useInSetter": false,
                    "comment": {
                        "description": "The full class name of the domain"
                    },
                    "useInGetter": true,
                    "name": "clazz"
                },
                {
                    "useInConstructor": false,
                    "type": {
                        "type": "Long"
                    },
                    "useInSetter": false,
                    "comment": {
                        "description": "The domain id"
                    },
                    "useInGetter": true,
                    "name": "id"
                },
                {
                    "useInConstructor": false,
                    "type": {
                        "type": "Date"
                    },
                    "useInSetter": false,
                    "comment": {
                        "description": "The date of the domain creation"
                    },
                    "useInGetter": true,
                    "name": "created"
                },
                {
                    "useInConstructor": false,
                    "type": {
                        "type": "Date"
                    },
                    "useInSetter": false,
                    "comment": {
                        "description": "The date of the domain modification"
                    },
                    "useInGetter": true,
                    "name": "updated"
                },
                {
                    "useInConstructor": false,
                    "type": {
                        "type": "Date"
                    },
                    "useInSetter": false,
                    "comment": {
                        "description": "When domain was removed from Cytomine"
                    },
                    "useInGetter": true,
                    "name": "deleted"
                },
                {
                    "useInConstructor": true,
                    "type": {
                        "type": "String"
                    },
                    "useInSetter": true,
                    "comment": {
                        "description": "The name of the discipline"
                    },
                    "useInGetter": true,
                    "name": "name"
                }
            ],
            "domainName": "Discipline",
            "methods": [
                {
                    "isStatic": false,
                    "isAbstract": false,
                    "type": {
                        "type": "Void"
                    },
                    "queryParameters": [
                        
                    ],
                    "verb": null,
                    "methodParameters": [
                        {
                            "type": {
                                "type": "String"
                            },
                            "name": "name"
                        }
                    ],
                    "pathParameters": [
                        
                    ],
                    "isPublic": true,
                    "code": {
                        "code": {
                            "JAVA": "\n\t\tthis.name=name;\n\n    "
                        }
                    },
                    "allParameters": [
                        {
                            "type": {
                                "type": "String"
                            },
                            "name": "name"
                        }
                    ],
                    "path": null,
                    "name": "build"
                },
                {
                    "isStatic": false,
                    "isAbstract": false,
                    "type": {
                        "type": "Void"
                    },
                    "queryParameters": [
                        
                    ],
                    "verb": null,
                    "methodParameters": [
                        {
                            "type": {
                                "type": "JSONObject"
                            },
                            "name": "json"
                        }
                    ],
                    "pathParameters": [
                        
                    ],
                    "isPublic": true,
                    "code": {
                        "code": {
                            "JAVA": "\n\t\tthis.clazz =JSONUtils.extractJSONString(json.get(\"class\"));\n\t\tthis.id =JSONUtils.extractJSONLong(json.get(\"id\"));\n\t\tthis.created =JSONUtils.extractJSONDate(json.get(\"created\"));\n\t\tthis.updated =JSONUtils.extractJSONDate(json.get(\"updated\"));\n\t\tthis.deleted =JSONUtils.extractJSONDate(json.get(\"deleted\"));\n\t\tthis.name =JSONUtils.extractJSONString(json.get(\"name\"));\n\n    "
                        }
                    },
                    "allParameters": [
                        {
                            "type": {
                                "type": "JSONObject"
                            },
                            "name": "json"
                        }
                    ],
                    "path": null,
                    "name": "build"
                },
                {
                    "isStatic": false,
                    "isAbstract": false,
                    "type": {
                        "type": "JSONObject"
                    },
                    "queryParameters": [
                        
                    ],
                    "verb": null,
                    "methodParameters": [
                        
                    ],
                    "pathParameters": [
                        
                    ],
                    "isPublic": true,
                    "code": {
                        "code": {
                            "JAVA": "\n\t\tJSONObject json=new JSONObject();\n\t\tjson.put(\"class\",JSONUtils.formatJSON(this.clazz));\n\t\tjson.put(\"id\",JSONUtils.formatJSON(this.id));\n\t\tjson.put(\"created\",JSONUtils.formatJSON(this.created));\n\t\tjson.put(\"updated\",JSONUtils.formatJSON(this.updated));\n\t\tjson.put(\"deleted\",JSONUtils.formatJSON(this.deleted));\n\t\tjson.put(\"name\",JSONUtils.formatJSON(this.name));\n\n\t\treturn json;\n    "
                        }
                    },
                    "allParameters": [
                        
                    ],
                    "path": null,
                    "name": "toJSON"
                },
                {
                    "isStatic": true,
                    "isAbstract": false,
                    "type": {
                        "type": "Discipline"
                    },
                    "queryParameters": [
                        
                    ],
                    "verb": "GET",
                    "methodParameters": [
                        {
                            "type": {
                                "type": "Server"
                            },
                            "name": "server"
                        }
                    ],
                    "pathParameters": [
                        {
                            "type": {
                                "type": "Long"
                            },
                            "name": "id"
                        }
                    ],
                    "isPublic": true,
                    "code": {
                        "code": {
                            "JAVA": "\n\t\tString path = \"/api/discipline/{id}.json?\";\n\t\tpath = path.replace(\"{id}\",id+\"\");\n\n\t\tJSONObject json = server.doGET(path);\n\t\tDiscipline domain = new Discipline();\n\t\tdomain.build(json);\n\t\treturn domain;\n\n    "
                        }
                    },
                    "allParameters": [
                        {
                            "type": {
                                "type": "Server"
                            },
                            "name": "server"
                        },
                        {
                            "type": {
                                "type": "Long"
                            },
                            "name": "id"
                        }
                    ],
                    "path": "/api/discipline/{id}.json",
                    "name": "get"
                },
                {
                    "isStatic": false,
                    "isAbstract": false,
                    "type": {
                        "type": "Void"
                    },
                    "queryParameters": [
                        
                    ],
                    "verb": "POST",
                    "methodParameters": [
                        {
                            "type": {
                                "type": "Server"
                            },
                            "name": "server"
                        }
                    ],
                    "pathParameters": [
                        
                    ],
                    "isPublic": true,
                    "code": {
                        "code": {
                            "JAVA": "\n\t\tString path = \"/api/discipline.json?\";\n\n\t\tJSONObject json = server.doPOST(path,this.toJSON());\n\n\t\tthis.build((JSONObject)json.get(\"discipline\"));\n\n    "
                        }
                    },
                    "allParameters": [
                        {
                            "type": {
                                "type": "Server"
                            },
                            "name": "server"
                        }
                    ],
                    "path": "/api/discipline.json",
                    "name": "add"
                },
                {
                    "isStatic": true,
                    "isAbstract": false,
                    "type": {
                        "type": "List"
                    },
                    "queryParameters": [
                        
                    ],
                    "verb": "GET",
                    "methodParameters": [
                        {
                            "type": {
                                "type": "Server"
                            },
                            "name": "server"
                        }
                    ],
                    "pathParameters": [
                        
                    ],
                    "isPublic": true,
                    "code": {
                        "code": {
                            "JAVA": "\n\t\tString path = \"/api/discipline.json?\";\n\n\t\tJSONArray json = server.doGETList(path);\n\t\tList<Discipline> domains = new ArrayList<Discipline>();\n\t\tfor(int i=0;i<json.size();i++) {\n\t\t\tDiscipline domain = new Discipline();\n\t\t\tdomain.build((JSONObject)json.get(i));\n\t\t\t domains.add(domain);\n\t\t }\n\t\treturn domains;\n\n    "
                        }
                    },
                    "allParameters": [
                        {
                            "type": {
                                "type": "Server"
                            },
                            "name": "server"
                        }
                    ],
                    "path": "/api/discipline.json",
                    "name": "list"
                },
                {
                    "isStatic": true,
                    "isAbstract": false,
                    "type": {
                        "type": "List"
                    },
                    "queryParameters": [
                        {
                            "type": {
                                "type": "Integer"
                            },
                            "name": "max"
                        },
                        {
                            "type": {
                                "type": "Integer"
                            },
                            "name": "offset"
                        }
                    ],
                    "verb": "GET",
                    "methodParameters": [
                        {
                            "type": {
                                "type": "Server"
                            },
                            "name": "server"
                        }
                    ],
                    "pathParameters": [
                        
                    ],
                    "isPublic": true,
                    "code": {
                        "code": {
                            "JAVA": "\n\t\tString path = \"/api/discipline.json?\";\n\t\tpath = path + \"&max=\" + max;\n\t\tpath = path + \"&offset=\" + offset;\n\n\t\tJSONArray json = server.doGETList(path);\n\t\tList<Discipline> domains = new ArrayList<Discipline>();\n\t\tfor(int i=0;i<json.size();i++) {\n\t\t\tDiscipline domain = new Discipline();\n\t\t\tdomain.build((JSONObject)json.get(i));\n\t\t\t domains.add(domain);\n\t\t }\n\t\treturn domains;\n\n    "
                        }
                    },
                    "allParameters": [
                        {
                            "type": {
                                "type": "Server"
                            },
                            "name": "server"
                        },
                        {
                            "type": {
                                "type": "Integer"
                            },
                            "name": "max"
                        },
                        {
                            "type": {
                                "type": "Integer"
                            },
                            "name": "offset"
                        }
                    ],
                    "path": "/api/discipline.json",
                    "name": "list"
                },
                {
                    "isStatic": false,
                    "isAbstract": false,
                    "type": {
                        "type": "Void"
                    },
                    "queryParameters": [
                        
                    ],
                    "verb": "DELETE",
                    "methodParameters": [
                        {
                            "type": {
                                "type": "Server"
                            },
                            "name": "server"
                        }
                    ],
                    "pathParameters": [
                        
                    ],
                    "isPublic": true,
                    "code": {
                        "code": {
                            "JAVA": "\n\t\tString path = \"/api/discipline/{id}.json?\";\n\t\tpath = path.replace(\"{id}\",getId()+\"\");\n\n\t\tserver.doDELETE(path);\n\t\tbuild(new JSONObject());\n\n    "
                        }
                    },
                    "allParameters": [
                        {
                            "type": {
                                "type": "Server"
                            },
                            "name": "server"
                        }
                    ],
                    "path": "/api/discipline/{id}.json",
                    "name": "delete"
                },
                {
                    "isStatic": false,
                    "isAbstract": false,
                    "type": {
                        "type": "Void"
                    },
                    "queryParameters": [
                        
                    ],
                    "verb": "PUT",
                    "methodParameters": [
                        {
                            "type": {
                                "type": "Server"
                            },
                            "name": "server"
                        }
                    ],
                    "pathParameters": [
                        
                    ],
                    "isPublic": true,
                    "code": {
                        "code": {
                            "JAVA": "\n\t\tString path = \"/api/discipline/{id}.json?\";\n\t\tpath = path.replace(\"{id}\",getId()+\"\");\n\n\t\tJSONObject json = server.doPUT(path,this.toJSON());\n\n\t\tthis.build((JSONObject)json.get(\"discipline\"));\n\n    "
                        }
                    },
                    "allParameters": [
                        {
                            "type": {
                                "type": "Server"
                            },
                            "name": "server"
                        }
                    ],
                    "path": "/api/discipline/{id}.json",
                    "name": "edit"
                }
            ],
            "name": "AbstractDiscipline"
        },
        {
            "fullPackage": "be.cytomine.client.abst",
            "isAbstract": true,
            "comment": {
                "version": "0.1",
                "description": "A group is a set of users. A user may be in many groups",
                "author": "ClientBuilder (Lo\u00EFc Rollus)"
            },
            "fields": [
                {
                    "useInConstructor": false,
                    "type": {
                        "type": "String"
                    },
                    "useInSetter": false,
                    "comment": {
                        "description": "The full class name of the domain"
                    },
                    "useInGetter": true,
                    "name": "clazz"
                },
                {
                    "useInConstructor": false,
                    "type": {
                        "type": "Long"
                    },
                    "useInSetter": false,
                    "comment": {
                        "description": "The domain id"
                    },
                    "useInGetter": true,
                    "name": "id"
                },
                {
                    "useInConstructor": false,
                    "type": {
                        "type": "Date"
                    },
                    "useInSetter": false,
                    "comment": {
                        "description": "The date of the domain creation"
                    },
                    "useInGetter": true,
                    "name": "created"
                },
                {
                    "useInConstructor": false,
                    "type": {
                        "type": "Date"
                    },
                    "useInSetter": false,
                    "comment": {
                        "description": "The date of the domain modification"
                    },
                    "useInGetter": true,
                    "name": "updated"
                },
                {
                    "useInConstructor": false,
                    "type": {
                        "type": "Date"
                    },
                    "useInSetter": false,
                    "comment": {
                        "description": "When domain was removed from Cytomine"
                    },
                    "useInGetter": true,
                    "name": "deleted"
                },
                {
                    "useInConstructor": true,
                    "type": {
                        "type": "String"
                    },
                    "useInSetter": true,
                    "comment": {
                        "description": "The group name"
                    },
                    "useInGetter": true,
                    "name": "name"
                }
            ],
            "domainName": "Group",
            "methods": [
                {
                    "isStatic": false,
                    "isAbstract": false,
                    "type": {
                        "type": "Void"
                    },
                    "queryParameters": [
                        
                    ],
                    "verb": null,
                    "methodParameters": [
                        {
                            "type": {
                                "type": "String"
                            },
                            "name": "name"
                        }
                    ],
                    "pathParameters": [
                        
                    ],
                    "isPublic": true,
                    "code": {
                        "code": {
                            "JAVA": "\n\t\tthis.name=name;\n\n    "
                        }
                    },
                    "allParameters": [
                        {
                            "type": {
                                "type": "String"
                            },
                            "name": "name"
                        }
                    ],
                    "path": null,
                    "name": "build"
                },
                {
                    "isStatic": false,
                    "isAbstract": false,
                    "type": {
                        "type": "Void"
                    },
                    "queryParameters": [
                        
                    ],
                    "verb": null,
                    "methodParameters": [
                        {
                            "type": {
                                "type": "JSONObject"
                            },
                            "name": "json"
                        }
                    ],
                    "pathParameters": [
                        
                    ],
                    "isPublic": true,
                    "code": {
                        "code": {
                            "JAVA": "\n\t\tthis.clazz =JSONUtils.extractJSONString(json.get(\"class\"));\n\t\tthis.id =JSONUtils.extractJSONLong(json.get(\"id\"));\n\t\tthis.created =JSONUtils.extractJSONDate(json.get(\"created\"));\n\t\tthis.updated =JSONUtils.extractJSONDate(json.get(\"updated\"));\n\t\tthis.deleted =JSONUtils.extractJSONDate(json.get(\"deleted\"));\n\t\tthis.name =JSONUtils.extractJSONString(json.get(\"name\"));\n\n    "
                        }
                    },
                    "allParameters": [
                        {
                            "type": {
                                "type": "JSONObject"
                            },
                            "name": "json"
                        }
                    ],
                    "path": null,
                    "name": "build"
                },
                {
                    "isStatic": false,
                    "isAbstract": false,
                    "type": {
                        "type": "JSONObject"
                    },
                    "queryParameters": [
                        
                    ],
                    "verb": null,
                    "methodParameters": [
                        
                    ],
                    "pathParameters": [
                        
                    ],
                    "isPublic": true,
                    "code": {
                        "code": {
                            "JAVA": "\n\t\tJSONObject json=new JSONObject();\n\t\tjson.put(\"class\",JSONUtils.formatJSON(this.clazz));\n\t\tjson.put(\"id\",JSONUtils.formatJSON(this.id));\n\t\tjson.put(\"created\",JSONUtils.formatJSON(this.created));\n\t\tjson.put(\"updated\",JSONUtils.formatJSON(this.updated));\n\t\tjson.put(\"deleted\",JSONUtils.formatJSON(this.deleted));\n\t\tjson.put(\"name\",JSONUtils.formatJSON(this.name));\n\n\t\treturn json;\n    "
                        }
                    },
                    "allParameters": [
                        
                    ],
                    "path": null,
                    "name": "toJSON"
                },
                {
                    "isStatic": true,
                    "isAbstract": false,
                    "type": {
                        "type": "Group"
                    },
                    "queryParameters": [
                        
                    ],
                    "verb": "GET",
                    "methodParameters": [
                        {
                            "type": {
                                "type": "Server"
                            },
                            "name": "server"
                        }
                    ],
                    "pathParameters": [
                        {
                            "type": {
                                "type": "Long"
                            },
                            "name": "id"
                        }
                    ],
                    "isPublic": true,
                    "code": {
                        "code": {
                            "JAVA": "\n\t\tString path = \"/api/group/{id}.json?\";\n\t\tpath = path.replace(\"{id}\",id+\"\");\n\n\t\tJSONObject json = server.doGET(path);\n\t\tGroup domain = new Group();\n\t\tdomain.build(json);\n\t\treturn domain;\n\n    "
                        }
                    },
                    "allParameters": [
                        {
                            "type": {
                                "type": "Server"
                            },
                            "name": "server"
                        },
                        {
                            "type": {
                                "type": "Long"
                            },
                            "name": "id"
                        }
                    ],
                    "path": "/api/group/{id}.json",
                    "name": "get"
                },
                {
                    "isStatic": false,
                    "isAbstract": false,
                    "type": {
                        "type": "Void"
                    },
                    "queryParameters": [
                        
                    ],
                    "verb": "POST",
                    "methodParameters": [
                        {
                            "type": {
                                "type": "Server"
                            },
                            "name": "server"
                        }
                    ],
                    "pathParameters": [
                        
                    ],
                    "isPublic": true,
                    "code": {
                        "code": {
                            "JAVA": "\n\t\tString path = \"/api/group.json?\";\n\n\t\tJSONObject json = server.doPOST(path,this.toJSON());\n\n\t\tthis.build((JSONObject)json.get(\"group\"));\n\n    "
                        }
                    },
                    "allParameters": [
                        {
                            "type": {
                                "type": "Server"
                            },
                            "name": "server"
                        }
                    ],
                    "path": "/api/group.json",
                    "name": "add"
                },
                {
                    "isStatic": true,
                    "isAbstract": false,
                    "type": {
                        "type": "List"
                    },
                    "queryParameters": [
                        
                    ],
                    "verb": "GET",
                    "methodParameters": [
                        {
                            "type": {
                                "type": "Server"
                            },
                            "name": "server"
                        }
                    ],
                    "pathParameters": [
                        
                    ],
                    "isPublic": true,
                    "code": {
                        "code": {
                            "JAVA": "\n\t\tString path = \"/api/group.json?\";\n\n\t\tJSONArray json = server.doGETList(path);\n\t\tList<Group> domains = new ArrayList<Group>();\n\t\tfor(int i=0;i<json.size();i++) {\n\t\t\tGroup domain = new Group();\n\t\t\tdomain.build((JSONObject)json.get(i));\n\t\t\t domains.add(domain);\n\t\t }\n\t\treturn domains;\n\n    "
                        }
                    },
                    "allParameters": [
                        {
                            "type": {
                                "type": "Server"
                            },
                            "name": "server"
                        }
                    ],
                    "path": "/api/group.json",
                    "name": "list"
                },
                {
                    "isStatic": true,
                    "isAbstract": false,
                    "type": {
                        "type": "List"
                    },
                    "queryParameters": [
                        {
                            "type": {
                                "type": "Integer"
                            },
                            "name": "max"
                        },
                        {
                            "type": {
                                "type": "Integer"
                            },
                            "name": "offset"
                        }
                    ],
                    "verb": "GET",
                    "methodParameters": [
                        {
                            "type": {
                                "type": "Server"
                            },
                            "name": "server"
                        }
                    ],
                    "pathParameters": [
                        
                    ],
                    "isPublic": true,
                    "code": {
                        "code": {
                            "JAVA": "\n\t\tString path = \"/api/group.json?\";\n\t\tpath = path + \"&max=\" + max;\n\t\tpath = path + \"&offset=\" + offset;\n\n\t\tJSONArray json = server.doGETList(path);\n\t\tList<Group> domains = new ArrayList<Group>();\n\t\tfor(int i=0;i<json.size();i++) {\n\t\t\tGroup domain = new Group();\n\t\t\tdomain.build((JSONObject)json.get(i));\n\t\t\t domains.add(domain);\n\t\t }\n\t\treturn domains;\n\n    "
                        }
                    },
                    "allParameters": [
                        {
                            "type": {
                                "type": "Server"
                            },
                            "name": "server"
                        },
                        {
                            "type": {
                                "type": "Integer"
                            },
                            "name": "max"
                        },
                        {
                            "type": {
                                "type": "Integer"
                            },
                            "name": "offset"
                        }
                    ],
                    "path": "/api/group.json",
                    "name": "list"
                },
                {
                    "isStatic": false,
                    "isAbstract": false,
                    "type": {
                        "type": "Void"
                    },
                    "queryParameters": [
                        
                    ],
                    "verb": "DELETE",
                    "methodParameters": [
                        {
                            "type": {
                                "type": "Server"
                            },
                            "name": "server"
                        }
                    ],
                    "pathParameters": [
                        
                    ],
                    "isPublic": true,
                    "code": {
                        "code": {
                            "JAVA": "\n\t\tString path = \"/api/group/{id}.json?\";\n\t\tpath = path.replace(\"{id}\",getId()+\"\");\n\n\t\tserver.doDELETE(path);\n\t\tbuild(new JSONObject());\n\n    "
                        }
                    },
                    "allParameters": [
                        {
                            "type": {
                                "type": "Server"
                            },
                            "name": "server"
                        }
                    ],
                    "path": "/api/group/{id}.json",
                    "name": "delete"
                },
                {
                    "isStatic": false,
                    "isAbstract": false,
                    "type": {
                        "type": "Void"
                    },
                    "queryParameters": [
                        
                    ],
                    "verb": "PUT",
                    "methodParameters": [
                        {
                            "type": {
                                "type": "Server"
                            },
                            "name": "server"
                        }
                    ],
                    "pathParameters": [
                        
                    ],
                    "isPublic": true,
                    "code": {
                        "code": {
                            "JAVA": "\n\t\tString path = \"/api/group/{id}.json?\";\n\t\tpath = path.replace(\"{id}\",getId()+\"\");\n\n\t\tJSONObject json = server.doPUT(path,this.toJSON());\n\n\t\tthis.build((JSONObject)json.get(\"group\"));\n\n    "
                        }
                    },
                    "allParameters": [
                        {
                            "type": {
                                "type": "Server"
                            },
                            "name": "server"
                        }
                    ],
                    "path": "/api/group/{id}.json",
                    "name": "edit"
                }
            ],
            "name": "AbstractGroup"
        },
        {
            "fullPackage": "be.cytomine.client.abst",
            "isAbstract": true,
            "comment": {
                "version": "0.1",
                "description": "An image filter applies image operations (Binary, Eosin,...)",
                "author": "ClientBuilder (Lo\u00EFc Rollus)"
            },
            "fields": [
                {
                    "useInConstructor": false,
                    "type": {
                        "type": "Long"
                    },
                    "useInSetter": false,
                    "comment": {
                        "description": "The domain id"
                    },
                    "useInGetter": true,
                    "name": "id"
                },
                {
                    "useInConstructor": false,
                    "type": {
                        "type": "String"
                    },
                    "useInSetter": false,
                    "comment": {
                        "description": "The filter name"
                    },
                    "useInGetter": true,
                    "name": "name"
                },
                {
                    "useInConstructor": false,
                    "type": {
                        "type": "String"
                    },
                    "useInSetter": false,
                    "comment": {
                        "description": "The URL of the processing server"
                    },
                    "useInGetter": true,
                    "name": "processingServer"
                },
                {
                    "useInConstructor": false,
                    "type": {
                        "type": "String"
                    },
                    "useInSetter": false,
                    "comment": {
                        "description": "The URL path of the filter on the processing server"
                    },
                    "useInGetter": true,
                    "name": "baseUrl"
                }
            ],
            "domainName": "ImageFilter",
            "methods": [
                {
                    "isStatic": false,
                    "isAbstract": false,
                    "type": {
                        "type": "Void"
                    },
                    "queryParameters": [
                        
                    ],
                    "verb": null,
                    "methodParameters": [
                        
                    ],
                    "pathParameters": [
                        
                    ],
                    "isPublic": true,
                    "code": {
                        "code": {
                            "JAVA": "\n\n    "
                        }
                    },
                    "allParameters": [
                        
                    ],
                    "path": null,
                    "name": "build"
                },
                {
                    "isStatic": false,
                    "isAbstract": false,
                    "type": {
                        "type": "Void"
                    },
                    "queryParameters": [
                        
                    ],
                    "verb": null,
                    "methodParameters": [
                        {
                            "type": {
                                "type": "JSONObject"
                            },
                            "name": "json"
                        }
                    ],
                    "pathParameters": [
                        
                    ],
                    "isPublic": true,
                    "code": {
                        "code": {
                            "JAVA": "\n\t\tthis.id =JSONUtils.extractJSONLong(json.get(\"id\"));\n\t\tthis.name =JSONUtils.extractJSONString(json.get(\"name\"));\n\t\tthis.processingServer =JSONUtils.extractJSONString(json.get(\"processingServer\"));\n\t\tthis.baseUrl =JSONUtils.extractJSONString(json.get(\"baseUrl\"));\n\n    "
                        }
                    },
                    "allParameters": [
                        {
                            "type": {
                                "type": "JSONObject"
                            },
                            "name": "json"
                        }
                    ],
                    "path": null,
                    "name": "build"
                },
                {
                    "isStatic": false,
                    "isAbstract": false,
                    "type": {
                        "type": "JSONObject"
                    },
                    "queryParameters": [
                        
                    ],
                    "verb": null,
                    "methodParameters": [
                        
                    ],
                    "pathParameters": [
                        
                    ],
                    "isPublic": true,
                    "code": {
                        "code": {
                            "JAVA": "\n\t\tJSONObject json=new JSONObject();\n\t\tjson.put(\"id\",JSONUtils.formatJSON(this.id));\n\t\tjson.put(\"name\",JSONUtils.formatJSON(this.name));\n\t\tjson.put(\"processingServer\",JSONUtils.formatJSON(this.processingServer));\n\t\tjson.put(\"baseUrl\",JSONUtils.formatJSON(this.baseUrl));\n\n\t\treturn json;\n    "
                        }
                    },
                    "allParameters": [
                        
                    ],
                    "path": null,
                    "name": "toJSON"
                },
                {
                    "isStatic": true,
                    "isAbstract": false,
                    "type": {
                        "type": "ImageFilter"
                    },
                    "queryParameters": [
                        
                    ],
                    "verb": "GET",
                    "methodParameters": [
                        {
                            "type": {
                                "type": "Server"
                            },
                            "name": "server"
                        }
                    ],
                    "pathParameters": [
                        {
                            "type": {
                                "type": "Long"
                            },
                            "name": "id"
                        }
                    ],
                    "isPublic": true,
                    "code": {
                        "code": {
                            "JAVA": "\n\t\tString path = \"/api/project/imagefilter/{id}.json?\";\n\t\tpath = path.replace(\"{id}\",id+\"\");\n\n\t\tJSONObject json = server.doGET(path);\n\t\tImageFilter domain = new ImageFilter();\n\t\tdomain.build(json);\n\t\treturn domain;\n\n    "
                        }
                    },
                    "allParameters": [
                        {
                            "type": {
                                "type": "Server"
                            },
                            "name": "server"
                        },
                        {
                            "type": {
                                "type": "Long"
                            },
                            "name": "id"
                        }
                    ],
                    "path": "/api/project/imagefilter/{id}.json",
                    "name": "get"
                },
                {
                    "isStatic": true,
                    "isAbstract": false,
                    "type": {
                        "type": "ImageFilter"
                    },
                    "queryParameters": [
                        {
                            "type": {
                                "type": "Integer"
                            },
                            "name": "max"
                        },
                        {
                            "type": {
                                "type": "Integer"
                            },
                            "name": "offset"
                        }
                    ],
                    "verb": "GET",
                    "methodParameters": [
                        {
                            "type": {
                                "type": "Server"
                            },
                            "name": "server"
                        }
                    ],
                    "pathParameters": [
                        
                    ],
                    "isPublic": true,
                    "code": {
                        "code": {
                            "JAVA": "\n\t\tthrow new Exception(\"Not yet implemented\");\n    "
                        }
                    },
                    "allParameters": [
                        {
                            "type": {
                                "type": "Server"
                            },
                            "name": "server"
                        },
                        {
                            "type": {
                                "type": "Integer"
                            },
                            "name": "max"
                        },
                        {
                            "type": {
                                "type": "Integer"
                            },
                            "name": "offset"
                        }
                    ],
                    "path": "/api/project/imagefilter.json",
                    "name": "list"
                }
            ],
            "name": "AbstractImageFilter"
        },
        {
            "fullPackage": "be.cytomine.client.abst",
            "isAbstract": true,
            "comment": {
                "version": "0.1",
                "description": "An image filter can be link to many projects",
                "author": "ClientBuilder (Lo\u00EFc Rollus)"
            },
            "fields": [
                {
                    "useInConstructor": false,
                    "type": {
                        "type": "String"
                    },
                    "useInSetter": false,
                    "comment": {
                        "description": "The full class name of the domain"
                    },
                    "useInGetter": true,
                    "name": "clazz"
                },
                {
                    "useInConstructor": false,
                    "type": {
                        "type": "Long"
                    },
                    "useInSetter": false,
                    "comment": {
                        "description": "The domain id"
                    },
                    "useInGetter": true,
                    "name": "id"
                },
                {
                    "useInConstructor": false,
                    "type": {
                        "type": "Date"
                    },
                    "useInSetter": false,
                    "comment": {
                        "description": "The date of the domain creation"
                    },
                    "useInGetter": true,
                    "name": "created"
                },
                {
                    "useInConstructor": false,
                    "type": {
                        "type": "Date"
                    },
                    "useInSetter": false,
                    "comment": {
                        "description": "The date of the domain modification"
                    },
                    "useInGetter": true,
                    "name": "updated"
                },
                {
                    "useInConstructor": false,
                    "type": {
                        "type": "Date"
                    },
                    "useInSetter": false,
                    "comment": {
                        "description": "When domain was removed from Cytomine"
                    },
                    "useInGetter": true,
                    "name": "deleted"
                },
                {
                    "useInConstructor": true,
                    "type": {
                        "type": "Long"
                    },
                    "useInSetter": true,
                    "comment": {
                        "description": "The filter"
                    },
                    "useInGetter": true,
                    "name": "imageFilter"
                },
                {
                    "useInConstructor": true,
                    "type": {
                        "type": "Long"
                    },
                    "useInSetter": true,
                    "comment": {
                        "description": "The project"
                    },
                    "useInGetter": true,
                    "name": "project"
                },
                {
                    "useInConstructor": false,
                    "type": {
                        "type": "String"
                    },
                    "useInSetter": false,
                    "comment": {
                        "description": "The URL of the processing server"
                    },
                    "useInGetter": true,
                    "name": "processingServer"
                },
                {
                    "useInConstructor": false,
                    "type": {
                        "type": "String"
                    },
                    "useInSetter": false,
                    "comment": {
                        "description": "The URL path of the filter on the processing server"
                    },
                    "useInGetter": true,
                    "name": "baseUrl"
                },
                {
                    "useInConstructor": false,
                    "type": {
                        "type": "String"
                    },
                    "useInSetter": false,
                    "comment": {
                        "description": "The filter name"
                    },
                    "useInGetter": true,
                    "name": "name"
                }
            ],
            "domainName": "ImageFilterProject",
            "methods": [
                {
                    "isStatic": false,
                    "isAbstract": false,
                    "type": {
                        "type": "Void"
                    },
                    "queryParameters": [
                        
                    ],
                    "verb": null,
                    "methodParameters": [
                        {
                            "type": {
                                "type": "Long"
                            },
                            "name": "imageFilter"
                        },
                        {
                            "type": {
                                "type": "Long"
                            },
                            "name": "project"
                        }
                    ],
                    "pathParameters": [
                        
                    ],
                    "isPublic": true,
                    "code": {
                        "code": {
                            "JAVA": "\n\t\tthis.imageFilter=imageFilter;\n\t\tthis.project=project;\n\n    "
                        }
                    },
                    "allParameters": [
                        {
                            "type": {
                                "type": "Long"
                            },
                            "name": "imageFilter"
                        },
                        {
                            "type": {
                                "type": "Long"
                            },
                            "name": "project"
                        }
                    ],
                    "path": null,
                    "name": "build"
                },
                {
                    "isStatic": false,
                    "isAbstract": false,
                    "type": {
                        "type": "Void"
                    },
                    "queryParameters": [
                        
                    ],
                    "verb": null,
                    "methodParameters": [
                        {
                            "type": {
                                "type": "JSONObject"
                            },
                            "name": "json"
                        }
                    ],
                    "pathParameters": [
                        
                    ],
                    "isPublic": true,
                    "code": {
                        "code": {
                            "JAVA": "\n\t\tthis.clazz =JSONUtils.extractJSONString(json.get(\"class\"));\n\t\tthis.id =JSONUtils.extractJSONLong(json.get(\"id\"));\n\t\tthis.created =JSONUtils.extractJSONDate(json.get(\"created\"));\n\t\tthis.updated =JSONUtils.extractJSONDate(json.get(\"updated\"));\n\t\tthis.deleted =JSONUtils.extractJSONDate(json.get(\"deleted\"));\n\t\tthis.imageFilter =JSONUtils.extractJSONLong(json.get(\"imageFilter\"));\n\t\tthis.project =JSONUtils.extractJSONLong(json.get(\"project\"));\n\t\tthis.processingServer =JSONUtils.extractJSONString(json.get(\"processingServer\"));\n\t\tthis.baseUrl =JSONUtils.extractJSONString(json.get(\"baseUrl\"));\n\t\tthis.name =JSONUtils.extractJSONString(json.get(\"name\"));\n\n    "
                        }
                    },
                    "allParameters": [
                        {
                            "type": {
                                "type": "JSONObject"
                            },
                            "name": "json"
                        }
                    ],
                    "path": null,
                    "name": "build"
                },
                {
                    "isStatic": false,
                    "isAbstract": false,
                    "type": {
                        "type": "JSONObject"
                    },
                    "queryParameters": [
                        
                    ],
                    "verb": null,
                    "methodParameters": [
                        
                    ],
                    "pathParameters": [
                        
                    ],
                    "isPublic": true,
                    "code": {
                        "code": {
                            "JAVA": "\n\t\tJSONObject json=new JSONObject();\n\t\tjson.put(\"class\",JSONUtils.formatJSON(this.clazz));\n\t\tjson.put(\"id\",JSONUtils.formatJSON(this.id));\n\t\tjson.put(\"created\",JSONUtils.formatJSON(this.created));\n\t\tjson.put(\"updated\",JSONUtils.formatJSON(this.updated));\n\t\tjson.put(\"deleted\",JSONUtils.formatJSON(this.deleted));\n\t\tjson.put(\"imageFilter\",JSONUtils.formatJSON(this.imageFilter));\n\t\tjson.put(\"project\",JSONUtils.formatJSON(this.project));\n\t\tjson.put(\"processingServer\",JSONUtils.formatJSON(this.processingServer));\n\t\tjson.put(\"baseUrl\",JSONUtils.formatJSON(this.baseUrl));\n\t\tjson.put(\"name\",JSONUtils.formatJSON(this.name));\n\n\t\treturn json;\n    "
                        }
                    },
                    "allParameters": [
                        
                    ],
                    "path": null,
                    "name": "toJSON"
                },
                {
                    "isStatic": true,
                    "isAbstract": false,
                    "type": {
                        "type": "ImageFilterProject"
                    },
                    "queryParameters": [
                        {
                            "type": {
                                "type": "Integer"
                            },
                            "name": "max"
                        },
                        {
                            "type": {
                                "type": "Integer"
                            },
                            "name": "offset"
                        }
                    ],
                    "verb": "GET",
                    "methodParameters": [
                        {
                            "type": {
                                "type": "Server"
                            },
                            "name": "server"
                        }
                    ],
                    "pathParameters": [
                        {
                            "type": {
                                "type": "Long"
                            },
                            "name": "project"
                        }
                    ],
                    "isPublic": true,
                    "code": {
                        "code": {
                            "JAVA": "\n\t\tthrow new Exception(\"Not yet implemented\");\n    "
                        }
                    },
                    "allParameters": [
                        {
                            "type": {
                                "type": "Server"
                            },
                            "name": "server"
                        },
                        {
                            "type": {
                                "type": "Long"
                            },
                            "name": "project"
                        },
                        {
                            "type": {
                                "type": "Integer"
                            },
                            "name": "max"
                        },
                        {
                            "type": {
                                "type": "Integer"
                            },
                            "name": "offset"
                        }
                    ],
                    "path": "/api/project/{project}/imagefilterproject.json",
                    "name": "listByProject"
                },
                {
                    "isStatic": false,
                    "isAbstract": false,
                    "type": {
                        "type": "Void"
                    },
                    "queryParameters": [
                        
                    ],
                    "verb": "POST",
                    "methodParameters": [
                        {
                            "type": {
                                "type": "Server"
                            },
                            "name": "server"
                        }
                    ],
                    "pathParameters": [
                        
                    ],
                    "isPublic": true,
                    "code": {
                        "code": {
                            "JAVA": "\n\t\tString path = \"/api/imagefilterproject.json?\";\n\n\t\tJSONObject json = server.doPOST(path,this.toJSON());\n\n\t\tthis.build((JSONObject)json.get(\"imagefilterproject\"));\n\n    "
                        }
                    },
                    "allParameters": [
                        {
                            "type": {
                                "type": "Server"
                            },
                            "name": "server"
                        }
                    ],
                    "path": "/api/imagefilterproject.json",
                    "name": "add"
                },
                {
                    "isStatic": true,
                    "isAbstract": false,
                    "type": {
                        "type": "ImageFilterProject"
                    },
                    "queryParameters": [
                        {
                            "type": {
                                "type": "Integer"
                            },
                            "name": "max"
                        },
                        {
                            "type": {
                                "type": "Integer"
                            },
                            "name": "offset"
                        }
                    ],
                    "verb": "GET",
                    "methodParameters": [
                        {
                            "type": {
                                "type": "Server"
                            },
                            "name": "server"
                        }
                    ],
                    "pathParameters": [
                        
                    ],
                    "isPublic": true,
                    "code": {
                        "code": {
                            "JAVA": "\n\t\tthrow new Exception(\"Not yet implemented\");\n    "
                        }
                    },
                    "allParameters": [
                        {
                            "type": {
                                "type": "Server"
                            },
                            "name": "server"
                        },
                        {
                            "type": {
                                "type": "Integer"
                            },
                            "name": "max"
                        },
                        {
                            "type": {
                                "type": "Integer"
                            },
                            "name": "offset"
                        }
                    ],
                    "path": "/api/imagefilterproject.json",
                    "name": "list"
                },
                {
                    "isStatic": false,
                    "isAbstract": false,
                    "type": {
                        "type": "Void"
                    },
                    "queryParameters": [
                        
                    ],
                    "verb": "DELETE",
                    "methodParameters": [
                        {
                            "type": {
                                "type": "Server"
                            },
                            "name": "server"
                        }
                    ],
                    "pathParameters": [
                        
                    ],
                    "isPublic": true,
                    "code": {
                        "code": {
                            "JAVA": "\n\t\tString path = \"/api/imagefilterproject/{id}.json?\";\n\t\tpath = path.replace(\"{id}\",getId()+\"\");\n\n\t\tserver.doDELETE(path);\n\t\tbuild(new JSONObject());\n\n    "
                        }
                    },
                    "allParameters": [
                        {
                            "type": {
                                "type": "Server"
                            },
                            "name": "server"
                        }
                    ],
                    "path": "/api/imagefilterproject/{id}.json",
                    "name": "delete"
                }
            ],
            "name": "AbstractImageFilterProject"
        },
        {
            "fullPackage": "be.cytomine.client.abst",
            "isAbstract": true,
            "comment": {
                "version": "0.1",
                "description": "A group of image from the same source with different dimension",
                "author": "ClientBuilder (Lo\u00EFc Rollus)"
            },
            "fields": [
                {
                    "useInConstructor": false,
                    "type": {
                        "type": "String"
                    },
                    "useInSetter": false,
                    "comment": {
                        "description": "The full class name of the domain"
                    },
                    "useInGetter": true,
                    "name": "clazz"
                },
                {
                    "useInConstructor": false,
                    "type": {
                        "type": "Long"
                    },
                    "useInSetter": false,
                    "comment": {
                        "description": "The domain id"
                    },
                    "useInGetter": true,
                    "name": "id"
                },
                {
                    "useInConstructor": false,
                    "type": {
                        "type": "Date"
                    },
                    "useInSetter": false,
                    "comment": {
                        "description": "The date of the domain creation"
                    },
                    "useInGetter": true,
                    "name": "created"
                },
                {
                    "useInConstructor": false,
                    "type": {
                        "type": "Date"
                    },
                    "useInSetter": false,
                    "comment": {
                        "description": "The date of the domain modification"
                    },
                    "useInGetter": true,
                    "name": "updated"
                },
                {
                    "useInConstructor": false,
                    "type": {
                        "type": "Date"
                    },
                    "useInSetter": false,
                    "comment": {
                        "description": "When domain was removed from Cytomine"
                    },
                    "useInGetter": true,
                    "name": "deleted"
                },
                {
                    "useInConstructor": true,
                    "type": {
                        "type": "String"
                    },
                    "useInSetter": true,
                    "comment": {
                        "description": "The name of the project"
                    },
                    "useInGetter": true,
                    "name": "name"
                },
                {
                    "useInConstructor": true,
                    "type": {
                        "type": "Long"
                    },
                    "useInSetter": true,
                    "comment": {
                        "description": "The image group project"
                    },
                    "useInGetter": true,
                    "name": "project"
                }
            ],
            "domainName": "ImageGroup",
            "methods": [
                {
                    "isStatic": false,
                    "isAbstract": false,
                    "type": {
                        "type": "Void"
                    },
                    "queryParameters": [
                        
                    ],
                    "verb": null,
                    "methodParameters": [
                        {
                            "type": {
                                "type": "String"
                            },
                            "name": "name"
                        },
                        {
                            "type": {
                                "type": "Long"
                            },
                            "name": "project"
                        }
                    ],
                    "pathParameters": [
                        
                    ],
                    "isPublic": true,
                    "code": {
                        "code": {
                            "JAVA": "\n\t\tthis.name=name;\n\t\tthis.project=project;\n\n    "
                        }
                    },
                    "allParameters": [
                        {
                            "type": {
                                "type": "String"
                            },
                            "name": "name"
                        },
                        {
                            "type": {
                                "type": "Long"
                            },
                            "name": "project"
                        }
                    ],
                    "path": null,
                    "name": "build"
                },
                {
                    "isStatic": false,
                    "isAbstract": false,
                    "type": {
                        "type": "Void"
                    },
                    "queryParameters": [
                        
                    ],
                    "verb": null,
                    "methodParameters": [
                        {
                            "type": {
                                "type": "JSONObject"
                            },
                            "name": "json"
                        }
                    ],
                    "pathParameters": [
                        
                    ],
                    "isPublic": true,
                    "code": {
                        "code": {
                            "JAVA": "\n\t\tthis.clazz =JSONUtils.extractJSONString(json.get(\"class\"));\n\t\tthis.id =JSONUtils.extractJSONLong(json.get(\"id\"));\n\t\tthis.created =JSONUtils.extractJSONDate(json.get(\"created\"));\n\t\tthis.updated =JSONUtils.extractJSONDate(json.get(\"updated\"));\n\t\tthis.deleted =JSONUtils.extractJSONDate(json.get(\"deleted\"));\n\t\tthis.name =JSONUtils.extractJSONString(json.get(\"name\"));\n\t\tthis.project =JSONUtils.extractJSONLong(json.get(\"project\"));\n\n    "
                        }
                    },
                    "allParameters": [
                        {
                            "type": {
                                "type": "JSONObject"
                            },
                            "name": "json"
                        }
                    ],
                    "path": null,
                    "name": "build"
                },
                {
                    "isStatic": false,
                    "isAbstract": false,
                    "type": {
                        "type": "JSONObject"
                    },
                    "queryParameters": [
                        
                    ],
                    "verb": null,
                    "methodParameters": [
                        
                    ],
                    "pathParameters": [
                        
                    ],
                    "isPublic": true,
                    "code": {
                        "code": {
                            "JAVA": "\n\t\tJSONObject json=new JSONObject();\n\t\tjson.put(\"class\",JSONUtils.formatJSON(this.clazz));\n\t\tjson.put(\"id\",JSONUtils.formatJSON(this.id));\n\t\tjson.put(\"created\",JSONUtils.formatJSON(this.created));\n\t\tjson.put(\"updated\",JSONUtils.formatJSON(this.updated));\n\t\tjson.put(\"deleted\",JSONUtils.formatJSON(this.deleted));\n\t\tjson.put(\"name\",JSONUtils.formatJSON(this.name));\n\t\tjson.put(\"project\",JSONUtils.formatJSON(this.project));\n\n\t\treturn json;\n    "
                        }
                    },
                    "allParameters": [
                        
                    ],
                    "path": null,
                    "name": "toJSON"
                },
                {
                    "isStatic": true,
                    "isAbstract": false,
                    "type": {
                        "type": "ImageGroup"
                    },
                    "queryParameters": [
                        
                    ],
                    "verb": "GET",
                    "methodParameters": [
                        {
                            "type": {
                                "type": "Server"
                            },
                            "name": "server"
                        }
                    ],
                    "pathParameters": [
                        {
                            "type": {
                                "type": "Long"
                            },
                            "name": "id"
                        }
                    ],
                    "isPublic": true,
                    "code": {
                        "code": {
                            "JAVA": "\n\t\tString path = \"/api/imagegroup/{id}.json?\";\n\t\tpath = path.replace(\"{id}\",id+\"\");\n\n\t\tJSONObject json = server.doGET(path);\n\t\tImageGroup domain = new ImageGroup();\n\t\tdomain.build(json);\n\t\treturn domain;\n\n    "
                        }
                    },
                    "allParameters": [
                        {
                            "type": {
                                "type": "Server"
                            },
                            "name": "server"
                        },
                        {
                            "type": {
                                "type": "Long"
                            },
                            "name": "id"
                        }
                    ],
                    "path": "/api/imagegroup/{id}.json",
                    "name": "get"
                },
                {
                    "isStatic": true,
                    "isAbstract": false,
                    "type": {
                        "type": "ImageGroup"
                    },
                    "queryParameters": [
                        {
                            "type": {
                                "type": "Integer"
                            },
                            "name": "max"
                        },
                        {
                            "type": {
                                "type": "Integer"
                            },
                            "name": "offset"
                        }
                    ],
                    "verb": "GET",
                    "methodParameters": [
                        {
                            "type": {
                                "type": "Server"
                            },
                            "name": "server"
                        }
                    ],
                    "pathParameters": [
                        {
                            "type": {
                                "type": "Long"
                            },
                            "name": "id"
                        }
                    ],
                    "isPublic": true,
                    "code": {
                        "code": {
                            "JAVA": "\n\t\tthrow new Exception(\"Not yet implemented\");\n    "
                        }
                    },
                    "allParameters": [
                        {
                            "type": {
                                "type": "Server"
                            },
                            "name": "server"
                        },
                        {
                            "type": {
                                "type": "Long"
                            },
                            "name": "id"
                        },
                        {
                            "type": {
                                "type": "Integer"
                            },
                            "name": "max"
                        },
                        {
                            "type": {
                                "type": "Integer"
                            },
                            "name": "offset"
                        }
                    ],
                    "path": "/api/project/{id}/imagegroup.json",
                    "name": "listByProject"
                },
                {
                    "isStatic": false,
                    "isAbstract": false,
                    "type": {
                        "type": "Void"
                    },
                    "queryParameters": [
                        
                    ],
                    "verb": "POST",
                    "methodParameters": [
                        {
                            "type": {
                                "type": "Server"
                            },
                            "name": "server"
                        }
                    ],
                    "pathParameters": [
                        
                    ],
                    "isPublic": true,
                    "code": {
                        "code": {
                            "JAVA": "\n\t\tString path = \"/api/imagegroup.json?\";\n\n\t\tJSONObject json = server.doPOST(path,this.toJSON());\n\n\t\tthis.build((JSONObject)json.get(\"imagegroup\"));\n\n    "
                        }
                    },
                    "allParameters": [
                        {
                            "type": {
                                "type": "Server"
                            },
                            "name": "server"
                        }
                    ],
                    "path": "/api/imagegroup.json",
                    "name": "add"
                },
                {
                    "isStatic": false,
                    "isAbstract": false,
                    "type": {
                        "type": "Void"
                    },
                    "queryParameters": [
                        
                    ],
                    "verb": "DELETE",
                    "methodParameters": [
                        {
                            "type": {
                                "type": "Server"
                            },
                            "name": "server"
                        }
                    ],
                    "pathParameters": [
                        
                    ],
                    "isPublic": true,
                    "code": {
                        "code": {
                            "JAVA": "\n\t\tString path = \"/api/imagegroup/{id}.json?\";\n\t\tpath = path.replace(\"{id}\",getId()+\"\");\n\n\t\tserver.doDELETE(path);\n\t\tbuild(new JSONObject());\n\n    "
                        }
                    },
                    "allParameters": [
                        {
                            "type": {
                                "type": "Server"
                            },
                            "name": "server"
                        }
                    ],
                    "path": "/api/imagegroup/{id}.json",
                    "name": "delete"
                },
                {
                    "isStatic": false,
                    "isAbstract": false,
                    "type": {
                        "type": "Void"
                    },
                    "queryParameters": [
                        
                    ],
                    "verb": "PUT",
                    "methodParameters": [
                        {
                            "type": {
                                "type": "Server"
                            },
                            "name": "server"
                        }
                    ],
                    "pathParameters": [
                        
                    ],
                    "isPublic": true,
                    "code": {
                        "code": {
                            "JAVA": "\n\t\tString path = \"/api/imagegroup/{id}.json?\";\n\t\tpath = path.replace(\"{id}\",getId()+\"\");\n\n\t\tJSONObject json = server.doPUT(path,this.toJSON());\n\n\t\tthis.build((JSONObject)json.get(\"imagegroup\"));\n\n    "
                        }
                    },
                    "allParameters": [
                        {
                            "type": {
                                "type": "Server"
                            },
                            "name": "server"
                        }
                    ],
                    "path": "/api/imagegroup/{id}.json",
                    "name": "edit"
                }
            ],
            "name": "AbstractImageGroup"
        },
        {
            "fullPackage": "be.cytomine.client.abst",
            "isAbstract": true,
            "comment": {
                "version": "0.1",
                "description": "A link between 'abstract image' and 'project'. An 'abstract image' may be in multiple projects.",
                "author": "ClientBuilder (Lo\u00EFc Rollus)"
            },
            "fields": [
                {
                    "useInConstructor": false,
                    "type": {
                        "type": "String"
                    },
                    "useInSetter": false,
                    "comment": {
                        "description": "The full class name of the domain"
                    },
                    "useInGetter": true,
                    "name": "clazz"
                },
                {
                    "useInConstructor": false,
                    "type": {
                        "type": "Long"
                    },
                    "useInSetter": false,
                    "comment": {
                        "description": "The domain id"
                    },
                    "useInGetter": true,
                    "name": "id"
                },
                {
                    "useInConstructor": false,
                    "type": {
                        "type": "Date"
                    },
                    "useInSetter": false,
                    "comment": {
                        "description": "The date of the domain creation"
                    },
                    "useInGetter": true,
                    "name": "created"
                },
                {
                    "useInConstructor": false,
                    "type": {
                        "type": "Date"
                    },
                    "useInSetter": false,
                    "comment": {
                        "description": "The date of the domain modification"
                    },
                    "useInGetter": true,
                    "name": "updated"
                },
                {
                    "useInConstructor": false,
                    "type": {
                        "type": "Date"
                    },
                    "useInSetter": false,
                    "comment": {
                        "description": "When domain was removed from Cytomine"
                    },
                    "useInGetter": true,
                    "name": "deleted"
                },
                {
                    "useInConstructor": true,
                    "type": {
                        "type": "Long"
                    },
                    "useInSetter": true,
                    "comment": {
                        "description": "The image linked to the project"
                    },
                    "useInGetter": true,
                    "name": "baseImage"
                },
                {
                    "useInConstructor": true,
                    "type": {
                        "type": "Long"
                    },
                    "useInSetter": true,
                    "comment": {
                        "description": "The project that keeps the image"
                    },
                    "useInGetter": true,
                    "name": "project"
                },
                {
                    "useInConstructor": true,
                    "type": {
                        "type": "Long"
                    },
                    "useInSetter": true,
                    "comment": {
                        "description": "The user that add the image to the project"
                    },
                    "useInGetter": true,
                    "name": "user"
                },
                {
                    "useInConstructor": false,
                    "type": {
                        "type": "String"
                    },
                    "useInSetter": false,
                    "comment": {
                        "description": "Abstract image filename (see Abstract Image)"
                    },
                    "useInGetter": true,
                    "name": "filename"
                },
                {
                    "useInConstructor": false,
                    "type": {
                        "type": "Object"
                    },
                    "useInSetter": true,
                    "comment": {
                        "description": "Undefined"
                    },
                    "useInGetter": true,
                    "name": "extension"
                },
                {
                    "useInConstructor": false,
                    "type": {
                        "type": "String"
                    },
                    "useInSetter": false,
                    "comment": {
                        "description": "Abstract image original filename (see Abstract Image)"
                    },
                    "useInGetter": true,
                    "name": "originalFilename"
                },
                {
                    "useInConstructor": false,
                    "type": {
                        "type": "Long"
                    },
                    "useInSetter": false,
                    "comment": {
                        "description": "Abstract image sample (see Abstract Image)"
                    },
                    "useInGetter": true,
                    "name": "sample"
                },
                {
                    "useInConstructor": false,
                    "type": {
                        "type": "String"
                    },
                    "useInSetter": false,
                    "comment": {
                        "description": "Abstract image path (see Abstract Image)"
                    },
                    "useInGetter": true,
                    "name": "path"
                },
                {
                    "useInConstructor": false,
                    "type": {
                        "type": "String"
                    },
                    "useInSetter": false,
                    "comment": {
                        "description": "Abstract image mime (see Abstract Image)"
                    },
                    "useInGetter": true,
                    "name": "mime"
                },
                {
                    "useInConstructor": false,
                    "type": {
                        "type": "Integer"
                    },
                    "useInSetter": false,
                    "comment": {
                        "description": "Abstract image width (see Abstract Image)"
                    },
                    "useInGetter": true,
                    "name": "width"
                },
                {
                    "useInConstructor": false,
                    "type": {
                        "type": "Integer"
                    },
                    "useInSetter": false,
                    "comment": {
                        "description": "Abstract image height (see Abstract Image)"
                    },
                    "useInGetter": true,
                    "name": "height"
                },
                {
                    "useInConstructor": false,
                    "type": {
                        "type": "Double"
                    },
                    "useInSetter": false,
                    "comment": {
                        "description": "Abstract image resolution (see Abstract Image)"
                    },
                    "useInGetter": true,
                    "name": "resolution"
                },
                {
                    "useInConstructor": false,
                    "type": {
                        "type": "Integer"
                    },
                    "useInSetter": false,
                    "comment": {
                        "description": "Abstract image magnification (see Abstract Image)"
                    },
                    "useInGetter": true,
                    "name": "magnification"
                },
                {
                    "useInConstructor": false,
                    "type": {
                        "type": "Long"
                    },
                    "useInSetter": false,
                    "comment": {
                        "description": "?"
                    },
                    "useInGetter": true,
                    "name": "depth"
                },
                {
                    "useInConstructor": false,
                    "type": {
                        "type": "String"
                    },
                    "useInSetter": false,
                    "comment": {
                        "description": "Abstract image preview (see Abstract Image)"
                    },
                    "useInGetter": true,
                    "name": "preview"
                },
                {
                    "useInConstructor": false,
                    "type": {
                        "type": "String"
                    },
                    "useInSetter": false,
                    "comment": {
                        "description": "Abstract image thumb (see Abstract Image)"
                    },
                    "useInGetter": true,
                    "name": "thumb"
                },
                {
                    "useInConstructor": false,
                    "type": {
                        "type": "Object"
                    },
                    "useInSetter": true,
                    "comment": {
                        "description": "Undefined"
                    },
                    "useInGetter": true,
                    "name": "macro"
                },
                {
                    "useInConstructor": false,
                    "type": {
                        "type": "Long"
                    },
                    "useInSetter": false,
                    "comment": {
                        "description": "The number of user annotation in the image"
                    },
                    "useInGetter": true,
                    "name": "numberOfAnnotations"
                },
                {
                    "useInConstructor": false,
                    "type": {
                        "type": "Long"
                    },
                    "useInSetter": false,
                    "comment": {
                        "description": "The number of job annotation in the image"
                    },
                    "useInGetter": true,
                    "name": "numberOfJobAnnotations"
                },
                {
                    "useInConstructor": false,
                    "type": {
                        "type": "Long"
                    },
                    "useInSetter": false,
                    "comment": {
                        "description": "The number of reviewed annotation in the image"
                    },
                    "useInGetter": true,
                    "name": "numberOfReviewedAnnotations"
                },
                {
                    "useInConstructor": false,
                    "type": {
                        "type": "Date"
                    },
                    "useInSetter": false,
                    "comment": {
                        "description": "The start review date"
                    },
                    "useInGetter": true,
                    "name": "reviewStart"
                },
                {
                    "useInConstructor": false,
                    "type": {
                        "type": "Date"
                    },
                    "useInSetter": false,
                    "comment": {
                        "description": "The stop review date"
                    },
                    "useInGetter": true,
                    "name": "reviewStop"
                },
                {
                    "useInConstructor": false,
                    "type": {
                        "type": "Long"
                    },
                    "useInSetter": false,
                    "comment": {
                        "description": "The user who reviewed (or still reviewing) this image"
                    },
                    "useInGetter": true,
                    "name": "reviewUser"
                },
                {
                    "useInConstructor": false,
                    "type": {
                        "type": "Boolean"
                    },
                    "useInSetter": false,
                    "comment": {
                        "description": "Image has been reviewed"
                    },
                    "useInGetter": true,
                    "name": "reviewed"
                },
                {
                    "useInConstructor": false,
                    "type": {
                        "type": "Boolean"
                    },
                    "useInSetter": false,
                    "comment": {
                        "description": "Image currently reviewed"
                    },
                    "useInGetter": true,
                    "name": "inReview"
                }
            ],
            "domainName": "ImageInstance",
            "methods": [
                {
                    "isStatic": false,
                    "isAbstract": false,
                    "type": {
                        "type": "Void"
                    },
                    "queryParameters": [
                        
                    ],
                    "verb": null,
                    "methodParameters": [
                        {
                            "type": {
                                "type": "Long"
                            },
                            "name": "baseImage"
                        },
                        {
                            "type": {
                                "type": "Long"
                            },
                            "name": "project"
                        },
                        {
                            "type": {
                                "type": "Long"
                            },
                            "name": "user"
                        }
                    ],
                    "pathParameters": [
                        
                    ],
                    "isPublic": true,
                    "code": {
                        "code": {
                            "JAVA": "\n\t\tthis.baseImage=baseImage;\n\t\tthis.project=project;\n\t\tthis.user=user;\n\n    "
                        }
                    },
                    "allParameters": [
                        {
                            "type": {
                                "type": "Long"
                            },
                            "name": "baseImage"
                        },
                        {
                            "type": {
                                "type": "Long"
                            },
                            "name": "project"
                        },
                        {
                            "type": {
                                "type": "Long"
                            },
                            "name": "user"
                        }
                    ],
                    "path": null,
                    "name": "build"
                },
                {
                    "isStatic": false,
                    "isAbstract": false,
                    "type": {
                        "type": "Void"
                    },
                    "queryParameters": [
                        
                    ],
                    "verb": null,
                    "methodParameters": [
                        {
                            "type": {
                                "type": "JSONObject"
                            },
                            "name": "json"
                        }
                    ],
                    "pathParameters": [
                        
                    ],
                    "isPublic": true,
                    "code": {
                        "code": {
                            "JAVA": "\n\t\tthis.clazz =JSONUtils.extractJSONString(json.get(\"class\"));\n\t\tthis.id =JSONUtils.extractJSONLong(json.get(\"id\"));\n\t\tthis.created =JSONUtils.extractJSONDate(json.get(\"created\"));\n\t\tthis.updated =JSONUtils.extractJSONDate(json.get(\"updated\"));\n\t\tthis.deleted =JSONUtils.extractJSONDate(json.get(\"deleted\"));\n\t\tthis.baseImage =JSONUtils.extractJSONLong(json.get(\"baseImage\"));\n\t\tthis.project =JSONUtils.extractJSONLong(json.get(\"project\"));\n\t\tthis.user =JSONUtils.extractJSONLong(json.get(\"user\"));\n\t\tthis.filename =JSONUtils.extractJSONString(json.get(\"filename\"));\n\t\tthis.extension =JSONUtils.extractJSONObject(json.get(\"extension\"));\n\t\tthis.originalFilename =JSONUtils.extractJSONString(json.get(\"originalFilename\"));\n\t\tthis.sample =JSONUtils.extractJSONLong(json.get(\"sample\"));\n\t\tthis.path =JSONUtils.extractJSONString(json.get(\"path\"));\n\t\tthis.mime =JSONUtils.extractJSONString(json.get(\"mime\"));\n\t\tthis.width =JSONUtils.extractJSONInteger(json.get(\"width\"));\n\t\tthis.height =JSONUtils.extractJSONInteger(json.get(\"height\"));\n\t\tthis.resolution =JSONUtils.extractJSONDouble(json.get(\"resolution\"));\n\t\tthis.magnification =JSONUtils.extractJSONInteger(json.get(\"magnification\"));\n\t\tthis.depth =JSONUtils.extractJSONLong(json.get(\"depth\"));\n\t\tthis.preview =JSONUtils.extractJSONString(json.get(\"preview\"));\n\t\tthis.thumb =JSONUtils.extractJSONString(json.get(\"thumb\"));\n\t\tthis.macro =JSONUtils.extractJSONObject(json.get(\"macro\"));\n\t\tthis.numberOfAnnotations =JSONUtils.extractJSONLong(json.get(\"numberOfAnnotations\"));\n\t\tthis.numberOfJobAnnotations =JSONUtils.extractJSONLong(json.get(\"numberOfJobAnnotations\"));\n\t\tthis.numberOfReviewedAnnotations =JSONUtils.extractJSONLong(json.get(\"numberOfReviewedAnnotations\"));\n\t\tthis.reviewStart =JSONUtils.extractJSONDate(json.get(\"reviewStart\"));\n\t\tthis.reviewStop =JSONUtils.extractJSONDate(json.get(\"reviewStop\"));\n\t\tthis.reviewUser =JSONUtils.extractJSONLong(json.get(\"reviewUser\"));\n\t\tthis.reviewed =JSONUtils.extractJSONBoolean(json.get(\"reviewed\"));\n\t\tthis.inReview =JSONUtils.extractJSONBoolean(json.get(\"inReview\"));\n\n    "
                        }
                    },
                    "allParameters": [
                        {
                            "type": {
                                "type": "JSONObject"
                            },
                            "name": "json"
                        }
                    ],
                    "path": null,
                    "name": "build"
                },
                {
                    "isStatic": false,
                    "isAbstract": false,
                    "type": {
                        "type": "JSONObject"
                    },
                    "queryParameters": [
                        
                    ],
                    "verb": null,
                    "methodParameters": [
                        
                    ],
                    "pathParameters": [
                        
                    ],
                    "isPublic": true,
                    "code": {
                        "code": {
                            "JAVA": "\n\t\tJSONObject json=new JSONObject();\n\t\tjson.put(\"class\",JSONUtils.formatJSON(this.clazz));\n\t\tjson.put(\"id\",JSONUtils.formatJSON(this.id));\n\t\tjson.put(\"created\",JSONUtils.formatJSON(this.created));\n\t\tjson.put(\"updated\",JSONUtils.formatJSON(this.updated));\n\t\tjson.put(\"deleted\",JSONUtils.formatJSON(this.deleted));\n\t\tjson.put(\"baseImage\",JSONUtils.formatJSON(this.baseImage));\n\t\tjson.put(\"project\",JSONUtils.formatJSON(this.project));\n\t\tjson.put(\"user\",JSONUtils.formatJSON(this.user));\n\t\tjson.put(\"filename\",JSONUtils.formatJSON(this.filename));\n\t\tjson.put(\"extension\",JSONUtils.formatJSON(this.extension));\n\t\tjson.put(\"originalFilename\",JSONUtils.formatJSON(this.originalFilename));\n\t\tjson.put(\"sample\",JSONUtils.formatJSON(this.sample));\n\t\tjson.put(\"path\",JSONUtils.formatJSON(this.path));\n\t\tjson.put(\"mime\",JSONUtils.formatJSON(this.mime));\n\t\tjson.put(\"width\",JSONUtils.formatJSON(this.width));\n\t\tjson.put(\"height\",JSONUtils.formatJSON(this.height));\n\t\tjson.put(\"resolution\",JSONUtils.formatJSON(this.resolution));\n\t\tjson.put(\"magnification\",JSONUtils.formatJSON(this.magnification));\n\t\tjson.put(\"depth\",JSONUtils.formatJSON(this.depth));\n\t\tjson.put(\"preview\",JSONUtils.formatJSON(this.preview));\n\t\tjson.put(\"thumb\",JSONUtils.formatJSON(this.thumb));\n\t\tjson.put(\"macro\",JSONUtils.formatJSON(this.macro));\n\t\tjson.put(\"numberOfAnnotations\",JSONUtils.formatJSON(this.numberOfAnnotations));\n\t\tjson.put(\"numberOfJobAnnotations\",JSONUtils.formatJSON(this.numberOfJobAnnotations));\n\t\tjson.put(\"numberOfReviewedAnnotations\",JSONUtils.formatJSON(this.numberOfReviewedAnnotations));\n\t\tjson.put(\"reviewStart\",JSONUtils.formatJSON(this.reviewStart));\n\t\tjson.put(\"reviewStop\",JSONUtils.formatJSON(this.reviewStop));\n\t\tjson.put(\"reviewUser\",JSONUtils.formatJSON(this.reviewUser));\n\t\tjson.put(\"reviewed\",JSONUtils.formatJSON(this.reviewed));\n\t\tjson.put(\"inReview\",JSONUtils.formatJSON(this.inReview));\n\n\t\treturn json;\n    "
                        }
                    },
                    "allParameters": [
                        
                    ],
                    "path": null,
                    "name": "toJSON"
                },
                {
                    "isStatic": true,
                    "isAbstract": false,
                    "type": {
                        "type": "ImageInstance"
                    },
                    "queryParameters": [
                        
                    ],
                    "verb": "GET",
                    "methodParameters": [
                        {
                            "type": {
                                "type": "Server"
                            },
                            "name": "server"
                        }
                    ],
                    "pathParameters": [
                        {
                            "type": {
                                "type": "Long"
                            },
                            "name": "id"
                        }
                    ],
                    "isPublic": true,
                    "code": {
                        "code": {
                            "JAVA": "\n\t\tString path = \"/api/imageinstance/{id}.json?\";\n\t\tpath = path.replace(\"{id}\",id+\"\");\n\n\t\tJSONObject json = server.doGET(path);\n\t\tImageInstance domain = new ImageInstance();\n\t\tdomain.build(json);\n\t\treturn domain;\n\n    "
                        }
                    },
                    "allParameters": [
                        {
                            "type": {
                                "type": "Server"
                            },
                            "name": "server"
                        },
                        {
                            "type": {
                                "type": "Long"
                            },
                            "name": "id"
                        }
                    ],
                    "path": "/api/imageinstance/{id}.json",
                    "name": "get"
                },
                {
                    "isStatic": true,
                    "isAbstract": false,
                    "type": {
                        "type": "ImageInstance"
                    },
                    "queryParameters": [
                        {
                            "type": {
                                "type": "Integer"
                            },
                            "name": "max"
                        },
                        {
                            "type": {
                                "type": "Integer"
                            },
                            "name": "offset"
                        }
                    ],
                    "verb": "GET",
                    "methodParameters": [
                        {
                            "type": {
                                "type": "Server"
                            },
                            "name": "server"
                        }
                    ],
                    "pathParameters": [
                        
                    ],
                    "isPublic": true,
                    "code": {
                        "code": {
                            "JAVA": "\n\t\tthrow new Exception(\"Not yet implemented\");\n    "
                        }
                    },
                    "allParameters": [
                        {
                            "type": {
                                "type": "Server"
                            },
                            "name": "server"
                        },
                        {
                            "type": {
                                "type": "Integer"
                            },
                            "name": "max"
                        },
                        {
                            "type": {
                                "type": "Integer"
                            },
                            "name": "offset"
                        }
                    ],
                    "path": "/api/user/{user}/imageinstance/light.json",
                    "name": "listByUser"
                },
                {
                    "isStatic": true,
                    "isAbstract": false,
                    "type": {
                        "type": "ProjectSharingSameImage"
                    },
                    "queryParameters": [
                        {
                            "type": {
                                "type": "Long"
                            },
                            "name": "project"
                        },
                        {
                            "type": {
                                "type": "Integer"
                            },
                            "name": "max"
                        },
                        {
                            "type": {
                                "type": "Integer"
                            },
                            "name": "offset"
                        }
                    ],
                    "verb": "GET",
                    "methodParameters": [
                        {
                            "type": {
                                "type": "Server"
                            },
                            "name": "server"
                        }
                    ],
                    "pathParameters": [
                        {
                            "type": {
                                "type": "Long"
                            },
                            "name": "id"
                        }
                    ],
                    "isPublic": true,
                    "code": {
                        "code": {
                            "JAVA": "\n\t\tthrow new Exception(\"Not yet implemented\");\n    "
                        }
                    },
                    "allParameters": [
                        {
                            "type": {
                                "type": "Server"
                            },
                            "name": "server"
                        },
                        {
                            "type": {
                                "type": "Long"
                            },
                            "name": "id"
                        },
                        {
                            "type": {
                                "type": "Long"
                            },
                            "name": "project"
                        },
                        {
                            "type": {
                                "type": "Integer"
                            },
                            "name": "max"
                        },
                        {
                            "type": {
                                "type": "Integer"
                            },
                            "name": "offset"
                        }
                    ],
                    "path": "/api/imageinstance/{id}/sameimagedata.json",
                    "name": "retrieveSameImageOtherProject"
                },
                {
                    "isStatic": true,
                    "isAbstract": false,
                    "type": {
                        "type": "CopyAnnotationImage"
                    },
                    "queryParameters": [
                        {
                            "type": {
                                "type": "Long"
                            },
                            "name": "task"
                        },
                        {
                            "type": {
                                "type": "Boolean"
                            },
                            "name": "giveMe"
                        },
                        {
                            "type": {
                                "type": "List (x1_y1,x2_y2,...)"
                            },
                            "name": "layers"
                        },
                        {
                            "type": {
                                "type": "Integer"
                            },
                            "name": "max"
                        },
                        {
                            "type": {
                                "type": "Integer"
                            },
                            "name": "offset"
                        }
                    ],
                    "verb": "POST",
                    "methodParameters": [
                        {
                            "type": {
                                "type": "Server"
                            },
                            "name": "server"
                        }
                    ],
                    "pathParameters": [
                        {
                            "type": {
                                "type": "Long"
                            },
                            "name": "id"
                        }
                    ],
                    "isPublic": true,
                    "code": {
                        "code": {
                            "JAVA": "\n\t\tthrow new Exception(\"Not yet implemented\");\n    "
                        }
                    },
                    "allParameters": [
                        {
                            "type": {
                                "type": "Server"
                            },
                            "name": "server"
                        },
                        {
                            "type": {
                                "type": "Long"
                            },
                            "name": "id"
                        },
                        {
                            "type": {
                                "type": "Long"
                            },
                            "name": "task"
                        },
                        {
                            "type": {
                                "type": "Boolean"
                            },
                            "name": "giveMe"
                        },
                        {
                            "type": {
                                "type": "List (x1_y1,x2_y2,...)"
                            },
                            "name": "layers"
                        },
                        {
                            "type": {
                                "type": "Integer"
                            },
                            "name": "max"
                        },
                        {
                            "type": {
                                "type": "Integer"
                            },
                            "name": "offset"
                        }
                    ],
                    "path": "/api/imageinstance/{id}/copyimagedata.json",
                    "name": "copyAnnotationFromSameAbstractImage"
                },
                {
                    "isStatic": true,
                    "isAbstract": false,
                    "type": {
                        "type": "ImageInstance"
                    },
                    "queryParameters": [
                        {
                            "type": {
                                "type": "Integer"
                            },
                            "name": "max"
                        },
                        {
                            "type": {
                                "type": "Integer"
                            },
                            "name": "offset"
                        }
                    ],
                    "verb": "GET",
                    "methodParameters": [
                        {
                            "type": {
                                "type": "Server"
                            },
                            "name": "server"
                        }
                    ],
                    "pathParameters": [
                        
                    ],
                    "isPublic": true,
                    "code": {
                        "code": {
                            "JAVA": "\n\t\tthrow new Exception(\"Not yet implemented\");\n    "
                        }
                    },
                    "allParameters": [
                        {
                            "type": {
                                "type": "Server"
                            },
                            "name": "server"
                        },
                        {
                            "type": {
                                "type": "Integer"
                            },
                            "name": "max"
                        },
                        {
                            "type": {
                                "type": "Integer"
                            },
                            "name": "offset"
                        }
                    ],
                    "path": "/api/imageinstance/method/lastopened.json",
                    "name": "listLastOpenImage"
                },
                {
                    "isStatic": true,
                    "isAbstract": false,
                    "type": {
                        "type": "Empty"
                    },
                    "queryParameters": [
                        {
                            "type": {
                                "type": "Long"
                            },
                            "name": "based"
                        }
                    ],
                    "verb": "POST",
                    "methodParameters": [
                        {
                            "type": {
                                "type": "Server"
                            },
                            "name": "server"
                        }
                    ],
                    "pathParameters": [
                        {
                            "type": {
                                "type": "Long"
                            },
                            "name": "id"
                        }
                    ],
                    "isPublic": true,
                    "code": {
                        "code": {
                            "JAVA": "\n\t\tthrow new Exception(\"Not yet implemented\");\n    "
                        }
                    },
                    "allParameters": [
                        {
                            "type": {
                                "type": "Server"
                            },
                            "name": "server"
                        },
                        {
                            "type": {
                                "type": "Long"
                            },
                            "name": "id"
                        },
                        {
                            "type": {
                                "type": "Long"
                            },
                            "name": "based"
                        }
                    ],
                    "path": "/api/imageinstance/{id}/copymetadata.json",
                    "name": "copyMetadata"
                },
                {
                    "isStatic": true,
                    "isAbstract": false,
                    "type": {
                        "type": "ImageInstance"
                    },
                    "queryParameters": [
                        {
                            "type": {
                                "type": "Boolean"
                            },
                            "name": "tree"
                        },
                        {
                            "type": {
                                "type": "String"
                            },
                            "name": "sortColumn"
                        },
                        {
                            "type": {
                                "type": "String"
                            },
                            "name": "sortDirection"
                        },
                        {
                            "type": {
                                "type": "String"
                            },
                            "name": "search"
                        },
                        {
                            "type": {
                                "type": "Integer"
                            },
                            "name": "max"
                        },
                        {
                            "type": {
                                "type": "Integer"
                            },
                            "name": "offset"
                        }
                    ],
                    "verb": "GET",
                    "methodParameters": [
                        {
                            "type": {
                                "type": "Server"
                            },
                            "name": "server"
                        }
                    ],
                    "pathParameters": [
                        {
                            "type": {
                                "type": "Long"
                            },
                            "name": "id"
                        }
                    ],
                    "isPublic": true,
                    "code": {
                        "code": {
                            "JAVA": "\n\t\tthrow new Exception(\"Not yet implemented\");\n    "
                        }
                    },
                    "allParameters": [
                        {
                            "type": {
                                "type": "Server"
                            },
                            "name": "server"
                        },
                        {
                            "type": {
                                "type": "Long"
                            },
                            "name": "id"
                        },
                        {
                            "type": {
                                "type": "Boolean"
                            },
                            "name": "tree"
                        },
                        {
                            "type": {
                                "type": "String"
                            },
                            "name": "sortColumn"
                        },
                        {
                            "type": {
                                "type": "String"
                            },
                            "name": "sortDirection"
                        },
                        {
                            "type": {
                                "type": "String"
                            },
                            "name": "search"
                        },
                        {
                            "type": {
                                "type": "Integer"
                            },
                            "name": "max"
                        },
                        {
                            "type": {
                                "type": "Integer"
                            },
                            "name": "offset"
                        }
                    ],
                    "path": "/api/project/{id}/imageinstance.json",
                    "name": "listByProject"
                },
                {
                    "isStatic": false,
                    "isAbstract": false,
                    "type": {
                        "type": "Void"
                    },
                    "queryParameters": [
                        
                    ],
                    "verb": "POST",
                    "methodParameters": [
                        {
                            "type": {
                                "type": "Server"
                            },
                            "name": "server"
                        }
                    ],
                    "pathParameters": [
                        
                    ],
                    "isPublic": true,
                    "code": {
                        "code": {
                            "JAVA": "\n\t\tString path = \"/api/imageinstance.json?\";\n\n\t\tJSONObject json = server.doPOST(path,this.toJSON());\n\n\t\tthis.build((JSONObject)json.get(\"imageinstance\"));\n\n    "
                        }
                    },
                    "allParameters": [
                        {
                            "type": {
                                "type": "Server"
                            },
                            "name": "server"
                        }
                    ],
                    "path": "/api/imageinstance.json",
                    "name": "add"
                },
                {
                    "isStatic": true,
                    "isAbstract": false,
                    "type": {
                        "type": "ImageInstance"
                    },
                    "queryParameters": [
                        {
                            "type": {
                                "type": "Integer"
                            },
                            "name": "max"
                        },
                        {
                            "type": {
                                "type": "Integer"
                            },
                            "name": "offset"
                        }
                    ],
                    "verb": "GET",
                    "methodParameters": [
                        {
                            "type": {
                                "type": "Server"
                            },
                            "name": "server"
                        }
                    ],
                    "pathParameters": [
                        {
                            "type": {
                                "type": "Long"
                            },
                            "name": "id"
                        }
                    ],
                    "isPublic": true,
                    "code": {
                        "code": {
                            "JAVA": "\n\t\tthrow new Exception(\"Not yet implemented\");\n    "
                        }
                    },
                    "allParameters": [
                        {
                            "type": {
                                "type": "Server"
                            },
                            "name": "server"
                        },
                        {
                            "type": {
                                "type": "Long"
                            },
                            "name": "id"
                        },
                        {
                            "type": {
                                "type": "Integer"
                            },
                            "name": "max"
                        },
                        {
                            "type": {
                                "type": "Integer"
                            },
                            "name": "offset"
                        }
                    ],
                    "path": "/api/imageinstance/{id}/next.json",
                    "name": "next"
                },
                {
                    "isStatic": false,
                    "isAbstract": false,
                    "type": {
                        "type": "Void"
                    },
                    "queryParameters": [
                        
                    ],
                    "verb": "DELETE",
                    "methodParameters": [
                        {
                            "type": {
                                "type": "Server"
                            },
                            "name": "server"
                        }
                    ],
                    "pathParameters": [
                        
                    ],
                    "isPublic": true,
                    "code": {
                        "code": {
                            "JAVA": "\n\t\tString path = \"/api/imageinstance/{id}.json?\";\n\t\tpath = path.replace(\"{id}\",getId()+\"\");\n\n\t\tserver.doDELETE(path);\n\t\tbuild(new JSONObject());\n\n    "
                        }
                    },
                    "allParameters": [
                        {
                            "type": {
                                "type": "Server"
                            },
                            "name": "server"
                        }
                    ],
                    "path": "/api/imageinstance/{id}.json",
                    "name": "delete"
                },
                {
                    "isStatic": true,
                    "isAbstract": false,
                    "type": {
                        "type": "ImageInstance"
                    },
                    "queryParameters": [
                        {
                            "type": {
                                "type": "Integer"
                            },
                            "name": "max"
                        },
                        {
                            "type": {
                                "type": "Integer"
                            },
                            "name": "offset"
                        }
                    ],
                    "verb": "GET",
                    "methodParameters": [
                        {
                            "type": {
                                "type": "Server"
                            },
                            "name": "server"
                        }
                    ],
                    "pathParameters": [
                        {
                            "type": {
                                "type": "Long"
                            },
                            "name": "id"
                        }
                    ],
                    "isPublic": true,
                    "code": {
                        "code": {
                            "JAVA": "\n\t\tthrow new Exception(\"Not yet implemented\");\n    "
                        }
                    },
                    "allParameters": [
                        {
                            "type": {
                                "type": "Server"
                            },
                            "name": "server"
                        },
                        {
                            "type": {
                                "type": "Long"
                            },
                            "name": "id"
                        },
                        {
                            "type": {
                                "type": "Integer"
                            },
                            "name": "max"
                        },
                        {
                            "type": {
                                "type": "Integer"
                            },
                            "name": "offset"
                        }
                    ],
                    "path": "/api/imageinstance/{id}/previous.json",
                    "name": "previous"
                },
                {
                    "isStatic": false,
                    "isAbstract": false,
                    "type": {
                        "type": "Void"
                    },
                    "queryParameters": [
                        
                    ],
                    "verb": "PUT",
                    "methodParameters": [
                        {
                            "type": {
                                "type": "Server"
                            },
                            "name": "server"
                        }
                    ],
                    "pathParameters": [
                        
                    ],
                    "isPublic": true,
                    "code": {
                        "code": {
                            "JAVA": "\n\t\tString path = \"/api/imageinstance/{id}.json?\";\n\t\tpath = path.replace(\"{id}\",getId()+\"\");\n\n\t\tJSONObject json = server.doPUT(path,this.toJSON());\n\n\t\tthis.build((JSONObject)json.get(\"imageinstance\"));\n\n    "
                        }
                    },
                    "allParameters": [
                        {
                            "type": {
                                "type": "Server"
                            },
                            "name": "server"
                        }
                    ],
                    "path": "/api/imageinstance/{id}.json",
                    "name": "edit"
                }
            ],
            "name": "AbstractImageInstance"
        },
        {
            "fullPackage": "be.cytomine.client.abst",
            "isAbstract": true,
            "comment": {
                "version": "0.1",
                "description": "A position of an image in the image group",
                "author": "ClientBuilder (Lo\u00EFc Rollus)"
            },
            "fields": [
                {
                    "useInConstructor": false,
                    "type": {
                        "type": "String"
                    },
                    "useInSetter": false,
                    "comment": {
                        "description": "The full class name of the domain"
                    },
                    "useInGetter": true,
                    "name": "clazz"
                },
                {
                    "useInConstructor": false,
                    "type": {
                        "type": "Long"
                    },
                    "useInSetter": false,
                    "comment": {
                        "description": "The domain id"
                    },
                    "useInGetter": true,
                    "name": "id"
                },
                {
                    "useInConstructor": false,
                    "type": {
                        "type": "Date"
                    },
                    "useInSetter": false,
                    "comment": {
                        "description": "The date of the domain creation"
                    },
                    "useInGetter": true,
                    "name": "created"
                },
                {
                    "useInConstructor": false,
                    "type": {
                        "type": "Date"
                    },
                    "useInSetter": false,
                    "comment": {
                        "description": "The date of the domain modification"
                    },
                    "useInGetter": true,
                    "name": "updated"
                },
                {
                    "useInConstructor": false,
                    "type": {
                        "type": "Date"
                    },
                    "useInSetter": false,
                    "comment": {
                        "description": "When domain was removed from Cytomine"
                    },
                    "useInGetter": true,
                    "name": "deleted"
                },
                {
                    "useInConstructor": true,
                    "type": {
                        "type": "Long"
                    },
                    "useInSetter": true,
                    "comment": {
                        "description": "The image"
                    },
                    "useInGetter": true,
                    "name": "image"
                },
                {
                    "useInConstructor": false,
                    "type": {
                        "type": "Integer"
                    },
                    "useInSetter": true,
                    "comment": {
                        "description": "The image zStack"
                    },
                    "useInGetter": true,
                    "name": "zStack"
                },
                {
                    "useInConstructor": false,
                    "type": {
                        "type": "Integer"
                    },
                    "useInSetter": true,
                    "comment": {
                        "description": "The image slice"
                    },
                    "useInGetter": true,
                    "name": "slice"
                },
                {
                    "useInConstructor": false,
                    "type": {
                        "type": "Integer"
                    },
                    "useInSetter": true,
                    "comment": {
                        "description": "The image time"
                    },
                    "useInGetter": true,
                    "name": "time"
                },
                {
                    "useInConstructor": false,
                    "type": {
                        "type": "Integer"
                    },
                    "useInSetter": true,
                    "comment": {
                        "description": "The image channel"
                    },
                    "useInGetter": true,
                    "name": "channel"
                },
                {
                    "useInConstructor": true,
                    "type": {
                        "type": "Long"
                    },
                    "useInSetter": true,
                    "comment": {
                        "description": "The image group"
                    },
                    "useInGetter": true,
                    "name": "imageGroup"
                },
                {
                    "useInConstructor": false,
                    "type": {
                        "type": "Object"
                    },
                    "useInSetter": false,
                    "comment": {
                        "description": "The image instance full data (see image instance for more details)"
                    },
                    "useInGetter": true,
                    "name": "model"
                }
            ],
            "domainName": "ImageSequence",
            "methods": [
                {
                    "isStatic": false,
                    "isAbstract": false,
                    "type": {
                        "type": "Void"
                    },
                    "queryParameters": [
                        
                    ],
                    "verb": null,
                    "methodParameters": [
                        {
                            "type": {
                                "type": "Long"
                            },
                            "name": "image"
                        },
                        {
                            "type": {
                                "type": "Long"
                            },
                            "name": "imageGroup"
                        }
                    ],
                    "pathParameters": [
                        
                    ],
                    "isPublic": true,
                    "code": {
                        "code": {
                            "JAVA": "\n\t\tthis.image=image;\n\t\tthis.imageGroup=imageGroup;\n\n    "
                        }
                    },
                    "allParameters": [
                        {
                            "type": {
                                "type": "Long"
                            },
                            "name": "image"
                        },
                        {
                            "type": {
                                "type": "Long"
                            },
                            "name": "imageGroup"
                        }
                    ],
                    "path": null,
                    "name": "build"
                },
                {
                    "isStatic": false,
                    "isAbstract": false,
                    "type": {
                        "type": "Void"
                    },
                    "queryParameters": [
                        
                    ],
                    "verb": null,
                    "methodParameters": [
                        {
                            "type": {
                                "type": "JSONObject"
                            },
                            "name": "json"
                        }
                    ],
                    "pathParameters": [
                        
                    ],
                    "isPublic": true,
                    "code": {
                        "code": {
                            "JAVA": "\n\t\tthis.clazz =JSONUtils.extractJSONString(json.get(\"class\"));\n\t\tthis.id =JSONUtils.extractJSONLong(json.get(\"id\"));\n\t\tthis.created =JSONUtils.extractJSONDate(json.get(\"created\"));\n\t\tthis.updated =JSONUtils.extractJSONDate(json.get(\"updated\"));\n\t\tthis.deleted =JSONUtils.extractJSONDate(json.get(\"deleted\"));\n\t\tthis.image =JSONUtils.extractJSONLong(json.get(\"image\"));\n\t\tthis.zStack =JSONUtils.extractJSONInteger(json.get(\"zStack\"));\n\t\tthis.slice =JSONUtils.extractJSONInteger(json.get(\"slice\"));\n\t\tthis.time =JSONUtils.extractJSONInteger(json.get(\"time\"));\n\t\tthis.channel =JSONUtils.extractJSONInteger(json.get(\"channel\"));\n\t\tthis.imageGroup =JSONUtils.extractJSONLong(json.get(\"imageGroup\"));\n\t\tthis.model =JSONUtils.extractJSONObject(json.get(\"model\"));\n\n    "
                        }
                    },
                    "allParameters": [
                        {
                            "type": {
                                "type": "JSONObject"
                            },
                            "name": "json"
                        }
                    ],
                    "path": null,
                    "name": "build"
                },
                {
                    "isStatic": false,
                    "isAbstract": false,
                    "type": {
                        "type": "JSONObject"
                    },
                    "queryParameters": [
                        
                    ],
                    "verb": null,
                    "methodParameters": [
                        
                    ],
                    "pathParameters": [
                        
                    ],
                    "isPublic": true,
                    "code": {
                        "code": {
                            "JAVA": "\n\t\tJSONObject json=new JSONObject();\n\t\tjson.put(\"class\",JSONUtils.formatJSON(this.clazz));\n\t\tjson.put(\"id\",JSONUtils.formatJSON(this.id));\n\t\tjson.put(\"created\",JSONUtils.formatJSON(this.created));\n\t\tjson.put(\"updated\",JSONUtils.formatJSON(this.updated));\n\t\tjson.put(\"deleted\",JSONUtils.formatJSON(this.deleted));\n\t\tjson.put(\"image\",JSONUtils.formatJSON(this.image));\n\t\tjson.put(\"zStack\",JSONUtils.formatJSON(this.zStack));\n\t\tjson.put(\"slice\",JSONUtils.formatJSON(this.slice));\n\t\tjson.put(\"time\",JSONUtils.formatJSON(this.time));\n\t\tjson.put(\"channel\",JSONUtils.formatJSON(this.channel));\n\t\tjson.put(\"imageGroup\",JSONUtils.formatJSON(this.imageGroup));\n\t\tjson.put(\"model\",JSONUtils.formatJSON(this.model));\n\n\t\treturn json;\n    "
                        }
                    },
                    "allParameters": [
                        
                    ],
                    "path": null,
                    "name": "toJSON"
                },
                {
                    "isStatic": true,
                    "isAbstract": false,
                    "type": {
                        "type": "ImageSequence"
                    },
                    "queryParameters": [
                        
                    ],
                    "verb": "GET",
                    "methodParameters": [
                        {
                            "type": {
                                "type": "Server"
                            },
                            "name": "server"
                        }
                    ],
                    "pathParameters": [
                        {
                            "type": {
                                "type": "Long"
                            },
                            "name": "id"
                        }
                    ],
                    "isPublic": true,
                    "code": {
                        "code": {
                            "JAVA": "\n\t\tString path = \"/api/imagesequence/{id}.json?\";\n\t\tpath = path.replace(\"{id}\",id+\"\");\n\n\t\tJSONObject json = server.doGET(path);\n\t\tImageSequence domain = new ImageSequence();\n\t\tdomain.build(json);\n\t\treturn domain;\n\n    "
                        }
                    },
                    "allParameters": [
                        {
                            "type": {
                                "type": "Server"
                            },
                            "name": "server"
                        },
                        {
                            "type": {
                                "type": "Long"
                            },
                            "name": "id"
                        }
                    ],
                    "path": "/api/imagesequence/{id}.json",
                    "name": "get"
                },
                {
                    "isStatic": true,
                    "isAbstract": false,
                    "type": {
                        "type": "ImageSequence"
                    },
                    "queryParameters": [
                        {
                            "type": {
                                "type": "Integer"
                            },
                            "name": "max"
                        },
                        {
                            "type": {
                                "type": "Integer"
                            },
                            "name": "offset"
                        }
                    ],
                    "verb": "GET",
                    "methodParameters": [
                        {
                            "type": {
                                "type": "Server"
                            },
                            "name": "server"
                        }
                    ],
                    "pathParameters": [
                        {
                            "type": {
                                "type": "Long"
                            },
                            "name": "id"
                        }
                    ],
                    "isPublic": true,
                    "code": {
                        "code": {
                            "JAVA": "\n\t\tthrow new Exception(\"Not yet implemented\");\n    "
                        }
                    },
                    "allParameters": [
                        {
                            "type": {
                                "type": "Server"
                            },
                            "name": "server"
                        },
                        {
                            "type": {
                                "type": "Long"
                            },
                            "name": "id"
                        },
                        {
                            "type": {
                                "type": "Integer"
                            },
                            "name": "max"
                        },
                        {
                            "type": {
                                "type": "Integer"
                            },
                            "name": "offset"
                        }
                    ],
                    "path": "/api/imagegroup/{id}/imagesequence.json",
                    "name": "listByImageGroup"
                },
                {
                    "isStatic": true,
                    "isAbstract": false,
                    "type": {
                        "type": "ImageSequence"
                    },
                    "queryParameters": [
                        {
                            "type": {
                                "type": "Integer"
                            },
                            "name": "max"
                        },
                        {
                            "type": {
                                "type": "Integer"
                            },
                            "name": "offset"
                        }
                    ],
                    "verb": "GET",
                    "methodParameters": [
                        {
                            "type": {
                                "type": "Server"
                            },
                            "name": "server"
                        }
                    ],
                    "pathParameters": [
                        {
                            "type": {
                                "type": "Long"
                            },
                            "name": "id"
                        }
                    ],
                    "isPublic": true,
                    "code": {
                        "code": {
                            "JAVA": "\n\t\tthrow new Exception(\"Not yet implemented\");\n    "
                        }
                    },
                    "allParameters": [
                        {
                            "type": {
                                "type": "Server"
                            },
                            "name": "server"
                        },
                        {
                            "type": {
                                "type": "Long"
                            },
                            "name": "id"
                        },
                        {
                            "type": {
                                "type": "Integer"
                            },
                            "name": "max"
                        },
                        {
                            "type": {
                                "type": "Integer"
                            },
                            "name": "offset"
                        }
                    ],
                    "path": "/api/imageinstance/{id}/imagesequence.json",
                    "name": "getByImageInstance"
                },
                {
                    "isStatic": true,
                    "isAbstract": false,
                    "type": {
                        "type": "SequencePossibilties"
                    },
                    "queryParameters": [
                        
                    ],
                    "verb": "GET",
                    "methodParameters": [
                        {
                            "type": {
                                "type": "Server"
                            },
                            "name": "server"
                        }
                    ],
                    "pathParameters": [
                        {
                            "type": {
                                "type": "Long"
                            },
                            "name": "id"
                        }
                    ],
                    "isPublic": true,
                    "code": {
                        "code": {
                            "JAVA": "\n\t\tthrow new Exception(\"Not yet implemented\");\n    "
                        }
                    },
                    "allParameters": [
                        {
                            "type": {
                                "type": "Server"
                            },
                            "name": "server"
                        },
                        {
                            "type": {
                                "type": "Long"
                            },
                            "name": "id"
                        }
                    ],
                    "path": "/api/imageinstance/{id}/imagesequence/possibilities.json",
                    "name": "getSequenceInfo"
                },
                {
                    "isStatic": true,
                    "isAbstract": false,
                    "type": {
                        "type": "ImageSequence"
                    },
                    "queryParameters": [
                        {
                            "type": {
                                "type": "Integer"
                            },
                            "name": "max"
                        },
                        {
                            "type": {
                                "type": "Integer"
                            },
                            "name": "offset"
                        }
                    ],
                    "verb": "GET",
                    "methodParameters": [
                        {
                            "type": {
                                "type": "Server"
                            },
                            "name": "server"
                        }
                    ],
                    "pathParameters": [
                        {
                            "type": {
                                "type": "Long"
                            },
                            "name": "id"
                        },
                        {
                            "type": {
                                "type": "Long"
                            },
                            "name": "zstack"
                        },
                        {
                            "type": {
                                "type": "Long"
                            },
                            "name": "time"
                        },
                        {
                            "type": {
                                "type": "Long"
                            },
                            "name": "channel"
                        },
                        {
                            "type": {
                                "type": "Long"
                            },
                            "name": "slice"
                        }
                    ],
                    "isPublic": true,
                    "code": {
                        "code": {
                            "JAVA": "\n\t\tthrow new Exception(\"Not yet implemented\");\n    "
                        }
                    },
                    "allParameters": [
                        {
                            "type": {
                                "type": "Server"
                            },
                            "name": "server"
                        },
                        {
                            "type": {
                                "type": "Long"
                            },
                            "name": "id"
                        },
                        {
                            "type": {
                                "type": "Long"
                            },
                            "name": "zstack"
                        },
                        {
                            "type": {
                                "type": "Long"
                            },
                            "name": "time"
                        },
                        {
                            "type": {
                                "type": "Long"
                            },
                            "name": "channel"
                        },
                        {
                            "type": {
                                "type": "Long"
                            },
                            "name": "slice"
                        },
                        {
                            "type": {
                                "type": "Integer"
                            },
                            "name": "max"
                        },
                        {
                            "type": {
                                "type": "Integer"
                            },
                            "name": "offset"
                        }
                    ],
                    "path": "/api/imagegroup/{id}/{channel}/{zstack}/{slice}/{time}/imagesequence.json",
                    "name": "getByImageGroupAndIndex"
                },
                {
                    "isStatic": false,
                    "isAbstract": false,
                    "type": {
                        "type": "Void"
                    },
                    "queryParameters": [
                        
                    ],
                    "verb": "POST",
                    "methodParameters": [
                        {
                            "type": {
                                "type": "Server"
                            },
                            "name": "server"
                        }
                    ],
                    "pathParameters": [
                        
                    ],
                    "isPublic": true,
                    "code": {
                        "code": {
                            "JAVA": "\n\t\tString path = \"/api/imagesequence.json?\";\n\n\t\tJSONObject json = server.doPOST(path,this.toJSON());\n\n\t\tthis.build((JSONObject)json.get(\"imagesequence\"));\n\n    "
                        }
                    },
                    "allParameters": [
                        {
                            "type": {
                                "type": "Server"
                            },
                            "name": "server"
                        }
                    ],
                    "path": "/api/imagesequence.json",
                    "name": "add"
                },
                {
                    "isStatic": false,
                    "isAbstract": false,
                    "type": {
                        "type": "Void"
                    },
                    "queryParameters": [
                        
                    ],
                    "verb": "DELETE",
                    "methodParameters": [
                        {
                            "type": {
                                "type": "Server"
                            },
                            "name": "server"
                        }
                    ],
                    "pathParameters": [
                        
                    ],
                    "isPublic": true,
                    "code": {
                        "code": {
                            "JAVA": "\n\t\tString path = \"/api/imagesequence/{id}.json?\";\n\t\tpath = path.replace(\"{id}\",getId()+\"\");\n\n\t\tserver.doDELETE(path);\n\t\tbuild(new JSONObject());\n\n    "
                        }
                    },
                    "allParameters": [
                        {
                            "type": {
                                "type": "Server"
                            },
                            "name": "server"
                        }
                    ],
                    "path": "/api/imagesequence/{id}.json",
                    "name": "delete"
                },
                {
                    "isStatic": false,
                    "isAbstract": false,
                    "type": {
                        "type": "Void"
                    },
                    "queryParameters": [
                        
                    ],
                    "verb": "PUT",
                    "methodParameters": [
                        {
                            "type": {
                                "type": "Server"
                            },
                            "name": "server"
                        }
                    ],
                    "pathParameters": [
                        
                    ],
                    "isPublic": true,
                    "code": {
                        "code": {
                            "JAVA": "\n\t\tString path = \"/api/imagesequence/{id}.json?\";\n\n\t\tJSONObject json = server.doPUT(path,this.toJSON());\n\n\t\tthis.build((JSONObject)json.get(\"imagesequence\"));\n\n    "
                        }
                    },
                    "allParameters": [
                        {
                            "type": {
                                "type": "Server"
                            },
                            "name": "server"
                        }
                    ],
                    "path": "/api/imagesequence/{id}.json",
                    "name": "edit"
                }
            ],
            "name": "AbstractImageSequence"
        },
        {
            "fullPackage": "be.cytomine.client.abst",
            "isAbstract": true,
            "comment": {
                "version": "0.1",
                "description": "A job is a software instance. This is the execution of software with some parameters",
                "author": "ClientBuilder (Lo\u00EFc Rollus)"
            },
            "fields": [
                {
                    "useInConstructor": false,
                    "type": {
                        "type": "String"
                    },
                    "useInSetter": false,
                    "comment": {
                        "description": "The full class name of the domain"
                    },
                    "useInGetter": true,
                    "name": "clazz"
                },
                {
                    "useInConstructor": false,
                    "type": {
                        "type": "Long"
                    },
                    "useInSetter": false,
                    "comment": {
                        "description": "The domain id"
                    },
                    "useInGetter": true,
                    "name": "id"
                },
                {
                    "useInConstructor": false,
                    "type": {
                        "type": "Date"
                    },
                    "useInSetter": false,
                    "comment": {
                        "description": "The date of the domain creation"
                    },
                    "useInGetter": true,
                    "name": "created"
                },
                {
                    "useInConstructor": false,
                    "type": {
                        "type": "Date"
                    },
                    "useInSetter": false,
                    "comment": {
                        "description": "The date of the domain modification"
                    },
                    "useInGetter": true,
                    "name": "updated"
                },
                {
                    "useInConstructor": false,
                    "type": {
                        "type": "Date"
                    },
                    "useInSetter": false,
                    "comment": {
                        "description": "When domain was removed from Cytomine"
                    },
                    "useInGetter": true,
                    "name": "deleted"
                },
                {
                    "useInConstructor": false,
                    "type": {
                        "type": "String"
                    },
                    "useInSetter": false,
                    "comment": {
                        "description": "The algo type based on the class name"
                    },
                    "useInGetter": true,
                    "name": "algoType"
                },
                {
                    "useInConstructor": false,
                    "type": {
                        "type": "Integer"
                    },
                    "useInSetter": true,
                    "comment": {
                        "description": "The algo progression (from 0 to 100)"
                    },
                    "useInGetter": true,
                    "name": "progress"
                },
                {
                    "useInConstructor": false,
                    "type": {
                        "type": "Integer"
                    },
                    "useInSetter": true,
                    "comment": {
                        "description": "The algo status (NOTLAUNCH = 0, INQUEUE = 1, RUNNING = 2,SUCCESS = 3,FAILED = 4,INDETERMINATE = 5,WAIT = 6,PREVIEWED = 7)"
                    },
                    "useInGetter": true,
                    "name": "status"
                },
                {
                    "useInConstructor": false,
                    "type": {
                        "type": "Integer"
                    },
                    "useInSetter": false,
                    "comment": {
                        "description": "Job Indice for this software in this project"
                    },
                    "useInGetter": true,
                    "name": "number"
                },
                {
                    "useInConstructor": false,
                    "type": {
                        "type": "String"
                    },
                    "useInSetter": true,
                    "comment": {
                        "description": "Text comment for the job status"
                    },
                    "useInGetter": true,
                    "name": "statusComment"
                },
                {
                    "useInConstructor": true,
                    "type": {
                        "type": "Long"
                    },
                    "useInSetter": true,
                    "comment": {
                        "description": "The project of the job"
                    },
                    "useInGetter": true,
                    "name": "project"
                },
                {
                    "useInConstructor": true,
                    "type": {
                        "type": "Long"
                    },
                    "useInSetter": true,
                    "comment": {
                        "description": "The software of the job"
                    },
                    "useInGetter": true,
                    "name": "software"
                },
                {
                    "useInConstructor": false,
                    "type": {
                        "type": "String"
                    },
                    "useInSetter": false,
                    "comment": {
                        "description": "The software name of the job"
                    },
                    "useInGetter": true,
                    "name": "softwareName"
                },
                {
                    "useInConstructor": false,
                    "type": {
                        "type": "Double"
                    },
                    "useInSetter": true,
                    "comment": {
                        "description": "Generic field for job rate info. The rate is a quality value about the job works"
                    },
                    "useInGetter": true,
                    "name": "rate"
                },
                {
                    "useInConstructor": false,
                    "type": {
                        "type": "Boolean"
                    },
                    "useInSetter": true,
                    "comment": {
                        "description": "Flag to see if data generate by this job are deleted"
                    },
                    "useInGetter": true,
                    "name": "dataDeleted"
                },
                {
                    "useInConstructor": false,
                    "type": {
                        "type": "String"
                    },
                    "useInSetter": false,
                    "comment": {
                        "description": "The username of the job"
                    },
                    "useInGetter": true,
                    "name": "username"
                },
                {
                    "useInConstructor": false,
                    "type": {
                        "type": "Long"
                    },
                    "useInSetter": false,
                    "comment": {
                        "description": "The user of the job"
                    },
                    "useInGetter": true,
                    "name": "userJob"
                },
                {
                    "useInConstructor": false,
                    "type": {
                        "type": "List"
                    },
                    "useInSetter": false,
                    "comment": {
                        "description": "List of job parameters for this job"
                    },
                    "useInGetter": true,
                    "name": "jobParameters"
                }
            ],
            "domainName": "Job",
            "methods": [
                {
                    "isStatic": false,
                    "isAbstract": false,
                    "type": {
                        "type": "Void"
                    },
                    "queryParameters": [
                        
                    ],
                    "verb": null,
                    "methodParameters": [
                        {
                            "type": {
                                "type": "Long"
                            },
                            "name": "project"
                        },
                        {
                            "type": {
                                "type": "Long"
                            },
                            "name": "software"
                        }
                    ],
                    "pathParameters": [
                        
                    ],
                    "isPublic": true,
                    "code": {
                        "code": {
                            "JAVA": "\n\t\tthis.project=project;\n\t\tthis.software=software;\n\n    "
                        }
                    },
                    "allParameters": [
                        {
                            "type": {
                                "type": "Long"
                            },
                            "name": "project"
                        },
                        {
                            "type": {
                                "type": "Long"
                            },
                            "name": "software"
                        }
                    ],
                    "path": null,
                    "name": "build"
                },
                {
                    "isStatic": false,
                    "isAbstract": false,
                    "type": {
                        "type": "Void"
                    },
                    "queryParameters": [
                        
                    ],
                    "verb": null,
                    "methodParameters": [
                        {
                            "type": {
                                "type": "JSONObject"
                            },
                            "name": "json"
                        }
                    ],
                    "pathParameters": [
                        
                    ],
                    "isPublic": true,
                    "code": {
                        "code": {
                            "JAVA": "\n\t\tthis.clazz =JSONUtils.extractJSONString(json.get(\"class\"));\n\t\tthis.id =JSONUtils.extractJSONLong(json.get(\"id\"));\n\t\tthis.created =JSONUtils.extractJSONDate(json.get(\"created\"));\n\t\tthis.updated =JSONUtils.extractJSONDate(json.get(\"updated\"));\n\t\tthis.deleted =JSONUtils.extractJSONDate(json.get(\"deleted\"));\n\t\tthis.algoType =JSONUtils.extractJSONString(json.get(\"algoType\"));\n\t\tthis.progress =JSONUtils.extractJSONInteger(json.get(\"progress\"));\n\t\tthis.status =JSONUtils.extractJSONInteger(json.get(\"status\"));\n\t\tthis.number =JSONUtils.extractJSONInteger(json.get(\"number\"));\n\t\tthis.statusComment =JSONUtils.extractJSONString(json.get(\"statusComment\"));\n\t\tthis.project =JSONUtils.extractJSONLong(json.get(\"project\"));\n\t\tthis.software =JSONUtils.extractJSONLong(json.get(\"software\"));\n\t\tthis.softwareName =JSONUtils.extractJSONString(json.get(\"softwareName\"));\n\t\tthis.rate =JSONUtils.extractJSONDouble(json.get(\"rate\"));\n\t\tthis.dataDeleted =JSONUtils.extractJSONBoolean(json.get(\"dataDeleted\"));\n\t\tthis.username =JSONUtils.extractJSONString(json.get(\"username\"));\n\t\tthis.userJob =JSONUtils.extractJSONLong(json.get(\"userJob\"));\n\t\tthis.jobParameters =JSONUtils.extractJSONList(json.get(\"jobParameters\"));\n\n    "
                        }
                    },
                    "allParameters": [
                        {
                            "type": {
                                "type": "JSONObject"
                            },
                            "name": "json"
                        }
                    ],
                    "path": null,
                    "name": "build"
                },
                {
                    "isStatic": false,
                    "isAbstract": false,
                    "type": {
                        "type": "JSONObject"
                    },
                    "queryParameters": [
                        
                    ],
                    "verb": null,
                    "methodParameters": [
                        
                    ],
                    "pathParameters": [
                        
                    ],
                    "isPublic": true,
                    "code": {
                        "code": {
                            "JAVA": "\n\t\tJSONObject json=new JSONObject();\n\t\tjson.put(\"class\",JSONUtils.formatJSON(this.clazz));\n\t\tjson.put(\"id\",JSONUtils.formatJSON(this.id));\n\t\tjson.put(\"created\",JSONUtils.formatJSON(this.created));\n\t\tjson.put(\"updated\",JSONUtils.formatJSON(this.updated));\n\t\tjson.put(\"deleted\",JSONUtils.formatJSON(this.deleted));\n\t\tjson.put(\"algoType\",JSONUtils.formatJSON(this.algoType));\n\t\tjson.put(\"progress\",JSONUtils.formatJSON(this.progress));\n\t\tjson.put(\"status\",JSONUtils.formatJSON(this.status));\n\t\tjson.put(\"number\",JSONUtils.formatJSON(this.number));\n\t\tjson.put(\"statusComment\",JSONUtils.formatJSON(this.statusComment));\n\t\tjson.put(\"project\",JSONUtils.formatJSON(this.project));\n\t\tjson.put(\"software\",JSONUtils.formatJSON(this.software));\n\t\tjson.put(\"softwareName\",JSONUtils.formatJSON(this.softwareName));\n\t\tjson.put(\"rate\",JSONUtils.formatJSON(this.rate));\n\t\tjson.put(\"dataDeleted\",JSONUtils.formatJSON(this.dataDeleted));\n\t\tjson.put(\"username\",JSONUtils.formatJSON(this.username));\n\t\tjson.put(\"userJob\",JSONUtils.formatJSON(this.userJob));\n\t\tjson.put(\"jobParameters\",JSONUtils.formatJSON(this.jobParameters));\n\n\t\treturn json;\n    "
                        }
                    },
                    "allParameters": [
                        
                    ],
                    "path": null,
                    "name": "toJSON"
                }
            ],
            "name": "AbstractJob"
        },
        {
            "fullPackage": "be.cytomine.client.abst",
            "isAbstract": true,
            "comment": {
                "version": "0.1",
                "description": "Data created by a job. This concerns only data files (annotation or term are store in domain database). If config cytomine.jobdata.filesystem is true, file are stored in filesystem, otherwise they are store in database.",
                "author": "ClientBuilder (Lo\u00EFc Rollus)"
            },
            "fields": [
                {
                    "useInConstructor": false,
                    "type": {
                        "type": "String"
                    },
                    "useInSetter": false,
                    "comment": {
                        "description": "The full class name of the domain"
                    },
                    "useInGetter": true,
                    "name": "clazz"
                },
                {
                    "useInConstructor": false,
                    "type": {
                        "type": "Long"
                    },
                    "useInSetter": false,
                    "comment": {
                        "description": "The domain id"
                    },
                    "useInGetter": true,
                    "name": "id"
                },
                {
                    "useInConstructor": false,
                    "type": {
                        "type": "Date"
                    },
                    "useInSetter": false,
                    "comment": {
                        "description": "The date of the domain creation"
                    },
                    "useInGetter": true,
                    "name": "created"
                },
                {
                    "useInConstructor": false,
                    "type": {
                        "type": "Date"
                    },
                    "useInSetter": false,
                    "comment": {
                        "description": "The date of the domain modification"
                    },
                    "useInGetter": true,
                    "name": "updated"
                },
                {
                    "useInConstructor": false,
                    "type": {
                        "type": "Date"
                    },
                    "useInSetter": false,
                    "comment": {
                        "description": "When domain was removed from Cytomine"
                    },
                    "useInGetter": true,
                    "name": "deleted"
                },
                {
                    "useInConstructor": true,
                    "type": {
                        "type": "String"
                    },
                    "useInSetter": true,
                    "comment": {
                        "description": "File key (what's the file)"
                    },
                    "useInGetter": true,
                    "name": "key"
                },
                {
                    "useInConstructor": true,
                    "type": {
                        "type": "Long"
                    },
                    "useInSetter": true,
                    "comment": {
                        "description": "The job that store the data"
                    },
                    "useInGetter": true,
                    "name": "job"
                },
                {
                    "useInConstructor": true,
                    "type": {
                        "type": "String"
                    },
                    "useInSetter": true,
                    "comment": {
                        "description": "Data filename with extension"
                    },
                    "useInGetter": true,
                    "name": "filename"
                },
                {
                    "useInConstructor": false,
                    "type": {
                        "type": "Long"
                    },
                    "useInSetter": false,
                    "comment": {
                        "description": "Data size (in Bytes)"
                    },
                    "useInGetter": true,
                    "name": "size"
                },
                {
                    "useInConstructor": false,
                    "type": {
                        "type": "String"
                    },
                    "useInSetter": false,
                    "comment": {
                        "description": "File full path if 'cytomine.jobdata.filesystem' config is true"
                    },
                    "useInGetter": false,
                    "name": "dir"
                },
                {
                    "useInConstructor": false,
                    "type": {
                        "type": "Long"
                    },
                    "useInSetter": false,
                    "comment": {
                        "description": "File data (from blob field) if 'cytomine.jobdata.filesystem' config is false"
                    },
                    "useInGetter": false,
                    "name": "value"
                }
            ],
            "domainName": "JobData",
            "methods": [
                {
                    "isStatic": false,
                    "isAbstract": false,
                    "type": {
                        "type": "Void"
                    },
                    "queryParameters": [
                        
                    ],
                    "verb": null,
                    "methodParameters": [
                        {
                            "type": {
                                "type": "String"
                            },
                            "name": "key"
                        },
                        {
                            "type": {
                                "type": "Long"
                            },
                            "name": "job"
                        },
                        {
                            "type": {
                                "type": "String"
                            },
                            "name": "filename"
                        }
                    ],
                    "pathParameters": [
                        
                    ],
                    "isPublic": true,
                    "code": {
                        "code": {
                            "JAVA": "\n\t\tthis.key=key;\n\t\tthis.job=job;\n\t\tthis.filename=filename;\n\n    "
                        }
                    },
                    "allParameters": [
                        {
                            "type": {
                                "type": "String"
                            },
                            "name": "key"
                        },
                        {
                            "type": {
                                "type": "Long"
                            },
                            "name": "job"
                        },
                        {
                            "type": {
                                "type": "String"
                            },
                            "name": "filename"
                        }
                    ],
                    "path": null,
                    "name": "build"
                },
                {
                    "isStatic": false,
                    "isAbstract": false,
                    "type": {
                        "type": "Void"
                    },
                    "queryParameters": [
                        
                    ],
                    "verb": null,
                    "methodParameters": [
                        {
                            "type": {
                                "type": "JSONObject"
                            },
                            "name": "json"
                        }
                    ],
                    "pathParameters": [
                        
                    ],
                    "isPublic": true,
                    "code": {
                        "code": {
                            "JAVA": "\n\t\tthis.clazz =JSONUtils.extractJSONString(json.get(\"class\"));\n\t\tthis.id =JSONUtils.extractJSONLong(json.get(\"id\"));\n\t\tthis.created =JSONUtils.extractJSONDate(json.get(\"created\"));\n\t\tthis.updated =JSONUtils.extractJSONDate(json.get(\"updated\"));\n\t\tthis.deleted =JSONUtils.extractJSONDate(json.get(\"deleted\"));\n\t\tthis.key =JSONUtils.extractJSONString(json.get(\"key\"));\n\t\tthis.job =JSONUtils.extractJSONLong(json.get(\"job\"));\n\t\tthis.filename =JSONUtils.extractJSONString(json.get(\"filename\"));\n\t\tthis.size =JSONUtils.extractJSONLong(json.get(\"size\"));\n\t\tthis.dir =JSONUtils.extractJSONString(json.get(\"dir\"));\n\t\tthis.value =JSONUtils.extractJSONLong(json.get(\"value\"));\n\n    "
                        }
                    },
                    "allParameters": [
                        {
                            "type": {
                                "type": "JSONObject"
                            },
                            "name": "json"
                        }
                    ],
                    "path": null,
                    "name": "build"
                },
                {
                    "isStatic": false,
                    "isAbstract": false,
                    "type": {
                        "type": "JSONObject"
                    },
                    "queryParameters": [
                        
                    ],
                    "verb": null,
                    "methodParameters": [
                        
                    ],
                    "pathParameters": [
                        
                    ],
                    "isPublic": true,
                    "code": {
                        "code": {
                            "JAVA": "\n\t\tJSONObject json=new JSONObject();\n\t\tjson.put(\"class\",JSONUtils.formatJSON(this.clazz));\n\t\tjson.put(\"id\",JSONUtils.formatJSON(this.id));\n\t\tjson.put(\"created\",JSONUtils.formatJSON(this.created));\n\t\tjson.put(\"updated\",JSONUtils.formatJSON(this.updated));\n\t\tjson.put(\"deleted\",JSONUtils.formatJSON(this.deleted));\n\t\tjson.put(\"key\",JSONUtils.formatJSON(this.key));\n\t\tjson.put(\"job\",JSONUtils.formatJSON(this.job));\n\t\tjson.put(\"filename\",JSONUtils.formatJSON(this.filename));\n\t\tjson.put(\"size\",JSONUtils.formatJSON(this.size));\n\n\t\treturn json;\n    "
                        }
                    },
                    "allParameters": [
                        
                    ],
                    "path": null,
                    "name": "toJSON"
                },
                {
                    "isStatic": true,
                    "isAbstract": false,
                    "type": {
                        "type": "JobData"
                    },
                    "queryParameters": [
                        
                    ],
                    "verb": "GET",
                    "methodParameters": [
                        {
                            "type": {
                                "type": "Server"
                            },
                            "name": "server"
                        }
                    ],
                    "pathParameters": [
                        {
                            "type": {
                                "type": "Long"
                            },
                            "name": "id"
                        }
                    ],
                    "isPublic": true,
                    "code": {
                        "code": {
                            "JAVA": "\n\t\tString path = \"/api/jobdata/{id}.json?\";\n\t\tpath = path.replace(\"{id}\",id+\"\");\n\n\t\tJSONObject json = server.doGET(path);\n\t\tJobData domain = new JobData();\n\t\tdomain.build(json);\n\t\treturn domain;\n\n    "
                        }
                    },
                    "allParameters": [
                        {
                            "type": {
                                "type": "Server"
                            },
                            "name": "server"
                        },
                        {
                            "type": {
                                "type": "Long"
                            },
                            "name": "id"
                        }
                    ],
                    "path": "/api/jobdata/{id}.json",
                    "name": "get"
                },
                {
                    "isStatic": true,
                    "isAbstract": false,
                    "type": {
                        "type": "JobData"
                    },
                    "queryParameters": [
                        
                    ],
                    "verb": "GET",
                    "methodParameters": [
                        {
                            "type": {
                                "type": "Server"
                            },
                            "name": "server"
                        }
                    ],
                    "pathParameters": [
                        {
                            "type": {
                                "type": "Long"
                            },
                            "name": "id"
                        }
                    ],
                    "isPublic": true,
                    "code": {
                        "code": {
                            "JAVA": "\n\t\tthrow new Exception(\"Not yet implemented\");\n    "
                        }
                    },
                    "allParameters": [
                        {
                            "type": {
                                "type": "Server"
                            },
                            "name": "server"
                        },
                        {
                            "type": {
                                "type": "Long"
                            },
                            "name": "id"
                        }
                    ],
                    "path": "/api/jobdata/{id}/download",
                    "name": "download"
                },
                {
                    "isStatic": true,
                    "isAbstract": false,
                    "type": {
                        "type": "JobData"
                    },
                    "queryParameters": [
                        
                    ],
                    "verb": "POST",
                    "methodParameters": [
                        {
                            "type": {
                                "type": "Server"
                            },
                            "name": "server"
                        }
                    ],
                    "pathParameters": [
                        {
                            "type": {
                                "type": "Long"
                            },
                            "name": "id"
                        }
                    ],
                    "isPublic": true,
                    "code": {
                        "code": {
                            "JAVA": "\n\t\tthrow new Exception(\"Not yet implemented\");\n    "
                        }
                    },
                    "allParameters": [
                        {
                            "type": {
                                "type": "Server"
                            },
                            "name": "server"
                        },
                        {
                            "type": {
                                "type": "Long"
                            },
                            "name": "id"
                        }
                    ],
                    "path": "/api/jobdata/{id}/upload.json",
                    "name": "upload"
                },
                {
                    "isStatic": true,
                    "isAbstract": false,
                    "type": {
                        "type": "JobData"
                    },
                    "queryParameters": [
                        
                    ],
                    "verb": "GET",
                    "methodParameters": [
                        {
                            "type": {
                                "type": "Server"
                            },
                            "name": "server"
                        }
                    ],
                    "pathParameters": [
                        {
                            "type": {
                                "type": "Long"
                            },
                            "name": "id"
                        }
                    ],
                    "isPublic": true,
                    "code": {
                        "code": {
                            "JAVA": "\n\t\tthrow new Exception(\"Not yet implemented\");\n    "
                        }
                    },
                    "allParameters": [
                        {
                            "type": {
                                "type": "Server"
                            },
                            "name": "server"
                        },
                        {
                            "type": {
                                "type": "Long"
                            },
                            "name": "id"
                        }
                    ],
                    "path": "/api/jobdata/{id}/view",
                    "name": "view"
                },
                {
                    "isStatic": true,
                    "isAbstract": false,
                    "type": {
                        "type": "JobData"
                    },
                    "queryParameters": [
                        {
                            "type": {
                                "type": "Integer"
                            },
                            "name": "max"
                        },
                        {
                            "type": {
                                "type": "Integer"
                            },
                            "name": "offset"
                        }
                    ],
                    "verb": "GET",
                    "methodParameters": [
                        {
                            "type": {
                                "type": "Server"
                            },
                            "name": "server"
                        }
                    ],
                    "pathParameters": [
                        {
                            "type": {
                                "type": "Long"
                            },
                            "name": "id"
                        }
                    ],
                    "isPublic": true,
                    "code": {
                        "code": {
                            "JAVA": "\n\t\tthrow new Exception(\"Not yet implemented\");\n    "
                        }
                    },
                    "allParameters": [
                        {
                            "type": {
                                "type": "Server"
                            },
                            "name": "server"
                        },
                        {
                            "type": {
                                "type": "Long"
                            },
                            "name": "id"
                        },
                        {
                            "type": {
                                "type": "Integer"
                            },
                            "name": "max"
                        },
                        {
                            "type": {
                                "type": "Integer"
                            },
                            "name": "offset"
                        }
                    ],
                    "path": "/api/job/{id}/jobdata.json",
                    "name": "listByJob"
                },
                {
                    "isStatic": false,
                    "isAbstract": false,
                    "type": {
                        "type": "Void"
                    },
                    "queryParameters": [
                        
                    ],
                    "verb": "POST",
                    "methodParameters": [
                        {
                            "type": {
                                "type": "Server"
                            },
                            "name": "server"
                        }
                    ],
                    "pathParameters": [
                        
                    ],
                    "isPublic": true,
                    "code": {
                        "code": {
                            "JAVA": "\n\t\tString path = \"/api/jobdata.json?\";\n\n\t\tJSONObject json = server.doPOST(path,this.toJSON());\n\n\t\tthis.build((JSONObject)json.get(\"jobdata\"));\n\n    "
                        }
                    },
                    "allParameters": [
                        {
                            "type": {
                                "type": "Server"
                            },
                            "name": "server"
                        }
                    ],
                    "path": "/api/jobdata.json",
                    "name": "add"
                },
                {
                    "isStatic": true,
                    "isAbstract": false,
                    "type": {
                        "type": "JobData"
                    },
                    "queryParameters": [
                        {
                            "type": {
                                "type": "Integer"
                            },
                            "name": "max"
                        },
                        {
                            "type": {
                                "type": "Integer"
                            },
                            "name": "offset"
                        }
                    ],
                    "verb": "GET",
                    "methodParameters": [
                        {
                            "type": {
                                "type": "Server"
                            },
                            "name": "server"
                        }
                    ],
                    "pathParameters": [
                        
                    ],
                    "isPublic": true,
                    "code": {
                        "code": {
                            "JAVA": "\n\t\tthrow new Exception(\"Not yet implemented\");\n    "
                        }
                    },
                    "allParameters": [
                        {
                            "type": {
                                "type": "Server"
                            },
                            "name": "server"
                        },
                        {
                            "type": {
                                "type": "Integer"
                            },
                            "name": "max"
                        },
                        {
                            "type": {
                                "type": "Integer"
                            },
                            "name": "offset"
                        }
                    ],
                    "path": "/api/jobdata.json",
                    "name": "list"
                },
                {
                    "isStatic": false,
                    "isAbstract": false,
                    "type": {
                        "type": "Void"
                    },
                    "queryParameters": [
                        
                    ],
                    "verb": "DELETE",
                    "methodParameters": [
                        {
                            "type": {
                                "type": "Server"
                            },
                            "name": "server"
                        }
                    ],
                    "pathParameters": [
                        
                    ],
                    "isPublic": true,
                    "code": {
                        "code": {
                            "JAVA": "\n\t\tString path = \"/api/jobdata/{id}.json?\";\n\t\tpath = path.replace(\"{id}\",getId()+\"\");\n\n\t\tserver.doDELETE(path);\n\t\tbuild(new JSONObject());\n\n    "
                        }
                    },
                    "allParameters": [
                        {
                            "type": {
                                "type": "Server"
                            },
                            "name": "server"
                        }
                    ],
                    "path": "/api/jobdata/{id}.json",
                    "name": "delete"
                },
                {
                    "isStatic": false,
                    "isAbstract": false,
                    "type": {
                        "type": "Void"
                    },
                    "queryParameters": [
                        
                    ],
                    "verb": "PUT",
                    "methodParameters": [
                        {
                            "type": {
                                "type": "Server"
                            },
                            "name": "server"
                        }
                    ],
                    "pathParameters": [
                        
                    ],
                    "isPublic": true,
                    "code": {
                        "code": {
                            "JAVA": "\n\t\tString path = \"/api/jobdata/{id}.json?\";\n\t\tpath = path.replace(\"{id}\",getId()+\"\");\n\n\t\tJSONObject json = server.doPUT(path,this.toJSON());\n\n\t\tthis.build((JSONObject)json.get(\"jobdata\"));\n\n    "
                        }
                    },
                    "allParameters": [
                        {
                            "type": {
                                "type": "Server"
                            },
                            "name": "server"
                        }
                    ],
                    "path": "/api/jobdata/{id}.json",
                    "name": "edit"
                }
            ],
            "name": "AbstractJobData"
        },
        {
            "fullPackage": "be.cytomine.client.abst",
            "isAbstract": true,
            "comment": {
                "version": "0.1",
                "description": "A job parameter is an instance of software parameter. When a job is created, we create a job parameter for each software parameter.",
                "author": "ClientBuilder (Lo\u00EFc Rollus)"
            },
            "fields": [
                {
                    "useInConstructor": false,
                    "type": {
                        "type": "String"
                    },
                    "useInSetter": false,
                    "comment": {
                        "description": "The full class name of the domain"
                    },
                    "useInGetter": true,
                    "name": "clazz"
                },
                {
                    "useInConstructor": false,
                    "type": {
                        "type": "Long"
                    },
                    "useInSetter": false,
                    "comment": {
                        "description": "The domain id"
                    },
                    "useInGetter": true,
                    "name": "id"
                },
                {
                    "useInConstructor": false,
                    "type": {
                        "type": "Date"
                    },
                    "useInSetter": false,
                    "comment": {
                        "description": "The date of the domain creation"
                    },
                    "useInGetter": true,
                    "name": "created"
                },
                {
                    "useInConstructor": false,
                    "type": {
                        "type": "Date"
                    },
                    "useInSetter": false,
                    "comment": {
                        "description": "The date of the domain modification"
                    },
                    "useInGetter": true,
                    "name": "updated"
                },
                {
                    "useInConstructor": false,
                    "type": {
                        "type": "Date"
                    },
                    "useInSetter": false,
                    "comment": {
                        "description": "When domain was removed from Cytomine"
                    },
                    "useInGetter": true,
                    "name": "deleted"
                },
                {
                    "useInConstructor": true,
                    "type": {
                        "type": "String"
                    },
                    "useInSetter": true,
                    "comment": {
                        "description": "Job parameter value"
                    },
                    "useInGetter": true,
                    "name": "value"
                },
                {
                    "useInConstructor": true,
                    "type": {
                        "type": "Long"
                    },
                    "useInSetter": true,
                    "comment": {
                        "description": "The job of the parameter"
                    },
                    "useInGetter": true,
                    "name": "job"
                },
                {
                    "useInConstructor": true,
                    "type": {
                        "type": "Long"
                    },
                    "useInSetter": true,
                    "comment": {
                        "description": "The parameter id of the software"
                    },
                    "useInGetter": true,
                    "name": "softwareParameter"
                },
                {
                    "useInConstructor": false,
                    "type": {
                        "type": "String"
                    },
                    "useInSetter": false,
                    "comment": {
                        "description": "The parameter name"
                    },
                    "useInGetter": true,
                    "name": "name"
                },
                {
                    "useInConstructor": false,
                    "type": {
                        "type": "String"
                    },
                    "useInSetter": false,
                    "comment": {
                        "description": "The parameter data type (Number, String, Date, Boolean, Domain (e.g: image instance id,...), ListDomain )"
                    },
                    "useInGetter": true,
                    "name": "type"
                },
                {
                    "useInConstructor": false,
                    "type": {
                        "type": "String"
                    },
                    "useInSetter": false,
                    "comment": {
                        "description": "Index for parameter position. When launching software, parameter will be send ordered by index (asc)."
                    },
                    "useInGetter": true,
                    "name": "index"
                },
                {
                    "useInConstructor": false,
                    "type": {
                        "type": "String"
                    },
                    "useInSetter": false,
                    "comment": {
                        "description": "Used for UI. If parameter has '(List)Domain' type, the URI will provide a list of choice. E.g. if uri is 'api/project.json', the choice list will be cytomine project list"
                    },
                    "useInGetter": true,
                    "name": "uri"
                },
                {
                    "useInConstructor": false,
                    "type": {
                        "type": "String"
                    },
                    "useInSetter": false,
                    "comment": {
                        "description": "Used for UI. JSON Fields to print in choice list. E.g. if uri is api/project.json and uriPrintAttribut is 'name', the choice list will contains project name "
                    },
                    "useInGetter": true,
                    "name": "uriPrintAttribut"
                },
                {
                    "useInConstructor": false,
                    "type": {
                        "type": "String"
                    },
                    "useInSetter": false,
                    "comment": {
                        "description": "Used for UI. JSON Fields used to sort choice list. E.g. if uri is api/project.json and uriSortAttribut is 'id', projects will be sort by id (not by name) "
                    },
                    "useInGetter": true,
                    "name": "uriSortAttribut"
                }
            ],
            "domainName": "JobParameter",
            "methods": [
                {
                    "isStatic": false,
                    "isAbstract": false,
                    "type": {
                        "type": "Void"
                    },
                    "queryParameters": [
                        
                    ],
                    "verb": null,
                    "methodParameters": [
                        {
                            "type": {
                                "type": "String"
                            },
                            "name": "value"
                        },
                        {
                            "type": {
                                "type": "Long"
                            },
                            "name": "job"
                        },
                        {
                            "type": {
                                "type": "Long"
                            },
                            "name": "softwareParameter"
                        }
                    ],
                    "pathParameters": [
                        
                    ],
                    "isPublic": true,
                    "code": {
                        "code": {
                            "JAVA": "\n\t\tthis.value=value;\n\t\tthis.job=job;\n\t\tthis.softwareParameter=softwareParameter;\n\n    "
                        }
                    },
                    "allParameters": [
                        {
                            "type": {
                                "type": "String"
                            },
                            "name": "value"
                        },
                        {
                            "type": {
                                "type": "Long"
                            },
                            "name": "job"
                        },
                        {
                            "type": {
                                "type": "Long"
                            },
                            "name": "softwareParameter"
                        }
                    ],
                    "path": null,
                    "name": "build"
                },
                {
                    "isStatic": false,
                    "isAbstract": false,
                    "type": {
                        "type": "Void"
                    },
                    "queryParameters": [
                        
                    ],
                    "verb": null,
                    "methodParameters": [
                        {
                            "type": {
                                "type": "JSONObject"
                            },
                            "name": "json"
                        }
                    ],
                    "pathParameters": [
                        
                    ],
                    "isPublic": true,
                    "code": {
                        "code": {
                            "JAVA": "\n\t\tthis.clazz =JSONUtils.extractJSONString(json.get(\"class\"));\n\t\tthis.id =JSONUtils.extractJSONLong(json.get(\"id\"));\n\t\tthis.created =JSONUtils.extractJSONDate(json.get(\"created\"));\n\t\tthis.updated =JSONUtils.extractJSONDate(json.get(\"updated\"));\n\t\tthis.deleted =JSONUtils.extractJSONDate(json.get(\"deleted\"));\n\t\tthis.value =JSONUtils.extractJSONString(json.get(\"value\"));\n\t\tthis.job =JSONUtils.extractJSONLong(json.get(\"job\"));\n\t\tthis.softwareParameter =JSONUtils.extractJSONLong(json.get(\"softwareParameter\"));\n\t\tthis.name =JSONUtils.extractJSONString(json.get(\"name\"));\n\t\tthis.type =JSONUtils.extractJSONString(json.get(\"type\"));\n\t\tthis.index =JSONUtils.extractJSONString(json.get(\"index\"));\n\t\tthis.uri =JSONUtils.extractJSONString(json.get(\"uri\"));\n\t\tthis.uriPrintAttribut =JSONUtils.extractJSONString(json.get(\"uriPrintAttribut\"));\n\t\tthis.uriSortAttribut =JSONUtils.extractJSONString(json.get(\"uriSortAttribut\"));\n\n    "
                        }
                    },
                    "allParameters": [
                        {
                            "type": {
                                "type": "JSONObject"
                            },
                            "name": "json"
                        }
                    ],
                    "path": null,
                    "name": "build"
                },
                {
                    "isStatic": false,
                    "isAbstract": false,
                    "type": {
                        "type": "JSONObject"
                    },
                    "queryParameters": [
                        
                    ],
                    "verb": null,
                    "methodParameters": [
                        
                    ],
                    "pathParameters": [
                        
                    ],
                    "isPublic": true,
                    "code": {
                        "code": {
                            "JAVA": "\n\t\tJSONObject json=new JSONObject();\n\t\tjson.put(\"class\",JSONUtils.formatJSON(this.clazz));\n\t\tjson.put(\"id\",JSONUtils.formatJSON(this.id));\n\t\tjson.put(\"created\",JSONUtils.formatJSON(this.created));\n\t\tjson.put(\"updated\",JSONUtils.formatJSON(this.updated));\n\t\tjson.put(\"deleted\",JSONUtils.formatJSON(this.deleted));\n\t\tjson.put(\"value\",JSONUtils.formatJSON(this.value));\n\t\tjson.put(\"job\",JSONUtils.formatJSON(this.job));\n\t\tjson.put(\"softwareParameter\",JSONUtils.formatJSON(this.softwareParameter));\n\t\tjson.put(\"name\",JSONUtils.formatJSON(this.name));\n\t\tjson.put(\"type\",JSONUtils.formatJSON(this.type));\n\t\tjson.put(\"index\",JSONUtils.formatJSON(this.index));\n\t\tjson.put(\"uri\",JSONUtils.formatJSON(this.uri));\n\t\tjson.put(\"uriPrintAttribut\",JSONUtils.formatJSON(this.uriPrintAttribut));\n\t\tjson.put(\"uriSortAttribut\",JSONUtils.formatJSON(this.uriSortAttribut));\n\n\t\treturn json;\n    "
                        }
                    },
                    "allParameters": [
                        
                    ],
                    "path": null,
                    "name": "toJSON"
                },
                {
                    "isStatic": true,
                    "isAbstract": false,
                    "type": {
                        "type": "JobParameter"
                    },
                    "queryParameters": [
                        
                    ],
                    "verb": "GET",
                    "methodParameters": [
                        {
                            "type": {
                                "type": "Server"
                            },
                            "name": "server"
                        }
                    ],
                    "pathParameters": [
                        {
                            "type": {
                                "type": "Long"
                            },
                            "name": "id"
                        }
                    ],
                    "isPublic": true,
                    "code": {
                        "code": {
                            "JAVA": "\n\t\tString path = \"/api/jobparameter/{id}.json?\";\n\t\tpath = path.replace(\"{id}\",id+\"\");\n\n\t\tJSONObject json = server.doGET(path);\n\t\tJobParameter domain = new JobParameter();\n\t\tdomain.build(json);\n\t\treturn domain;\n\n    "
                        }
                    },
                    "allParameters": [
                        {
                            "type": {
                                "type": "Server"
                            },
                            "name": "server"
                        },
                        {
                            "type": {
                                "type": "Long"
                            },
                            "name": "id"
                        }
                    ],
                    "path": "/api/jobparameter/{id}.json",
                    "name": "get"
                },
                {
                    "isStatic": true,
                    "isAbstract": false,
                    "type": {
                        "type": "JobParameter"
                    },
                    "queryParameters": [
                        {
                            "type": {
                                "type": "Integer"
                            },
                            "name": "max"
                        },
                        {
                            "type": {
                                "type": "Integer"
                            },
                            "name": "offset"
                        }
                    ],
                    "verb": "GET",
                    "methodParameters": [
                        {
                            "type": {
                                "type": "Server"
                            },
                            "name": "server"
                        }
                    ],
                    "pathParameters": [
                        {
                            "type": {
                                "type": "Long"
                            },
                            "name": "id"
                        }
                    ],
                    "isPublic": true,
                    "code": {
                        "code": {
                            "JAVA": "\n\t\tthrow new Exception(\"Not yet implemented\");\n    "
                        }
                    },
                    "allParameters": [
                        {
                            "type": {
                                "type": "Server"
                            },
                            "name": "server"
                        },
                        {
                            "type": {
                                "type": "Long"
                            },
                            "name": "id"
                        },
                        {
                            "type": {
                                "type": "Integer"
                            },
                            "name": "max"
                        },
                        {
                            "type": {
                                "type": "Integer"
                            },
                            "name": "offset"
                        }
                    ],
                    "path": "/api/job/{id}/parameter.json",
                    "name": "listByJob"
                },
                {
                    "isStatic": false,
                    "isAbstract": false,
                    "type": {
                        "type": "Void"
                    },
                    "queryParameters": [
                        
                    ],
                    "verb": "POST",
                    "methodParameters": [
                        {
                            "type": {
                                "type": "Server"
                            },
                            "name": "server"
                        }
                    ],
                    "pathParameters": [
                        
                    ],
                    "isPublic": true,
                    "code": {
                        "code": {
                            "JAVA": "\n\t\tString path = \"/api/jobparameter.json?\";\n\t\tpath = path.replace(\"{id}\",getId()+\"\");\n\n\t\tJSONObject json = server.doPOST(path,this.toJSON());\n\n\t\tthis.build((JSONObject)json.get(\"jobparameter\"));\n\n    "
                        }
                    },
                    "allParameters": [
                        {
                            "type": {
                                "type": "Server"
                            },
                            "name": "server"
                        }
                    ],
                    "path": "/api/jobparameter.json",
                    "name": "add"
                },
                {
                    "isStatic": true,
                    "isAbstract": false,
                    "type": {
                        "type": "JobParameter"
                    },
                    "queryParameters": [
                        {
                            "type": {
                                "type": "Integer"
                            },
                            "name": "max"
                        },
                        {
                            "type": {
                                "type": "Integer"
                            },
                            "name": "offset"
                        }
                    ],
                    "verb": "GET",
                    "methodParameters": [
                        {
                            "type": {
                                "type": "Server"
                            },
                            "name": "server"
                        }
                    ],
                    "pathParameters": [
                        
                    ],
                    "isPublic": true,
                    "code": {
                        "code": {
                            "JAVA": "\n\t\tthrow new Exception(\"Not yet implemented\");\n    "
                        }
                    },
                    "allParameters": [
                        {
                            "type": {
                                "type": "Server"
                            },
                            "name": "server"
                        },
                        {
                            "type": {
                                "type": "Integer"
                            },
                            "name": "max"
                        },
                        {
                            "type": {
                                "type": "Integer"
                            },
                            "name": "offset"
                        }
                    ],
                    "path": "/api/jobparameter.json",
                    "name": "list"
                },
                {
                    "isStatic": false,
                    "isAbstract": false,
                    "type": {
                        "type": "Void"
                    },
                    "queryParameters": [
                        
                    ],
                    "verb": "DELETE",
                    "methodParameters": [
                        {
                            "type": {
                                "type": "Server"
                            },
                            "name": "server"
                        }
                    ],
                    "pathParameters": [
                        
                    ],
                    "isPublic": true,
                    "code": {
                        "code": {
                            "JAVA": "\n\t\tString path = \"/api/jobparameter/{id}.json?\";\n\t\tpath = path.replace(\"{id}\",getId()+\"\");\n\n\t\tserver.doDELETE(path);\n\t\tbuild(new JSONObject());\n\n    "
                        }
                    },
                    "allParameters": [
                        {
                            "type": {
                                "type": "Server"
                            },
                            "name": "server"
                        }
                    ],
                    "path": "/api/jobparameter/{id}.json",
                    "name": "delete"
                },
                {
                    "isStatic": false,
                    "isAbstract": false,
                    "type": {
                        "type": "Void"
                    },
                    "queryParameters": [
                        
                    ],
                    "verb": "PUT",
                    "methodParameters": [
                        {
                            "type": {
                                "type": "Server"
                            },
                            "name": "server"
                        }
                    ],
                    "pathParameters": [
                        
                    ],
                    "isPublic": true,
                    "code": {
                        "code": {
                            "JAVA": "\n\t\tString path = \"/api/jobparameter/{id}.json?\";\n\t\tpath = path.replace(\"{id}\",getId()+\"\");\n\n\t\tJSONObject json = server.doPUT(path,this.toJSON());\n\n\t\tthis.build((JSONObject)json.get(\"jobparameter\"));\n\n    "
                        }
                    },
                    "allParameters": [
                        {
                            "type": {
                                "type": "Server"
                            },
                            "name": "server"
                        }
                    ],
                    "path": "/api/jobparameter/{id}.json",
                    "name": "edit"
                }
            ],
            "name": "AbstractJobParameter"
        },
        {
            "fullPackage": "be.cytomine.client.abst",
            "isAbstract": true,
            "comment": {
                "version": "0.1",
                "description": "A job template is a job with pre-filled parameters. It can be used to init a new 'real' job on the basis of this template.",
                "author": "ClientBuilder (Lo\u00EFc Rollus)"
            },
            "fields": [
                {
                    "useInConstructor": false,
                    "type": {
                        "type": "String"
                    },
                    "useInSetter": false,
                    "comment": {
                        "description": "The full class name of the domain"
                    },
                    "useInGetter": true,
                    "name": "clazz"
                },
                {
                    "useInConstructor": false,
                    "type": {
                        "type": "Long"
                    },
                    "useInSetter": false,
                    "comment": {
                        "description": "The domain id"
                    },
                    "useInGetter": true,
                    "name": "id"
                },
                {
                    "useInConstructor": false,
                    "type": {
                        "type": "Date"
                    },
                    "useInSetter": false,
                    "comment": {
                        "description": "The date of the domain creation"
                    },
                    "useInGetter": true,
                    "name": "created"
                },
                {
                    "useInConstructor": false,
                    "type": {
                        "type": "Date"
                    },
                    "useInSetter": false,
                    "comment": {
                        "description": "The date of the domain modification"
                    },
                    "useInGetter": true,
                    "name": "updated"
                },
                {
                    "useInConstructor": false,
                    "type": {
                        "type": "Date"
                    },
                    "useInSetter": false,
                    "comment": {
                        "description": "When domain was removed from Cytomine"
                    },
                    "useInGetter": true,
                    "name": "deleted"
                },
                {
                    "useInConstructor": false,
                    "type": {
                        "type": "String"
                    },
                    "useInSetter": false,
                    "comment": {
                        "description": "The algo type based on the class name"
                    },
                    "useInGetter": true,
                    "name": "algoType"
                },
                {
                    "useInConstructor": false,
                    "type": {
                        "type": "Integer"
                    },
                    "useInSetter": true,
                    "comment": {
                        "description": "The algo progression (from 0 to 100)"
                    },
                    "useInGetter": true,
                    "name": "progress"
                },
                {
                    "useInConstructor": false,
                    "type": {
                        "type": "Integer"
                    },
                    "useInSetter": true,
                    "comment": {
                        "description": "The algo status (NOTLAUNCH = 0, INQUEUE = 1, RUNNING = 2,SUCCESS = 3,FAILED = 4,INDETERMINATE = 5,WAIT = 6,PREVIEWED = 7)"
                    },
                    "useInGetter": true,
                    "name": "status"
                },
                {
                    "useInConstructor": false,
                    "type": {
                        "type": "Integer"
                    },
                    "useInSetter": false,
                    "comment": {
                        "description": "Job Indice for this software in this project"
                    },
                    "useInGetter": true,
                    "name": "number"
                },
                {
                    "useInConstructor": false,
                    "type": {
                        "type": "String"
                    },
                    "useInSetter": true,
                    "comment": {
                        "description": "Text comment for the job status"
                    },
                    "useInGetter": true,
                    "name": "statusComment"
                },
                {
                    "useInConstructor": true,
                    "type": {
                        "type": "Long"
                    },
                    "useInSetter": true,
                    "comment": {
                        "description": "The project of the job"
                    },
                    "useInGetter": true,
                    "name": "project"
                },
                {
                    "useInConstructor": true,
                    "type": {
                        "type": "Long"
                    },
                    "useInSetter": true,
                    "comment": {
                        "description": "The software of the job"
                    },
                    "useInGetter": true,
                    "name": "software"
                },
                {
                    "useInConstructor": false,
                    "type": {
                        "type": "String"
                    },
                    "useInSetter": false,
                    "comment": {
                        "description": "The software name of the job"
                    },
                    "useInGetter": true,
                    "name": "softwareName"
                },
                {
                    "useInConstructor": false,
                    "type": {
                        "type": "Double"
                    },
                    "useInSetter": true,
                    "comment": {
                        "description": "Generic field for job rate info. The rate is a quality value about the job works"
                    },
                    "useInGetter": true,
                    "name": "rate"
                },
                {
                    "useInConstructor": false,
                    "type": {
                        "type": "Boolean"
                    },
                    "useInSetter": true,
                    "comment": {
                        "description": "Flag to see if data generate by this job are deleted"
                    },
                    "useInGetter": true,
                    "name": "dataDeleted"
                },
                {
                    "useInConstructor": false,
                    "type": {
                        "type": "String"
                    },
                    "useInSetter": false,
                    "comment": {
                        "description": "The username of the job"
                    },
                    "useInGetter": true,
                    "name": "username"
                },
                {
                    "useInConstructor": false,
                    "type": {
                        "type": "Long"
                    },
                    "useInSetter": false,
                    "comment": {
                        "description": "The user of the job"
                    },
                    "useInGetter": true,
                    "name": "userJob"
                },
                {
                    "useInConstructor": false,
                    "type": {
                        "type": "List"
                    },
                    "useInSetter": false,
                    "comment": {
                        "description": "List of job parameters for this job"
                    },
                    "useInGetter": true,
                    "name": "jobParameters"
                },
                {
                    "useInConstructor": true,
                    "type": {
                        "type": "String"
                    },
                    "useInSetter": true,
                    "comment": {
                        "description": "The template name"
                    },
                    "useInGetter": true,
                    "name": "name"
                }
            ],
            "domainName": "JobTemplate",
            "methods": [
                {
                    "isStatic": false,
                    "isAbstract": false,
                    "type": {
                        "type": "Void"
                    },
                    "queryParameters": [
                        
                    ],
                    "verb": null,
                    "methodParameters": [
                        {
                            "type": {
                                "type": "Long"
                            },
                            "name": "project"
                        },
                        {
                            "type": {
                                "type": "Long"
                            },
                            "name": "software"
                        },
                        {
                            "type": {
                                "type": "String"
                            },
                            "name": "name"
                        }
                    ],
                    "pathParameters": [
                        
                    ],
                    "isPublic": true,
                    "code": {
                        "code": {
                            "JAVA": "\n\t\tthis.project=project;\n\t\tthis.software=software;\n\t\tthis.name=name;\n\n    "
                        }
                    },
                    "allParameters": [
                        {
                            "type": {
                                "type": "Long"
                            },
                            "name": "project"
                        },
                        {
                            "type": {
                                "type": "Long"
                            },
                            "name": "software"
                        },
                        {
                            "type": {
                                "type": "String"
                            },
                            "name": "name"
                        }
                    ],
                    "path": null,
                    "name": "build"
                },
                {
                    "isStatic": false,
                    "isAbstract": false,
                    "type": {
                        "type": "Void"
                    },
                    "queryParameters": [
                        
                    ],
                    "verb": null,
                    "methodParameters": [
                        {
                            "type": {
                                "type": "JSONObject"
                            },
                            "name": "json"
                        }
                    ],
                    "pathParameters": [
                        
                    ],
                    "isPublic": true,
                    "code": {
                        "code": {
                            "JAVA": "\n\t\tthis.clazz =JSONUtils.extractJSONString(json.get(\"class\"));\n\t\tthis.id =JSONUtils.extractJSONLong(json.get(\"id\"));\n\t\tthis.created =JSONUtils.extractJSONDate(json.get(\"created\"));\n\t\tthis.updated =JSONUtils.extractJSONDate(json.get(\"updated\"));\n\t\tthis.deleted =JSONUtils.extractJSONDate(json.get(\"deleted\"));\n\t\tthis.algoType =JSONUtils.extractJSONString(json.get(\"algoType\"));\n\t\tthis.progress =JSONUtils.extractJSONInteger(json.get(\"progress\"));\n\t\tthis.status =JSONUtils.extractJSONInteger(json.get(\"status\"));\n\t\tthis.number =JSONUtils.extractJSONInteger(json.get(\"number\"));\n\t\tthis.statusComment =JSONUtils.extractJSONString(json.get(\"statusComment\"));\n\t\tthis.project =JSONUtils.extractJSONLong(json.get(\"project\"));\n\t\tthis.software =JSONUtils.extractJSONLong(json.get(\"software\"));\n\t\tthis.softwareName =JSONUtils.extractJSONString(json.get(\"softwareName\"));\n\t\tthis.rate =JSONUtils.extractJSONDouble(json.get(\"rate\"));\n\t\tthis.dataDeleted =JSONUtils.extractJSONBoolean(json.get(\"dataDeleted\"));\n\t\tthis.username =JSONUtils.extractJSONString(json.get(\"username\"));\n\t\tthis.userJob =JSONUtils.extractJSONLong(json.get(\"userJob\"));\n\t\tthis.jobParameters =JSONUtils.extractJSONList(json.get(\"jobParameters\"));\n\t\tthis.name =JSONUtils.extractJSONString(json.get(\"name\"));\n\n    "
                        }
                    },
                    "allParameters": [
                        {
                            "type": {
                                "type": "JSONObject"
                            },
                            "name": "json"
                        }
                    ],
                    "path": null,
                    "name": "build"
                },
                {
                    "isStatic": false,
                    "isAbstract": false,
                    "type": {
                        "type": "JSONObject"
                    },
                    "queryParameters": [
                        
                    ],
                    "verb": null,
                    "methodParameters": [
                        
                    ],
                    "pathParameters": [
                        
                    ],
                    "isPublic": true,
                    "code": {
                        "code": {
                            "JAVA": "\n\t\tJSONObject json=new JSONObject();\n\t\tjson.put(\"class\",JSONUtils.formatJSON(this.clazz));\n\t\tjson.put(\"id\",JSONUtils.formatJSON(this.id));\n\t\tjson.put(\"created\",JSONUtils.formatJSON(this.created));\n\t\tjson.put(\"updated\",JSONUtils.formatJSON(this.updated));\n\t\tjson.put(\"deleted\",JSONUtils.formatJSON(this.deleted));\n\t\tjson.put(\"algoType\",JSONUtils.formatJSON(this.algoType));\n\t\tjson.put(\"progress\",JSONUtils.formatJSON(this.progress));\n\t\tjson.put(\"status\",JSONUtils.formatJSON(this.status));\n\t\tjson.put(\"number\",JSONUtils.formatJSON(this.number));\n\t\tjson.put(\"statusComment\",JSONUtils.formatJSON(this.statusComment));\n\t\tjson.put(\"project\",JSONUtils.formatJSON(this.project));\n\t\tjson.put(\"software\",JSONUtils.formatJSON(this.software));\n\t\tjson.put(\"softwareName\",JSONUtils.formatJSON(this.softwareName));\n\t\tjson.put(\"rate\",JSONUtils.formatJSON(this.rate));\n\t\tjson.put(\"dataDeleted\",JSONUtils.formatJSON(this.dataDeleted));\n\t\tjson.put(\"username\",JSONUtils.formatJSON(this.username));\n\t\tjson.put(\"userJob\",JSONUtils.formatJSON(this.userJob));\n\t\tjson.put(\"jobParameters\",JSONUtils.formatJSON(this.jobParameters));\n\t\tjson.put(\"name\",JSONUtils.formatJSON(this.name));\n\n\t\treturn json;\n    "
                        }
                    },
                    "allParameters": [
                        
                    ],
                    "path": null,
                    "name": "toJSON"
                },
                {
                    "isStatic": true,
                    "isAbstract": false,
                    "type": {
                        "type": "JobTemplate"
                    },
                    "queryParameters": [
                        
                    ],
                    "verb": "GET",
                    "methodParameters": [
                        {
                            "type": {
                                "type": "Server"
                            },
                            "name": "server"
                        }
                    ],
                    "pathParameters": [
                        {
                            "type": {
                                "type": "Long"
                            },
                            "name": "id"
                        }
                    ],
                    "isPublic": true,
                    "code": {
                        "code": {
                            "JAVA": "\n\t\tString path = \"/api/jobtemplate/{id}.json?\";\n\t\tpath = path.replace(\"{id}\",id+\"\");\n\n\t\tJSONObject json = server.doGET(path);\n\t\tJobTemplate domain = new JobTemplate();\n\t\tdomain.build(json);\n\t\treturn domain;\n\n    "
                        }
                    },
                    "allParameters": [
                        {
                            "type": {
                                "type": "Server"
                            },
                            "name": "server"
                        },
                        {
                            "type": {
                                "type": "Long"
                            },
                            "name": "id"
                        }
                    ],
                    "path": "/api/jobtemplate/{id}.json",
                    "name": "get"
                },
                {
                    "isStatic": false,
                    "isAbstract": false,
                    "type": {
                        "type": "Void"
                    },
                    "queryParameters": [
                        
                    ],
                    "verb": "POST",
                    "methodParameters": [
                        {
                            "type": {
                                "type": "Server"
                            },
                            "name": "server"
                        }
                    ],
                    "pathParameters": [
                        
                    ],
                    "isPublic": true,
                    "code": {
                        "code": {
                            "JAVA": "\n\t\tString path = \"/api/jobtemplate.{fomat}?\";\n\n\t\tJSONObject json = server.doPOST(path,this.toJSON());\n\n\t\tthis.build((JSONObject)json.get(\"jobtemplate\"));\n\n    "
                        }
                    },
                    "allParameters": [
                        {
                            "type": {
                                "type": "Server"
                            },
                            "name": "server"
                        }
                    ],
                    "path": "/api/jobtemplate.{fomat}",
                    "name": "add"
                },
                {
                    "isStatic": true,
                    "isAbstract": false,
                    "type": {
                        "type": "JobTemplate"
                    },
                    "queryParameters": [
                        {
                            "type": {
                                "type": "Long"
                            },
                            "name": "software"
                        },
                        {
                            "type": {
                                "type": "Integer"
                            },
                            "name": "max"
                        },
                        {
                            "type": {
                                "type": "Integer"
                            },
                            "name": "offset"
                        }
                    ],
                    "verb": "GET",
                    "methodParameters": [
                        {
                            "type": {
                                "type": "Server"
                            },
                            "name": "server"
                        }
                    ],
                    "pathParameters": [
                        {
                            "type": {
                                "type": "Long"
                            },
                            "name": "project"
                        }
                    ],
                    "isPublic": true,
                    "code": {
                        "code": {
                            "JAVA": "\n\t\tthrow new Exception(\"Not yet implemented\");\n    "
                        }
                    },
                    "allParameters": [
                        {
                            "type": {
                                "type": "Server"
                            },
                            "name": "server"
                        },
                        {
                            "type": {
                                "type": "Long"
                            },
                            "name": "project"
                        },
                        {
                            "type": {
                                "type": "Long"
                            },
                            "name": "software"
                        },
                        {
                            "type": {
                                "type": "Integer"
                            },
                            "name": "max"
                        },
                        {
                            "type": {
                                "type": "Integer"
                            },
                            "name": "offset"
                        }
                    ],
                    "path": "/api/project/{project}/jobtemplate.{fomat}",
                    "name": "list"
                },
                {
                    "isStatic": false,
                    "isAbstract": false,
                    "type": {
                        "type": "Void"
                    },
                    "queryParameters": [
                        
                    ],
                    "verb": "DELETE",
                    "methodParameters": [
                        {
                            "type": {
                                "type": "Server"
                            },
                            "name": "server"
                        }
                    ],
                    "pathParameters": [
                        
                    ],
                    "isPublic": true,
                    "code": {
                        "code": {
                            "JAVA": "\n\t\tString path = \"/api/jobtemplate/{id}.json?\";\n\t\tpath = path.replace(\"{id}\",getId()+\"\");\n\n\t\tserver.doDELETE(path);\n\t\tbuild(new JSONObject());\n\n    "
                        }
                    },
                    "allParameters": [
                        {
                            "type": {
                                "type": "Server"
                            },
                            "name": "server"
                        }
                    ],
                    "path": "/api/jobtemplate/{id}.json",
                    "name": "delete"
                },
                {
                    "isStatic": false,
                    "isAbstract": false,
                    "type": {
                        "type": "Void"
                    },
                    "queryParameters": [
                        
                    ],
                    "verb": "PUT",
                    "methodParameters": [
                        {
                            "type": {
                                "type": "Server"
                            },
                            "name": "server"
                        }
                    ],
                    "pathParameters": [
                        
                    ],
                    "isPublic": true,
                    "code": {
                        "code": {
                            "JAVA": "\n\t\tString path = \"/api/jobtemplate/{id}.json?\";\n\n\t\tJSONObject json = server.doPUT(path,this.toJSON());\n\n\t\tthis.build((JSONObject)json.get(\"jobtemplate\"));\n\n    "
                        }
                    },
                    "allParameters": [
                        {
                            "type": {
                                "type": "Server"
                            },
                            "name": "server"
                        }
                    ],
                    "path": "/api/jobtemplate/{id}.json",
                    "name": "edit"
                }
            ],
            "name": "AbstractJobTemplate"
        },
        {
            "fullPackage": "be.cytomine.client.abst",
            "isAbstract": true,
            "comment": {
                "version": "0.1",
                "description": "An sub image from an image instance (sub area, same image transformed,...)",
                "author": "ClientBuilder (Lo\u00EFc Rollus)"
            },
            "fields": [
                {
                    "useInConstructor": false,
                    "type": {
                        "type": "String"
                    },
                    "useInSetter": false,
                    "comment": {
                        "description": "The full class name of the domain"
                    },
                    "useInGetter": true,
                    "name": "clazz"
                },
                {
                    "useInConstructor": false,
                    "type": {
                        "type": "Long"
                    },
                    "useInSetter": false,
                    "comment": {
                        "description": "The domain id"
                    },
                    "useInGetter": true,
                    "name": "id"
                },
                {
                    "useInConstructor": false,
                    "type": {
                        "type": "Date"
                    },
                    "useInSetter": false,
                    "comment": {
                        "description": "The date of the domain creation"
                    },
                    "useInGetter": true,
                    "name": "created"
                },
                {
                    "useInConstructor": false,
                    "type": {
                        "type": "Date"
                    },
                    "useInSetter": false,
                    "comment": {
                        "description": "The date of the domain modification"
                    },
                    "useInGetter": true,
                    "name": "updated"
                },
                {
                    "useInConstructor": false,
                    "type": {
                        "type": "Date"
                    },
                    "useInSetter": false,
                    "comment": {
                        "description": "When domain was removed from Cytomine"
                    },
                    "useInGetter": true,
                    "name": "deleted"
                },
                {
                    "useInConstructor": true,
                    "type": {
                        "type": "Long"
                    },
                    "useInSetter": true,
                    "comment": {
                        "description": "The image linked to the project"
                    },
                    "useInGetter": true,
                    "name": "baseImage"
                },
                {
                    "useInConstructor": true,
                    "type": {
                        "type": "Long"
                    },
                    "useInSetter": true,
                    "comment": {
                        "description": "The project that keeps the image"
                    },
                    "useInGetter": true,
                    "name": "project"
                },
                {
                    "useInConstructor": true,
                    "type": {
                        "type": "Long"
                    },
                    "useInSetter": true,
                    "comment": {
                        "description": "The user that add the image to the project"
                    },
                    "useInGetter": true,
                    "name": "user"
                },
                {
                    "useInConstructor": false,
                    "type": {
                        "type": "String"
                    },
                    "useInSetter": false,
                    "comment": {
                        "description": "Abstract image filename (see Abstract Image)"
                    },
                    "useInGetter": true,
                    "name": "filename"
                },
                {
                    "useInConstructor": false,
                    "type": {
                        "type": "Object"
                    },
                    "useInSetter": true,
                    "comment": {
                        "description": "Undefined"
                    },
                    "useInGetter": true,
                    "name": "extension"
                },
                {
                    "useInConstructor": false,
                    "type": {
                        "type": "String"
                    },
                    "useInSetter": false,
                    "comment": {
                        "description": "Abstract image original filename (see Abstract Image)"
                    },
                    "useInGetter": true,
                    "name": "originalFilename"
                },
                {
                    "useInConstructor": false,
                    "type": {
                        "type": "Long"
                    },
                    "useInSetter": false,
                    "comment": {
                        "description": "Abstract image sample (see Abstract Image)"
                    },
                    "useInGetter": true,
                    "name": "sample"
                },
                {
                    "useInConstructor": false,
                    "type": {
                        "type": "String"
                    },
                    "useInSetter": false,
                    "comment": {
                        "description": "Abstract image path (see Abstract Image)"
                    },
                    "useInGetter": true,
                    "name": "path"
                },
                {
                    "useInConstructor": false,
                    "type": {
                        "type": "String"
                    },
                    "useInSetter": false,
                    "comment": {
                        "description": "Abstract image mime (see Abstract Image)"
                    },
                    "useInGetter": true,
                    "name": "mime"
                },
                {
                    "useInConstructor": false,
                    "type": {
                        "type": "Integer"
                    },
                    "useInSetter": false,
                    "comment": {
                        "description": "Abstract image width (see Abstract Image)"
                    },
                    "useInGetter": true,
                    "name": "width"
                },
                {
                    "useInConstructor": false,
                    "type": {
                        "type": "Integer"
                    },
                    "useInSetter": false,
                    "comment": {
                        "description": "Abstract image height (see Abstract Image)"
                    },
                    "useInGetter": true,
                    "name": "height"
                },
                {
                    "useInConstructor": false,
                    "type": {
                        "type": "Double"
                    },
                    "useInSetter": false,
                    "comment": {
                        "description": "Abstract image resolution (see Abstract Image)"
                    },
                    "useInGetter": true,
                    "name": "resolution"
                },
                {
                    "useInConstructor": false,
                    "type": {
                        "type": "Integer"
                    },
                    "useInSetter": false,
                    "comment": {
                        "description": "Abstract image magnification (see Abstract Image)"
                    },
                    "useInGetter": true,
                    "name": "magnification"
                },
                {
                    "useInConstructor": false,
                    "type": {
                        "type": "Long"
                    },
                    "useInSetter": false,
                    "comment": {
                        "description": "?"
                    },
                    "useInGetter": true,
                    "name": "depth"
                },
                {
                    "useInConstructor": false,
                    "type": {
                        "type": "String"
                    },
                    "useInSetter": false,
                    "comment": {
                        "description": "Abstract image preview (see Abstract Image)"
                    },
                    "useInGetter": true,
                    "name": "preview"
                },
                {
                    "useInConstructor": false,
                    "type": {
                        "type": "String"
                    },
                    "useInSetter": false,
                    "comment": {
                        "description": "Abstract image thumb (see Abstract Image)"
                    },
                    "useInGetter": true,
                    "name": "thumb"
                },
                {
                    "useInConstructor": false,
                    "type": {
                        "type": "Object"
                    },
                    "useInSetter": true,
                    "comment": {
                        "description": "Undefined"
                    },
                    "useInGetter": true,
                    "name": "macro"
                },
                {
                    "useInConstructor": false,
                    "type": {
                        "type": "Long"
                    },
                    "useInSetter": false,
                    "comment": {
                        "description": "The number of user annotation in the image"
                    },
                    "useInGetter": true,
                    "name": "numberOfAnnotations"
                },
                {
                    "useInConstructor": false,
                    "type": {
                        "type": "Long"
                    },
                    "useInSetter": false,
                    "comment": {
                        "description": "The number of job annotation in the image"
                    },
                    "useInGetter": true,
                    "name": "numberOfJobAnnotations"
                },
                {
                    "useInConstructor": false,
                    "type": {
                        "type": "Long"
                    },
                    "useInSetter": false,
                    "comment": {
                        "description": "The number of reviewed annotation in the image"
                    },
                    "useInGetter": true,
                    "name": "numberOfReviewedAnnotations"
                },
                {
                    "useInConstructor": false,
                    "type": {
                        "type": "Date"
                    },
                    "useInSetter": false,
                    "comment": {
                        "description": "The start review date"
                    },
                    "useInGetter": true,
                    "name": "reviewStart"
                },
                {
                    "useInConstructor": false,
                    "type": {
                        "type": "Date"
                    },
                    "useInSetter": false,
                    "comment": {
                        "description": "The stop review date"
                    },
                    "useInGetter": true,
                    "name": "reviewStop"
                },
                {
                    "useInConstructor": false,
                    "type": {
                        "type": "Long"
                    },
                    "useInSetter": false,
                    "comment": {
                        "description": "The user who reviewed (or still reviewing) this image"
                    },
                    "useInGetter": true,
                    "name": "reviewUser"
                },
                {
                    "useInConstructor": false,
                    "type": {
                        "type": "Boolean"
                    },
                    "useInSetter": false,
                    "comment": {
                        "description": "Image has been reviewed"
                    },
                    "useInGetter": true,
                    "name": "reviewed"
                },
                {
                    "useInConstructor": false,
                    "type": {
                        "type": "Boolean"
                    },
                    "useInSetter": false,
                    "comment": {
                        "description": "Image currently reviewed"
                    },
                    "useInGetter": true,
                    "name": "inReview"
                },
                {
                    "useInConstructor": true,
                    "type": {
                        "type": "Long"
                    },
                    "useInSetter": true,
                    "comment": {
                        "description": "The image source for this sub-image"
                    },
                    "useInGetter": true,
                    "name": "parent"
                },
                {
                    "useInConstructor": false,
                    "type": {
                        "type": "Integer"
                    },
                    "useInSetter": true,
                    "comment": {
                        "description": "Top x position of this image on the sub-image"
                    },
                    "useInGetter": true,
                    "name": "x"
                },
                {
                    "useInConstructor": false,
                    "type": {
                        "type": "Integer"
                    },
                    "useInSetter": true,
                    "comment": {
                        "description": "Top y position of this image on the sub-image"
                    },
                    "useInGetter": true,
                    "name": "y"
                }
            ],
            "domainName": "NestedImageInstance",
            "methods": [
                {
                    "isStatic": false,
                    "isAbstract": false,
                    "type": {
                        "type": "Void"
                    },
                    "queryParameters": [
                        
                    ],
                    "verb": null,
                    "methodParameters": [
                        {
                            "type": {
                                "type": "Long"
                            },
                            "name": "baseImage"
                        },
                        {
                            "type": {
                                "type": "Long"
                            },
                            "name": "project"
                        },
                        {
                            "type": {
                                "type": "Long"
                            },
                            "name": "user"
                        },
                        {
                            "type": {
                                "type": "Long"
                            },
                            "name": "parent"
                        }
                    ],
                    "pathParameters": [
                        
                    ],
                    "isPublic": true,
                    "code": {
                        "code": {
                            "JAVA": "\n\t\tthis.baseImage=baseImage;\n\t\tthis.project=project;\n\t\tthis.user=user;\n\t\tthis.parent=parent;\n\n    "
                        }
                    },
                    "allParameters": [
                        {
                            "type": {
                                "type": "Long"
                            },
                            "name": "baseImage"
                        },
                        {
                            "type": {
                                "type": "Long"
                            },
                            "name": "project"
                        },
                        {
                            "type": {
                                "type": "Long"
                            },
                            "name": "user"
                        },
                        {
                            "type": {
                                "type": "Long"
                            },
                            "name": "parent"
                        }
                    ],
                    "path": null,
                    "name": "build"
                },
                {
                    "isStatic": false,
                    "isAbstract": false,
                    "type": {
                        "type": "Void"
                    },
                    "queryParameters": [
                        
                    ],
                    "verb": null,
                    "methodParameters": [
                        {
                            "type": {
                                "type": "JSONObject"
                            },
                            "name": "json"
                        }
                    ],
                    "pathParameters": [
                        
                    ],
                    "isPublic": true,
                    "code": {
                        "code": {
                            "JAVA": "\n\t\tthis.clazz =JSONUtils.extractJSONString(json.get(\"class\"));\n\t\tthis.id =JSONUtils.extractJSONLong(json.get(\"id\"));\n\t\tthis.created =JSONUtils.extractJSONDate(json.get(\"created\"));\n\t\tthis.updated =JSONUtils.extractJSONDate(json.get(\"updated\"));\n\t\tthis.deleted =JSONUtils.extractJSONDate(json.get(\"deleted\"));\n\t\tthis.baseImage =JSONUtils.extractJSONLong(json.get(\"baseImage\"));\n\t\tthis.project =JSONUtils.extractJSONLong(json.get(\"project\"));\n\t\tthis.user =JSONUtils.extractJSONLong(json.get(\"user\"));\n\t\tthis.filename =JSONUtils.extractJSONString(json.get(\"filename\"));\n\t\tthis.extension =JSONUtils.extractJSONObject(json.get(\"extension\"));\n\t\tthis.originalFilename =JSONUtils.extractJSONString(json.get(\"originalFilename\"));\n\t\tthis.sample =JSONUtils.extractJSONLong(json.get(\"sample\"));\n\t\tthis.path =JSONUtils.extractJSONString(json.get(\"path\"));\n\t\tthis.mime =JSONUtils.extractJSONString(json.get(\"mime\"));\n\t\tthis.width =JSONUtils.extractJSONInteger(json.get(\"width\"));\n\t\tthis.height =JSONUtils.extractJSONInteger(json.get(\"height\"));\n\t\tthis.resolution =JSONUtils.extractJSONDouble(json.get(\"resolution\"));\n\t\tthis.magnification =JSONUtils.extractJSONInteger(json.get(\"magnification\"));\n\t\tthis.depth =JSONUtils.extractJSONLong(json.get(\"depth\"));\n\t\tthis.preview =JSONUtils.extractJSONString(json.get(\"preview\"));\n\t\tthis.thumb =JSONUtils.extractJSONString(json.get(\"thumb\"));\n\t\tthis.macro =JSONUtils.extractJSONObject(json.get(\"macro\"));\n\t\tthis.numberOfAnnotations =JSONUtils.extractJSONLong(json.get(\"numberOfAnnotations\"));\n\t\tthis.numberOfJobAnnotations =JSONUtils.extractJSONLong(json.get(\"numberOfJobAnnotations\"));\n\t\tthis.numberOfReviewedAnnotations =JSONUtils.extractJSONLong(json.get(\"numberOfReviewedAnnotations\"));\n\t\tthis.reviewStart =JSONUtils.extractJSONDate(json.get(\"reviewStart\"));\n\t\tthis.reviewStop =JSONUtils.extractJSONDate(json.get(\"reviewStop\"));\n\t\tthis.reviewUser =JSONUtils.extractJSONLong(json.get(\"reviewUser\"));\n\t\tthis.reviewed =JSONUtils.extractJSONBoolean(json.get(\"reviewed\"));\n\t\tthis.inReview =JSONUtils.extractJSONBoolean(json.get(\"inReview\"));\n\t\tthis.parent =JSONUtils.extractJSONLong(json.get(\"parent\"));\n\t\tthis.x =JSONUtils.extractJSONInteger(json.get(\"x\"));\n\t\tthis.y =JSONUtils.extractJSONInteger(json.get(\"y\"));\n\n    "
                        }
                    },
                    "allParameters": [
                        {
                            "type": {
                                "type": "JSONObject"
                            },
                            "name": "json"
                        }
                    ],
                    "path": null,
                    "name": "build"
                },
                {
                    "isStatic": false,
                    "isAbstract": false,
                    "type": {
                        "type": "JSONObject"
                    },
                    "queryParameters": [
                        
                    ],
                    "verb": null,
                    "methodParameters": [
                        
                    ],
                    "pathParameters": [
                        
                    ],
                    "isPublic": true,
                    "code": {
                        "code": {
                            "JAVA": "\n\t\tJSONObject json=new JSONObject();\n\t\tjson.put(\"class\",JSONUtils.formatJSON(this.clazz));\n\t\tjson.put(\"id\",JSONUtils.formatJSON(this.id));\n\t\tjson.put(\"created\",JSONUtils.formatJSON(this.created));\n\t\tjson.put(\"updated\",JSONUtils.formatJSON(this.updated));\n\t\tjson.put(\"deleted\",JSONUtils.formatJSON(this.deleted));\n\t\tjson.put(\"baseImage\",JSONUtils.formatJSON(this.baseImage));\n\t\tjson.put(\"project\",JSONUtils.formatJSON(this.project));\n\t\tjson.put(\"user\",JSONUtils.formatJSON(this.user));\n\t\tjson.put(\"filename\",JSONUtils.formatJSON(this.filename));\n\t\tjson.put(\"extension\",JSONUtils.formatJSON(this.extension));\n\t\tjson.put(\"originalFilename\",JSONUtils.formatJSON(this.originalFilename));\n\t\tjson.put(\"sample\",JSONUtils.formatJSON(this.sample));\n\t\tjson.put(\"path\",JSONUtils.formatJSON(this.path));\n\t\tjson.put(\"mime\",JSONUtils.formatJSON(this.mime));\n\t\tjson.put(\"width\",JSONUtils.formatJSON(this.width));\n\t\tjson.put(\"height\",JSONUtils.formatJSON(this.height));\n\t\tjson.put(\"resolution\",JSONUtils.formatJSON(this.resolution));\n\t\tjson.put(\"magnification\",JSONUtils.formatJSON(this.magnification));\n\t\tjson.put(\"depth\",JSONUtils.formatJSON(this.depth));\n\t\tjson.put(\"preview\",JSONUtils.formatJSON(this.preview));\n\t\tjson.put(\"thumb\",JSONUtils.formatJSON(this.thumb));\n\t\tjson.put(\"macro\",JSONUtils.formatJSON(this.macro));\n\t\tjson.put(\"numberOfAnnotations\",JSONUtils.formatJSON(this.numberOfAnnotations));\n\t\tjson.put(\"numberOfJobAnnotations\",JSONUtils.formatJSON(this.numberOfJobAnnotations));\n\t\tjson.put(\"numberOfReviewedAnnotations\",JSONUtils.formatJSON(this.numberOfReviewedAnnotations));\n\t\tjson.put(\"reviewStart\",JSONUtils.formatJSON(this.reviewStart));\n\t\tjson.put(\"reviewStop\",JSONUtils.formatJSON(this.reviewStop));\n\t\tjson.put(\"reviewUser\",JSONUtils.formatJSON(this.reviewUser));\n\t\tjson.put(\"reviewed\",JSONUtils.formatJSON(this.reviewed));\n\t\tjson.put(\"inReview\",JSONUtils.formatJSON(this.inReview));\n\t\tjson.put(\"parent\",JSONUtils.formatJSON(this.parent));\n\t\tjson.put(\"x\",JSONUtils.formatJSON(this.x));\n\t\tjson.put(\"y\",JSONUtils.formatJSON(this.y));\n\n\t\treturn json;\n    "
                        }
                    },
                    "allParameters": [
                        
                    ],
                    "path": null,
                    "name": "toJSON"
                },
                {
                    "isStatic": true,
                    "isAbstract": false,
                    "type": {
                        "type": "NestedImageInstance"
                    },
                    "queryParameters": [
                        
                    ],
                    "verb": "GET",
                    "methodParameters": [
                        {
                            "type": {
                                "type": "Server"
                            },
                            "name": "server"
                        }
                    ],
                    "pathParameters": [
                        {
                            "type": {
                                "type": "Long"
                            },
                            "name": "id"
                        }
                    ],
                    "isPublic": true,
                    "code": {
                        "code": {
                            "JAVA": "\n\t\tString path = \"/api/imageinstance/{idImage}/nested/{id}.json?\";\n\t\tpath = path.replace(\"{id}\",id+\"\");\n\n\t\tJSONObject json = server.doGET(path);\n\t\tNestedImageInstance domain = new NestedImageInstance();\n\t\tdomain.build(json);\n\t\treturn domain;\n\n    "
                        }
                    },
                    "allParameters": [
                        {
                            "type": {
                                "type": "Server"
                            },
                            "name": "server"
                        },
                        {
                            "type": {
                                "type": "Long"
                            },
                            "name": "id"
                        }
                    ],
                    "path": "/api/imageinstance/{idImage}/nested/{id}.json",
                    "name": "get"
                },
                {
                    "isStatic": true,
                    "isAbstract": false,
                    "type": {
                        "type": "NestedImageInstance"
                    },
                    "queryParameters": [
                        {
                            "type": {
                                "type": "Integer"
                            },
                            "name": "max"
                        },
                        {
                            "type": {
                                "type": "Integer"
                            },
                            "name": "offset"
                        }
                    ],
                    "verb": "GET",
                    "methodParameters": [
                        {
                            "type": {
                                "type": "Server"
                            },
                            "name": "server"
                        }
                    ],
                    "pathParameters": [
                        {
                            "type": {
                                "type": "Long"
                            },
                            "name": "idImage"
                        }
                    ],
                    "isPublic": true,
                    "code": {
                        "code": {
                            "JAVA": "\n\t\tthrow new Exception(\"Not yet implemented\");\n    "
                        }
                    },
                    "allParameters": [
                        {
                            "type": {
                                "type": "Server"
                            },
                            "name": "server"
                        },
                        {
                            "type": {
                                "type": "Long"
                            },
                            "name": "idImage"
                        },
                        {
                            "type": {
                                "type": "Integer"
                            },
                            "name": "max"
                        },
                        {
                            "type": {
                                "type": "Integer"
                            },
                            "name": "offset"
                        }
                    ],
                    "path": "/api/imageinstance/{idImage}/nested.json",
                    "name": "listByImageInstance"
                },
                {
                    "isStatic": false,
                    "isAbstract": false,
                    "type": {
                        "type": "Void"
                    },
                    "queryParameters": [
                        
                    ],
                    "verb": "POST",
                    "methodParameters": [
                        {
                            "type": {
                                "type": "Server"
                            },
                            "name": "server"
                        }
                    ],
                    "pathParameters": [
                        
                    ],
                    "isPublic": true,
                    "code": {
                        "code": {
                            "JAVA": "\n\t\tString path = \"/api/imageinstance/{idImage}/nested.json?\";\n\n\t\tJSONObject json = server.doPOST(path,this.toJSON());\n\n\t\tthis.build((JSONObject)json.get(\"nestedimageinstance\"));\n\n    "
                        }
                    },
                    "allParameters": [
                        {
                            "type": {
                                "type": "Server"
                            },
                            "name": "server"
                        }
                    ],
                    "path": "/api/imageinstance/{idImage}/nested.json",
                    "name": "add"
                },
                {
                    "isStatic": false,
                    "isAbstract": false,
                    "type": {
                        "type": "Void"
                    },
                    "queryParameters": [
                        
                    ],
                    "verb": "DELETE",
                    "methodParameters": [
                        {
                            "type": {
                                "type": "Server"
                            },
                            "name": "server"
                        }
                    ],
                    "pathParameters": [
                        
                    ],
                    "isPublic": true,
                    "code": {
                        "code": {
                            "JAVA": "\n\t\tString path = \"/api/imageinstance/{idImage}/nested/{id}.json?\";\n\t\tpath = path.replace(\"{id}\",getId()+\"\");\n\n\t\tserver.doDELETE(path);\n\t\tbuild(new JSONObject());\n\n    "
                        }
                    },
                    "allParameters": [
                        {
                            "type": {
                                "type": "Server"
                            },
                            "name": "server"
                        }
                    ],
                    "path": "/api/imageinstance/{idImage}/nested/{id}.json",
                    "name": "delete"
                },
                {
                    "isStatic": false,
                    "isAbstract": false,
                    "type": {
                        "type": "Void"
                    },
                    "queryParameters": [
                        
                    ],
                    "verb": "PUT",
                    "methodParameters": [
                        {
                            "type": {
                                "type": "Server"
                            },
                            "name": "server"
                        }
                    ],
                    "pathParameters": [
                        
                    ],
                    "isPublic": true,
                    "code": {
                        "code": {
                            "JAVA": "\n\t\tString path = \"/api/imageinstance/{idImage}/nested/{id}.json?\";\n\n\t\tJSONObject json = server.doPUT(path,this.toJSON());\n\n\t\tthis.build((JSONObject)json.get(\"nestedimageinstance\"));\n\n    "
                        }
                    },
                    "allParameters": [
                        {
                            "type": {
                                "type": "Server"
                            },
                            "name": "server"
                        }
                    ],
                    "path": "/api/imageinstance/{idImage}/nested/{id}.json",
                    "name": "edit"
                }
            ],
            "name": "AbstractNestedImageInstance"
        },
        {
            "fullPackage": "be.cytomine.client.abst",
            "isAbstract": true,
            "comment": {
                "version": "0.1",
                "description": "An ontology is a list of term. Each term may be link to other term with a special relation (parent, synonym,...)",
                "author": "ClientBuilder (Lo\u00EFc Rollus)"
            },
            "fields": [
                {
                    "useInConstructor": false,
                    "type": {
                        "type": "String"
                    },
                    "useInSetter": false,
                    "comment": {
                        "description": "The full class name of the domain"
                    },
                    "useInGetter": true,
                    "name": "clazz"
                },
                {
                    "useInConstructor": false,
                    "type": {
                        "type": "Long"
                    },
                    "useInSetter": false,
                    "comment": {
                        "description": "The domain id"
                    },
                    "useInGetter": true,
                    "name": "id"
                },
                {
                    "useInConstructor": false,
                    "type": {
                        "type": "Date"
                    },
                    "useInSetter": false,
                    "comment": {
                        "description": "The date of the domain creation"
                    },
                    "useInGetter": true,
                    "name": "created"
                },
                {
                    "useInConstructor": false,
                    "type": {
                        "type": "Date"
                    },
                    "useInSetter": false,
                    "comment": {
                        "description": "The date of the domain modification"
                    },
                    "useInGetter": true,
                    "name": "updated"
                },
                {
                    "useInConstructor": false,
                    "type": {
                        "type": "Date"
                    },
                    "useInSetter": false,
                    "comment": {
                        "description": "When domain was removed from Cytomine"
                    },
                    "useInGetter": true,
                    "name": "deleted"
                },
                {
                    "useInConstructor": true,
                    "type": {
                        "type": "String"
                    },
                    "useInSetter": true,
                    "comment": {
                        "description": "The name of the ontology"
                    },
                    "useInGetter": true,
                    "name": "name"
                },
                {
                    "useInConstructor": true,
                    "type": {
                        "type": "Long"
                    },
                    "useInSetter": true,
                    "comment": {
                        "description": "The author of the ontology"
                    },
                    "useInGetter": true,
                    "name": "user"
                },
                {
                    "useInConstructor": false,
                    "type": {
                        "type": "Object"
                    },
                    "useInSetter": true,
                    "comment": {
                        "description": "Undefined"
                    },
                    "useInGetter": true,
                    "name": "title"
                },
                {
                    "useInConstructor": false,
                    "type": {
                        "type": "Object"
                    },
                    "useInSetter": true,
                    "comment": {
                        "description": "Undefined"
                    },
                    "useInGetter": true,
                    "name": "attr"
                },
                {
                    "useInConstructor": false,
                    "type": {
                        "type": "Object"
                    },
                    "useInSetter": true,
                    "comment": {
                        "description": "Undefined"
                    },
                    "useInGetter": true,
                    "name": "data"
                },
                {
                    "useInConstructor": false,
                    "type": {
                        "type": "Object"
                    },
                    "useInSetter": true,
                    "comment": {
                        "description": "Undefined"
                    },
                    "useInGetter": true,
                    "name": "isFolder"
                },
                {
                    "useInConstructor": false,
                    "type": {
                        "type": "Object"
                    },
                    "useInSetter": true,
                    "comment": {
                        "description": "Undefined"
                    },
                    "useInGetter": true,
                    "name": "key"
                },
                {
                    "useInConstructor": false,
                    "type": {
                        "type": "Object"
                    },
                    "useInSetter": true,
                    "comment": {
                        "description": "Undefined"
                    },
                    "useInGetter": true,
                    "name": "hideCheckbox"
                },
                {
                    "useInConstructor": false,
                    "type": {
                        "type": "Object"
                    },
                    "useInSetter": true,
                    "comment": {
                        "description": "Undefined"
                    },
                    "useInGetter": true,
                    "name": "state"
                },
                {
                    "useInConstructor": false,
                    "type": {
                        "type": "Object"
                    },
                    "useInSetter": true,
                    "comment": {
                        "description": "Undefined"
                    },
                    "useInGetter": true,
                    "name": "projects"
                },
                {
                    "useInConstructor": false,
                    "type": {
                        "type": "Map"
                    },
                    "useInSetter": false,
                    "comment": {
                        "description": "Term Tree"
                    },
                    "useInGetter": true,
                    "name": "children"
                }
            ],
            "domainName": "Ontology",
            "methods": [
                {
                    "isStatic": false,
                    "isAbstract": false,
                    "type": {
                        "type": "Void"
                    },
                    "queryParameters": [
                        
                    ],
                    "verb": null,
                    "methodParameters": [
                        {
                            "type": {
                                "type": "String"
                            },
                            "name": "name"
                        },
                        {
                            "type": {
                                "type": "Long"
                            },
                            "name": "user"
                        }
                    ],
                    "pathParameters": [
                        
                    ],
                    "isPublic": true,
                    "code": {
                        "code": {
                            "JAVA": "\n\t\tthis.name=name;\n\t\tthis.user=user;\n\n    "
                        }
                    },
                    "allParameters": [
                        {
                            "type": {
                                "type": "String"
                            },
                            "name": "name"
                        },
                        {
                            "type": {
                                "type": "Long"
                            },
                            "name": "user"
                        }
                    ],
                    "path": null,
                    "name": "build"
                },
                {
                    "isStatic": false,
                    "isAbstract": false,
                    "type": {
                        "type": "Void"
                    },
                    "queryParameters": [
                        
                    ],
                    "verb": null,
                    "methodParameters": [
                        {
                            "type": {
                                "type": "JSONObject"
                            },
                            "name": "json"
                        }
                    ],
                    "pathParameters": [
                        
                    ],
                    "isPublic": true,
                    "code": {
                        "code": {
                            "JAVA": "\n\t\tthis.clazz =JSONUtils.extractJSONString(json.get(\"class\"));\n\t\tthis.id =JSONUtils.extractJSONLong(json.get(\"id\"));\n\t\tthis.created =JSONUtils.extractJSONDate(json.get(\"created\"));\n\t\tthis.updated =JSONUtils.extractJSONDate(json.get(\"updated\"));\n\t\tthis.deleted =JSONUtils.extractJSONDate(json.get(\"deleted\"));\n\t\tthis.name =JSONUtils.extractJSONString(json.get(\"name\"));\n\t\tthis.user =JSONUtils.extractJSONLong(json.get(\"user\"));\n\t\tthis.title =JSONUtils.extractJSONObject(json.get(\"title\"));\n\t\tthis.attr =JSONUtils.extractJSONObject(json.get(\"attr\"));\n\t\tthis.data =JSONUtils.extractJSONObject(json.get(\"data\"));\n\t\tthis.isFolder =JSONUtils.extractJSONObject(json.get(\"isFolder\"));\n\t\tthis.key =JSONUtils.extractJSONObject(json.get(\"key\"));\n\t\tthis.hideCheckbox =JSONUtils.extractJSONObject(json.get(\"hideCheckbox\"));\n\t\tthis.state =JSONUtils.extractJSONObject(json.get(\"state\"));\n\t\tthis.projects =JSONUtils.extractJSONObject(json.get(\"projects\"));\n\t\tthis.children =JSONUtils.extractJSONMap(json.get(\"children\"));\n\n    "
                        }
                    },
                    "allParameters": [
                        {
                            "type": {
                                "type": "JSONObject"
                            },
                            "name": "json"
                        }
                    ],
                    "path": null,
                    "name": "build"
                },
                {
                    "isStatic": false,
                    "isAbstract": false,
                    "type": {
                        "type": "JSONObject"
                    },
                    "queryParameters": [
                        
                    ],
                    "verb": null,
                    "methodParameters": [
                        
                    ],
                    "pathParameters": [
                        
                    ],
                    "isPublic": true,
                    "code": {
                        "code": {
                            "JAVA": "\n\t\tJSONObject json=new JSONObject();\n\t\tjson.put(\"class\",JSONUtils.formatJSON(this.clazz));\n\t\tjson.put(\"id\",JSONUtils.formatJSON(this.id));\n\t\tjson.put(\"created\",JSONUtils.formatJSON(this.created));\n\t\tjson.put(\"updated\",JSONUtils.formatJSON(this.updated));\n\t\tjson.put(\"deleted\",JSONUtils.formatJSON(this.deleted));\n\t\tjson.put(\"name\",JSONUtils.formatJSON(this.name));\n\t\tjson.put(\"user\",JSONUtils.formatJSON(this.user));\n\t\tjson.put(\"title\",JSONUtils.formatJSON(this.title));\n\t\tjson.put(\"attr\",JSONUtils.formatJSON(this.attr));\n\t\tjson.put(\"data\",JSONUtils.formatJSON(this.data));\n\t\tjson.put(\"isFolder\",JSONUtils.formatJSON(this.isFolder));\n\t\tjson.put(\"key\",JSONUtils.formatJSON(this.key));\n\t\tjson.put(\"hideCheckbox\",JSONUtils.formatJSON(this.hideCheckbox));\n\t\tjson.put(\"state\",JSONUtils.formatJSON(this.state));\n\t\tjson.put(\"projects\",JSONUtils.formatJSON(this.projects));\n\t\tjson.put(\"children\",JSONUtils.formatJSON(this.children));\n\n\t\treturn json;\n    "
                        }
                    },
                    "allParameters": [
                        
                    ],
                    "path": null,
                    "name": "toJSON"
                },
                {
                    "isStatic": true,
                    "isAbstract": false,
                    "type": {
                        "type": "Ontology"
                    },
                    "queryParameters": [
                        
                    ],
                    "verb": "GET",
                    "methodParameters": [
                        {
                            "type": {
                                "type": "Server"
                            },
                            "name": "server"
                        }
                    ],
                    "pathParameters": [
                        {
                            "type": {
                                "type": "Long"
                            },
                            "name": "id"
                        }
                    ],
                    "isPublic": true,
                    "code": {
                        "code": {
                            "JAVA": "\n\t\tString path = \"/api/ontology/{id}.json?\";\n\t\tpath = path.replace(\"{id}\",id+\"\");\n\n\t\tJSONObject json = server.doGET(path);\n\t\tOntology domain = new Ontology();\n\t\tdomain.build(json);\n\t\treturn domain;\n\n    "
                        }
                    },
                    "allParameters": [
                        {
                            "type": {
                                "type": "Server"
                            },
                            "name": "server"
                        },
                        {
                            "type": {
                                "type": "Long"
                            },
                            "name": "id"
                        }
                    ],
                    "path": "/api/ontology/{id}.json",
                    "name": "get"
                },
                {
                    "isStatic": false,
                    "isAbstract": false,
                    "type": {
                        "type": "Void"
                    },
                    "queryParameters": [
                        
                    ],
                    "verb": "POST",
                    "methodParameters": [
                        {
                            "type": {
                                "type": "Server"
                            },
                            "name": "server"
                        }
                    ],
                    "pathParameters": [
                        
                    ],
                    "isPublic": true,
                    "code": {
                        "code": {
                            "JAVA": "\n\t\tString path = \"/api/ontology.json?\";\n\n\t\tJSONObject json = server.doPOST(path,this.toJSON());\n\n\t\tthis.build((JSONObject)json.get(\"ontology\"));\n\n    "
                        }
                    },
                    "allParameters": [
                        {
                            "type": {
                                "type": "Server"
                            },
                            "name": "server"
                        }
                    ],
                    "path": "/api/ontology.json",
                    "name": "add"
                },
                {
                    "isStatic": true,
                    "isAbstract": false,
                    "type": {
                        "type": "List"
                    },
                    "queryParameters": [
                        {
                            "type": {
                                "type": "Boolean"
                            },
                            "name": "light"
                        }
                    ],
                    "verb": "GET",
                    "methodParameters": [
                        {
                            "type": {
                                "type": "Server"
                            },
                            "name": "server"
                        }
                    ],
                    "pathParameters": [
                        
                    ],
                    "isPublic": true,
                    "code": {
                        "code": {
                            "JAVA": "\n\t\tString path = \"/api/ontology.json?\";\n\t\tpath = path + \"&light=\" + light;\n\n\t\tJSONArray json = server.doGETList(path);\n\t\tList<Ontology> domains = new ArrayList<Ontology>();\n\t\tfor(int i=0;i<json.size();i++) {\n\t\t\tOntology domain = new Ontology();\n\t\t\tdomain.build((JSONObject)json.get(i));\n\t\t\t domains.add(domain);\n\t\t }\n\t\treturn domains;\n\n    "
                        }
                    },
                    "allParameters": [
                        {
                            "type": {
                                "type": "Server"
                            },
                            "name": "server"
                        },
                        {
                            "type": {
                                "type": "Boolean"
                            },
                            "name": "light"
                        }
                    ],
                    "path": "/api/ontology.json",
                    "name": "list"
                },
                {
                    "isStatic": true,
                    "isAbstract": false,
                    "type": {
                        "type": "List"
                    },
                    "queryParameters": [
                        {
                            "type": {
                                "type": "Boolean"
                            },
                            "name": "light"
                        },
                        {
                            "type": {
                                "type": "Integer"
                            },
                            "name": "max"
                        },
                        {
                            "type": {
                                "type": "Integer"
                            },
                            "name": "offset"
                        }
                    ],
                    "verb": "GET",
                    "methodParameters": [
                        {
                            "type": {
                                "type": "Server"
                            },
                            "name": "server"
                        }
                    ],
                    "pathParameters": [
                        
                    ],
                    "isPublic": true,
                    "code": {
                        "code": {
                            "JAVA": "\n\t\tString path = \"/api/ontology.json?\";\n\t\tpath = path + \"&light=\" + light;\n\t\tpath = path + \"&max=\" + max;\n\t\tpath = path + \"&offset=\" + offset;\n\n\t\tJSONArray json = server.doGETList(path);\n\t\tList<Ontology> domains = new ArrayList<Ontology>();\n\t\tfor(int i=0;i<json.size();i++) {\n\t\t\tOntology domain = new Ontology();\n\t\t\tdomain.build((JSONObject)json.get(i));\n\t\t\t domains.add(domain);\n\t\t }\n\t\treturn domains;\n\n    "
                        }
                    },
                    "allParameters": [
                        {
                            "type": {
                                "type": "Server"
                            },
                            "name": "server"
                        },
                        {
                            "type": {
                                "type": "Boolean"
                            },
                            "name": "light"
                        },
                        {
                            "type": {
                                "type": "Integer"
                            },
                            "name": "max"
                        },
                        {
                            "type": {
                                "type": "Integer"
                            },
                            "name": "offset"
                        }
                    ],
                    "path": "/api/ontology.json",
                    "name": "list"
                },
                {
                    "isStatic": false,
                    "isAbstract": false,
                    "type": {
                        "type": "Void"
                    },
                    "queryParameters": [
                        
                    ],
                    "verb": "DELETE",
                    "methodParameters": [
                        {
                            "type": {
                                "type": "Server"
                            },
                            "name": "server"
                        }
                    ],
                    "pathParameters": [
                        
                    ],
                    "isPublic": true,
                    "code": {
                        "code": {
                            "JAVA": "\n\t\tString path = \"/api/ontology/{id}.json?\";\n\t\tpath = path.replace(\"{id}\",getId()+\"\");\n\t\tpath = path.replace(\"{task}\",getTask()+\"\");\n\n\t\tserver.doDELETE(path);\n\t\tbuild(new JSONObject());\n\n    "
                        }
                    },
                    "allParameters": [
                        {
                            "type": {
                                "type": "Server"
                            },
                            "name": "server"
                        }
                    ],
                    "path": "/api/ontology/{id}.json",
                    "name": "delete"
                },
                {
                    "isStatic": false,
                    "isAbstract": false,
                    "type": {
                        "type": "Void"
                    },
                    "queryParameters": [
                        
                    ],
                    "verb": "PUT",
                    "methodParameters": [
                        {
                            "type": {
                                "type": "Server"
                            },
                            "name": "server"
                        }
                    ],
                    "pathParameters": [
                        
                    ],
                    "isPublic": true,
                    "code": {
                        "code": {
                            "JAVA": "\n\t\tString path = \"/api/ontology/{id}.json?\";\n\t\tpath = path.replace(\"{id}\",getId()+\"\");\n\n\t\tJSONObject json = server.doPUT(path,this.toJSON());\n\n\t\tthis.build((JSONObject)json.get(\"ontology\"));\n\n    "
                        }
                    },
                    "allParameters": [
                        {
                            "type": {
                                "type": "Server"
                            },
                            "name": "server"
                        }
                    ],
                    "path": "/api/ontology/{id}.json",
                    "name": "edit"
                }
            ],
            "name": "AbstractOntology"
        },
        {
            "fullPackage": "be.cytomine.client.abst",
            "isAbstract": true,
            "comment": {
                "version": "0.1",
                "description": "A project is the main cytomine domain, its a workspace to store images, annotations,...",
                "author": "ClientBuilder (Lo\u00EFc Rollus)"
            },
            "fields": [
                {
                    "useInConstructor": false,
                    "type": {
                        "type": "String"
                    },
                    "useInSetter": false,
                    "comment": {
                        "description": "The full class name of the domain"
                    },
                    "useInGetter": true,
                    "name": "clazz"
                },
                {
                    "useInConstructor": false,
                    "type": {
                        "type": "Long"
                    },
                    "useInSetter": false,
                    "comment": {
                        "description": "The domain id"
                    },
                    "useInGetter": true,
                    "name": "id"
                },
                {
                    "useInConstructor": false,
                    "type": {
                        "type": "Date"
                    },
                    "useInSetter": false,
                    "comment": {
                        "description": "The date of the domain creation"
                    },
                    "useInGetter": true,
                    "name": "created"
                },
                {
                    "useInConstructor": false,
                    "type": {
                        "type": "Date"
                    },
                    "useInSetter": false,
                    "comment": {
                        "description": "The date of the domain modification"
                    },
                    "useInGetter": true,
                    "name": "updated"
                },
                {
                    "useInConstructor": false,
                    "type": {
                        "type": "Date"
                    },
                    "useInSetter": false,
                    "comment": {
                        "description": "When domain was removed from Cytomine"
                    },
                    "useInGetter": true,
                    "name": "deleted"
                },
                {
                    "useInConstructor": true,
                    "type": {
                        "type": "String"
                    },
                    "useInSetter": true,
                    "comment": {
                        "description": "The name of the project"
                    },
                    "useInGetter": true,
                    "name": "name"
                },
                {
                    "useInConstructor": true,
                    "type": {
                        "type": "Long"
                    },
                    "useInSetter": true,
                    "comment": {
                        "description": "The ontology identifier of the project"
                    },
                    "useInGetter": true,
                    "name": "ontology"
                },
                {
                    "useInConstructor": false,
                    "type": {
                        "type": "String"
                    },
                    "useInSetter": false,
                    "comment": {
                        "description": "The ontology name for the project"
                    },
                    "useInGetter": true,
                    "name": "ontologyName"
                },
                {
                    "useInConstructor": false,
                    "type": {
                        "type": "Long"
                    },
                    "useInSetter": true,
                    "comment": {
                        "description": "The discipline identifier of the project"
                    },
                    "useInGetter": true,
                    "name": "discipline"
                },
                {
                    "useInConstructor": false,
                    "type": {
                        "type": "Boolean"
                    },
                    "useInSetter": true,
                    "comment": {
                        "description": "Blind mode (if true, image filename are hidden)"
                    },
                    "useInGetter": true,
                    "name": "blindMode"
                },
                {
                    "useInConstructor": false,
                    "type": {
                        "type": "String"
                    },
                    "useInSetter": false,
                    "comment": {
                        "description": "The discipline name for the project"
                    },
                    "useInGetter": true,
                    "name": "disciplineName"
                },
                {
                    "useInConstructor": false,
                    "type": {
                        "type": "Long"
                    },
                    "useInSetter": false,
                    "comment": {
                        "description": "The number of samples in the project"
                    },
                    "useInGetter": true,
                    "name": "numberOfSlides"
                },
                {
                    "useInConstructor": false,
                    "type": {
                        "type": "Long"
                    },
                    "useInSetter": false,
                    "comment": {
                        "description": "Number of image in the project"
                    },
                    "useInGetter": true,
                    "name": "numberOfImages"
                },
                {
                    "useInConstructor": false,
                    "type": {
                        "type": "Long"
                    },
                    "useInSetter": false,
                    "comment": {
                        "description": "Number of annotations created by human user in the project"
                    },
                    "useInGetter": true,
                    "name": "numberOfAnnotations"
                },
                {
                    "useInConstructor": false,
                    "type": {
                        "type": "Long"
                    },
                    "useInSetter": false,
                    "comment": {
                        "description": "Number of annotations created by software in the project"
                    },
                    "useInGetter": true,
                    "name": "numberOfJobAnnotations"
                },
                {
                    "useInConstructor": false,
                    "type": {
                        "type": "List"
                    },
                    "useInSetter": true,
                    "comment": {
                        "description": "List all projects id that are used for retrieval search (if retrievalDisable = false and retrievalAllOntology = false)"
                    },
                    "useInGetter": true,
                    "name": "retrievalProjects"
                },
                {
                    "useInConstructor": false,
                    "type": {
                        "type": "Long"
                    },
                    "useInSetter": false,
                    "comment": {
                        "description": "Number of annotations validated in the project"
                    },
                    "useInGetter": true,
                    "name": "numberOfReviewedAnnotations"
                },
                {
                    "useInConstructor": true,
                    "type": {
                        "type": "Boolean"
                    },
                    "useInSetter": true,
                    "comment": {
                        "description": "If true, don't suggest similar annotations"
                    },
                    "useInGetter": true,
                    "name": "retrievalDisable"
                },
                {
                    "useInConstructor": true,
                    "type": {
                        "type": "Boolean"
                    },
                    "useInSetter": true,
                    "comment": {
                        "description": "If true, search similar annotations on all project that share the same ontology"
                    },
                    "useInGetter": true,
                    "name": "retrievalAllOntology"
                },
                {
                    "useInConstructor": false,
                    "type": {
                        "type": "Boolean"
                    },
                    "useInSetter": true,
                    "comment": {
                        "description": "If true, project is closed"
                    },
                    "useInGetter": true,
                    "name": "isClosed"
                },
                {
                    "useInConstructor": false,
                    "type": {
                        "type": "Boolean"
                    },
                    "useInSetter": true,
                    "comment": {
                        "description": "If true, project is in read only mode"
                    },
                    "useInGetter": true,
                    "name": "isReadOnly"
                },
                {
                    "useInConstructor": false,
                    "type": {
                        "type": "Boolean"
                    },
                    "useInSetter": true,
                    "comment": {
                        "description": "If true, an user (which is not an administrator of the project) cannot see others users layers"
                    },
                    "useInGetter": true,
                    "name": "hideUsersLayers"
                },
                {
                    "useInConstructor": false,
                    "type": {
                        "type": "Boolean"
                    },
                    "useInSetter": true,
                    "comment": {
                        "description": "If true, an user (which is not an administrator of the project) cannot see admins layers"
                    },
                    "useInGetter": true,
                    "name": "hideAdminsLayers"
                },
                {
                    "useInConstructor": true,
                    "type": {
                        "type": "List"
                    },
                    "useInSetter": true,
                    "comment": {
                        "description": "Admins id that will be in the project"
                    },
                    "useInGetter": false,
                    "name": "admins"
                },
                {
                    "useInConstructor": true,
                    "type": {
                        "type": "List"
                    },
                    "useInSetter": true,
                    "comment": {
                        "description": "Users id that will be in the project"
                    },
                    "useInGetter": false,
                    "name": "users"
                }
            ],
            "domainName": "Project",
            "methods": [
                {
                    "isStatic": false,
                    "isAbstract": false,
                    "type": {
                        "type": "Void"
                    },
                    "queryParameters": [
                        
                    ],
                    "verb": null,
                    "methodParameters": [
                        {
                            "type": {
                                "type": "String"
                            },
                            "name": "name"
                        },
                        {
                            "type": {
                                "type": "Long"
                            },
                            "name": "ontology"
                        },
                        {
                            "type": {
                                "type": "Boolean"
                            },
                            "name": "retrievalDisable"
                        },
                        {
                            "type": {
                                "type": "Boolean"
                            },
                            "name": "retrievalAllOntology"
                        },
                        {
                            "type": {
                                "type": "List"
                            },
                            "name": "admins"
                        },
                        {
                            "type": {
                                "type": "List"
                            },
                            "name": "users"
                        }
                    ],
                    "pathParameters": [
                        
                    ],
                    "isPublic": true,
                    "code": {
                        "code": {
                            "JAVA": "\n\t\tthis.name=name;\n\t\tthis.ontology=ontology;\n\t\tthis.retrievalDisable=retrievalDisable;\n\t\tthis.retrievalAllOntology=retrievalAllOntology;\n\t\tthis.admins=admins;\n\t\tthis.users=users;\n\n    "
                        }
                    },
                    "allParameters": [
                        {
                            "type": {
                                "type": "String"
                            },
                            "name": "name"
                        },
                        {
                            "type": {
                                "type": "Long"
                            },
                            "name": "ontology"
                        },
                        {
                            "type": {
                                "type": "Boolean"
                            },
                            "name": "retrievalDisable"
                        },
                        {
                            "type": {
                                "type": "Boolean"
                            },
                            "name": "retrievalAllOntology"
                        },
                        {
                            "type": {
                                "type": "List"
                            },
                            "name": "admins"
                        },
                        {
                            "type": {
                                "type": "List"
                            },
                            "name": "users"
                        }
                    ],
                    "path": null,
                    "name": "build"
                },
                {
                    "isStatic": false,
                    "isAbstract": false,
                    "type": {
                        "type": "Void"
                    },
                    "queryParameters": [
                        
                    ],
                    "verb": null,
                    "methodParameters": [
                        {
                            "type": {
                                "type": "JSONObject"
                            },
                            "name": "json"
                        }
                    ],
                    "pathParameters": [
                        
                    ],
                    "isPublic": true,
                    "code": {
                        "code": {
                            "JAVA": "\n\t\tthis.clazz =JSONUtils.extractJSONString(json.get(\"class\"));\n\t\tthis.id =JSONUtils.extractJSONLong(json.get(\"id\"));\n\t\tthis.created =JSONUtils.extractJSONDate(json.get(\"created\"));\n\t\tthis.updated =JSONUtils.extractJSONDate(json.get(\"updated\"));\n\t\tthis.deleted =JSONUtils.extractJSONDate(json.get(\"deleted\"));\n\t\tthis.name =JSONUtils.extractJSONString(json.get(\"name\"));\n\t\tthis.ontology =JSONUtils.extractJSONLong(json.get(\"ontology\"));\n\t\tthis.ontologyName =JSONUtils.extractJSONString(json.get(\"ontologyName\"));\n\t\tthis.discipline =JSONUtils.extractJSONLong(json.get(\"discipline\"));\n\t\tthis.blindMode =JSONUtils.extractJSONBoolean(json.get(\"blindMode\"));\n\t\tthis.disciplineName =JSONUtils.extractJSONString(json.get(\"disciplineName\"));\n\t\tthis.numberOfSlides =JSONUtils.extractJSONLong(json.get(\"numberOfSlides\"));\n\t\tthis.numberOfImages =JSONUtils.extractJSONLong(json.get(\"numberOfImages\"));\n\t\tthis.numberOfAnnotations =JSONUtils.extractJSONLong(json.get(\"numberOfAnnotations\"));\n\t\tthis.numberOfJobAnnotations =JSONUtils.extractJSONLong(json.get(\"numberOfJobAnnotations\"));\n\t\tthis.retrievalProjects =JSONUtils.extractJSONList(json.get(\"retrievalProjects\"));\n\t\tthis.numberOfReviewedAnnotations =JSONUtils.extractJSONLong(json.get(\"numberOfReviewedAnnotations\"));\n\t\tthis.retrievalDisable =JSONUtils.extractJSONBoolean(json.get(\"retrievalDisable\"));\n\t\tthis.retrievalAllOntology =JSONUtils.extractJSONBoolean(json.get(\"retrievalAllOntology\"));\n\t\tthis.isClosed =JSONUtils.extractJSONBoolean(json.get(\"isClosed\"));\n\t\tthis.isReadOnly =JSONUtils.extractJSONBoolean(json.get(\"isReadOnly\"));\n\t\tthis.hideUsersLayers =JSONUtils.extractJSONBoolean(json.get(\"hideUsersLayers\"));\n\t\tthis.hideAdminsLayers =JSONUtils.extractJSONBoolean(json.get(\"hideAdminsLayers\"));\n\t\tthis.admins =JSONUtils.extractJSONList(json.get(\"admins\"));\n\t\tthis.users =JSONUtils.extractJSONList(json.get(\"users\"));\n\n    "
                        }
                    },
                    "allParameters": [
                        {
                            "type": {
                                "type": "JSONObject"
                            },
                            "name": "json"
                        }
                    ],
                    "path": null,
                    "name": "build"
                },
                {
                    "isStatic": false,
                    "isAbstract": false,
                    "type": {
                        "type": "JSONObject"
                    },
                    "queryParameters": [
                        
                    ],
                    "verb": null,
                    "methodParameters": [
                        
                    ],
                    "pathParameters": [
                        
                    ],
                    "isPublic": true,
                    "code": {
                        "code": {
                            "JAVA": "\n\t\tJSONObject json=new JSONObject();\n\t\tjson.put(\"class\",JSONUtils.formatJSON(this.clazz));\n\t\tjson.put(\"id\",JSONUtils.formatJSON(this.id));\n\t\tjson.put(\"created\",JSONUtils.formatJSON(this.created));\n\t\tjson.put(\"updated\",JSONUtils.formatJSON(this.updated));\n\t\tjson.put(\"deleted\",JSONUtils.formatJSON(this.deleted));\n\t\tjson.put(\"name\",JSONUtils.formatJSON(this.name));\n\t\tjson.put(\"ontology\",JSONUtils.formatJSON(this.ontology));\n\t\tjson.put(\"ontologyName\",JSONUtils.formatJSON(this.ontologyName));\n\t\tjson.put(\"discipline\",JSONUtils.formatJSON(this.discipline));\n\t\tjson.put(\"blindMode\",JSONUtils.formatJSON(this.blindMode));\n\t\tjson.put(\"disciplineName\",JSONUtils.formatJSON(this.disciplineName));\n\t\tjson.put(\"numberOfSlides\",JSONUtils.formatJSON(this.numberOfSlides));\n\t\tjson.put(\"numberOfImages\",JSONUtils.formatJSON(this.numberOfImages));\n\t\tjson.put(\"numberOfAnnotations\",JSONUtils.formatJSON(this.numberOfAnnotations));\n\t\tjson.put(\"numberOfJobAnnotations\",JSONUtils.formatJSON(this.numberOfJobAnnotations));\n\t\tjson.put(\"retrievalProjects\",JSONUtils.formatJSON(this.retrievalProjects));\n\t\tjson.put(\"numberOfReviewedAnnotations\",JSONUtils.formatJSON(this.numberOfReviewedAnnotations));\n\t\tjson.put(\"retrievalDisable\",JSONUtils.formatJSON(this.retrievalDisable));\n\t\tjson.put(\"retrievalAllOntology\",JSONUtils.formatJSON(this.retrievalAllOntology));\n\t\tjson.put(\"isClosed\",JSONUtils.formatJSON(this.isClosed));\n\t\tjson.put(\"isReadOnly\",JSONUtils.formatJSON(this.isReadOnly));\n\t\tjson.put(\"hideUsersLayers\",JSONUtils.formatJSON(this.hideUsersLayers));\n\t\tjson.put(\"hideAdminsLayers\",JSONUtils.formatJSON(this.hideAdminsLayers));\n\n\t\treturn json;\n    "
                        }
                    },
                    "allParameters": [
                        
                    ],
                    "path": null,
                    "name": "toJSON"
                },
                {
                    "isStatic": true,
                    "isAbstract": false,
                    "type": {
                        "type": "Project"
                    },
                    "queryParameters": [
                        
                    ],
                    "verb": "GET",
                    "methodParameters": [
                        {
                            "type": {
                                "type": "Server"
                            },
                            "name": "server"
                        }
                    ],
                    "pathParameters": [
                        {
                            "type": {
                                "type": "Long"
                            },
                            "name": "id"
                        }
                    ],
                    "isPublic": true,
                    "code": {
                        "code": {
                            "JAVA": "\n\t\tString path = \"/api/project/{id}.json?\";\n\t\tpath = path.replace(\"{id}\",id+\"\");\n\n\t\tJSONObject json = server.doGET(path);\n\t\tProject domain = new Project();\n\t\tdomain.build(json);\n\t\treturn domain;\n\n    "
                        }
                    },
                    "allParameters": [
                        {
                            "type": {
                                "type": "Server"
                            },
                            "name": "server"
                        },
                        {
                            "type": {
                                "type": "Long"
                            },
                            "name": "id"
                        }
                    ],
                    "path": "/api/project/{id}.json",
                    "name": "get"
                },
                {
                    "isStatic": true,
                    "isAbstract": false,
                    "type": {
                        "type": "CommandHistory"
                    },
                    "queryParameters": [
                        {
                            "type": {
                                "type": "Integer"
                            },
                            "name": "max"
                        },
                        {
                            "type": {
                                "type": "Integer"
                            },
                            "name": "offset"
                        }
                    ],
                    "verb": "GET",
                    "methodParameters": [
                        {
                            "type": {
                                "type": "Server"
                            },
                            "name": "server"
                        }
                    ],
                    "pathParameters": [
                        {
                            "type": {
                                "type": "Long"
                            },
                            "name": "id"
                        }
                    ],
                    "isPublic": true,
                    "code": {
                        "code": {
                            "JAVA": "\n\t\tthrow new Exception(\"Not yet implemented\");\n    "
                        }
                    },
                    "allParameters": [
                        {
                            "type": {
                                "type": "Server"
                            },
                            "name": "server"
                        },
                        {
                            "type": {
                                "type": "Long"
                            },
                            "name": "id"
                        },
                        {
                            "type": {
                                "type": "Integer"
                            },
                            "name": "max"
                        },
                        {
                            "type": {
                                "type": "Integer"
                            },
                            "name": "offset"
                        }
                    ],
                    "path": "/api/project/{id}/last/{max}.json",
                    "name": "lastAction"
                },
                {
                    "isStatic": true,
                    "isAbstract": false,
                    "type": {
                        "type": "List"
                    },
                    "queryParameters": [
                        
                    ],
                    "verb": "GET",
                    "methodParameters": [
                        {
                            "type": {
                                "type": "Server"
                            },
                            "name": "server"
                        }
                    ],
                    "pathParameters": [
                        
                    ],
                    "isPublic": true,
                    "code": {
                        "code": {
                            "JAVA": "\n\t\tString path = \"/api/project/method/lastopened.json?\";\n\n\t\tJSONArray json = server.doGETList(path);\n\t\tList<Project> domains = new ArrayList<Project>();\n\t\tfor(int i=0;i<json.size();i++) {\n\t\t\tProject domain = new Project();\n\t\t\tdomain.build((JSONObject)json.get(i));\n\t\t\t domains.add(domain);\n\t\t }\n\t\treturn domains;\n\n    "
                        }
                    },
                    "allParameters": [
                        {
                            "type": {
                                "type": "Server"
                            },
                            "name": "server"
                        }
                    ],
                    "path": "/api/project/method/lastopened.json",
                    "name": "listLastOpened"
                },
                {
                    "isStatic": true,
                    "isAbstract": false,
                    "type": {
                        "type": "List"
                    },
                    "queryParameters": [
                        {
                            "type": {
                                "type": "Integer"
                            },
                            "name": "max"
                        },
                        {
                            "type": {
                                "type": "Integer"
                            },
                            "name": "offset"
                        }
                    ],
                    "verb": "GET",
                    "methodParameters": [
                        {
                            "type": {
                                "type": "Server"
                            },
                            "name": "server"
                        }
                    ],
                    "pathParameters": [
                        
                    ],
                    "isPublic": true,
                    "code": {
                        "code": {
                            "JAVA": "\n\t\tString path = \"/api/project/method/lastopened.json?\";\n\t\tpath = path + \"&max=\" + max;\n\t\tpath = path + \"&offset=\" + offset;\n\n\t\tJSONArray json = server.doGETList(path);\n\t\tList<Project> domains = new ArrayList<Project>();\n\t\tfor(int i=0;i<json.size();i++) {\n\t\t\tProject domain = new Project();\n\t\t\tdomain.build((JSONObject)json.get(i));\n\t\t\t domains.add(domain);\n\t\t }\n\t\treturn domains;\n\n    "
                        }
                    },
                    "allParameters": [
                        {
                            "type": {
                                "type": "Server"
                            },
                            "name": "server"
                        },
                        {
                            "type": {
                                "type": "Integer"
                            },
                            "name": "max"
                        },
                        {
                            "type": {
                                "type": "Integer"
                            },
                            "name": "offset"
                        }
                    ],
                    "path": "/api/project/method/lastopened.json",
                    "name": "listLastOpened"
                },
                {
                    "isStatic": true,
                    "isAbstract": false,
                    "type": {
                        "type": "List"
                    },
                    "queryParameters": [
                        
                    ],
                    "verb": "GET",
                    "methodParameters": [
                        {
                            "type": {
                                "type": "Server"
                            },
                            "name": "server"
                        }
                    ],
                    "pathParameters": [
                        {
                            "type": {
                                "type": "Long"
                            },
                            "name": "id"
                        }
                    ],
                    "isPublic": true,
                    "code": {
                        "code": {
                            "JAVA": "\n\t\tString path = \"/api/software/{id}/project.json?\";\n\t\tpath = path.replace(\"{id}\",id+\"\");\n\n\t\tJSONArray json = server.doGETList(path);\n\t\tList<Project> domains = new ArrayList<Project>();\n\t\tfor(int i=0;i<json.size();i++) {\n\t\t\tProject domain = new Project();\n\t\t\tdomain.build((JSONObject)json.get(i));\n\t\t\t domains.add(domain);\n\t\t }\n\t\treturn domains;\n\n    "
                        }
                    },
                    "allParameters": [
                        {
                            "type": {
                                "type": "Server"
                            },
                            "name": "server"
                        },
                        {
                            "type": {
                                "type": "Long"
                            },
                            "name": "id"
                        }
                    ],
                    "path": "/api/software/{id}/project.json",
                    "name": "listBySoftware"
                },
                {
                    "isStatic": true,
                    "isAbstract": false,
                    "type": {
                        "type": "List"
                    },
                    "queryParameters": [
                        {
                            "type": {
                                "type": "Integer"
                            },
                            "name": "max"
                        },
                        {
                            "type": {
                                "type": "Integer"
                            },
                            "name": "offset"
                        }
                    ],
                    "verb": "GET",
                    "methodParameters": [
                        {
                            "type": {
                                "type": "Server"
                            },
                            "name": "server"
                        }
                    ],
                    "pathParameters": [
                        {
                            "type": {
                                "type": "Long"
                            },
                            "name": "id"
                        }
                    ],
                    "isPublic": true,
                    "code": {
                        "code": {
                            "JAVA": "\n\t\tString path = \"/api/software/{id}/project.json?\";\n\t\tpath = path.replace(\"{id}\",id+\"\");\n\t\tpath = path + \"&max=\" + max;\n\t\tpath = path + \"&offset=\" + offset;\n\n\t\tJSONArray json = server.doGETList(path);\n\t\tList<Project> domains = new ArrayList<Project>();\n\t\tfor(int i=0;i<json.size();i++) {\n\t\t\tProject domain = new Project();\n\t\t\tdomain.build((JSONObject)json.get(i));\n\t\t\t domains.add(domain);\n\t\t }\n\t\treturn domains;\n\n    "
                        }
                    },
                    "allParameters": [
                        {
                            "type": {
                                "type": "Server"
                            },
                            "name": "server"
                        },
                        {
                            "type": {
                                "type": "Long"
                            },
                            "name": "id"
                        },
                        {
                            "type": {
                                "type": "Integer"
                            },
                            "name": "max"
                        },
                        {
                            "type": {
                                "type": "Integer"
                            },
                            "name": "offset"
                        }
                    ],
                    "path": "/api/software/{id}/project.json",
                    "name": "listBySoftware"
                },
                {
                    "isStatic": true,
                    "isAbstract": false,
                    "type": {
                        "type": "List"
                    },
                    "queryParameters": [
                        
                    ],
                    "verb": "GET",
                    "methodParameters": [
                        {
                            "type": {
                                "type": "Server"
                            },
                            "name": "server"
                        }
                    ],
                    "pathParameters": [
                        {
                            "type": {
                                "type": "Long"
                            },
                            "name": "id"
                        }
                    ],
                    "isPublic": true,
                    "code": {
                        "code": {
                            "JAVA": "\n\t\tString path = \"/api/ontology/{id}/project.json?\";\n\t\tpath = path.replace(\"{id}\",id+\"\");\n\n\t\tJSONArray json = server.doGETList(path);\n\t\tList<Project> domains = new ArrayList<Project>();\n\t\tfor(int i=0;i<json.size();i++) {\n\t\t\tProject domain = new Project();\n\t\t\tdomain.build((JSONObject)json.get(i));\n\t\t\t domains.add(domain);\n\t\t }\n\t\treturn domains;\n\n    "
                        }
                    },
                    "allParameters": [
                        {
                            "type": {
                                "type": "Server"
                            },
                            "name": "server"
                        },
                        {
                            "type": {
                                "type": "Long"
                            },
                            "name": "id"
                        }
                    ],
                    "path": "/api/ontology/{id}/project.json",
                    "name": "listByOntology"
                },
                {
                    "isStatic": true,
                    "isAbstract": false,
                    "type": {
                        "type": "List"
                    },
                    "queryParameters": [
                        {
                            "type": {
                                "type": "Integer"
                            },
                            "name": "max"
                        },
                        {
                            "type": {
                                "type": "Integer"
                            },
                            "name": "offset"
                        }
                    ],
                    "verb": "GET",
                    "methodParameters": [
                        {
                            "type": {
                                "type": "Server"
                            },
                            "name": "server"
                        }
                    ],
                    "pathParameters": [
                        {
                            "type": {
                                "type": "Long"
                            },
                            "name": "id"
                        }
                    ],
                    "isPublic": true,
                    "code": {
                        "code": {
                            "JAVA": "\n\t\tString path = \"/api/ontology/{id}/project.json?\";\n\t\tpath = path.replace(\"{id}\",id+\"\");\n\t\tpath = path + \"&max=\" + max;\n\t\tpath = path + \"&offset=\" + offset;\n\n\t\tJSONArray json = server.doGETList(path);\n\t\tList<Project> domains = new ArrayList<Project>();\n\t\tfor(int i=0;i<json.size();i++) {\n\t\t\tProject domain = new Project();\n\t\t\tdomain.build((JSONObject)json.get(i));\n\t\t\t domains.add(domain);\n\t\t }\n\t\treturn domains;\n\n    "
                        }
                    },
                    "allParameters": [
                        {
                            "type": {
                                "type": "Server"
                            },
                            "name": "server"
                        },
                        {
                            "type": {
                                "type": "Long"
                            },
                            "name": "id"
                        },
                        {
                            "type": {
                                "type": "Integer"
                            },
                            "name": "max"
                        },
                        {
                            "type": {
                                "type": "Integer"
                            },
                            "name": "offset"
                        }
                    ],
                    "path": "/api/ontology/{id}/project.json",
                    "name": "listByOntology"
                },
                {
                    "isStatic": true,
                    "isAbstract": false,
                    "type": {
                        "type": "List"
                    },
                    "queryParameters": [
                        
                    ],
                    "verb": "GET",
                    "methodParameters": [
                        {
                            "type": {
                                "type": "Server"
                            },
                            "name": "server"
                        }
                    ],
                    "pathParameters": [
                        {
                            "type": {
                                "type": "Long"
                            },
                            "name": "id"
                        }
                    ],
                    "isPublic": true,
                    "code": {
                        "code": {
                            "JAVA": "\n\t\tString path = \"/api/user/{id}/project.json?\";\n\t\tpath = path.replace(\"{id}\",id+\"\");\n\n\t\tJSONArray json = server.doGETList(path);\n\t\tList<Project> domains = new ArrayList<Project>();\n\t\tfor(int i=0;i<json.size();i++) {\n\t\t\tProject domain = new Project();\n\t\t\tdomain.build((JSONObject)json.get(i));\n\t\t\t domains.add(domain);\n\t\t }\n\t\treturn domains;\n\n    "
                        }
                    },
                    "allParameters": [
                        {
                            "type": {
                                "type": "Server"
                            },
                            "name": "server"
                        },
                        {
                            "type": {
                                "type": "Long"
                            },
                            "name": "id"
                        }
                    ],
                    "path": "/api/user/{id}/project.json",
                    "name": "listByUser"
                },
                {
                    "isStatic": true,
                    "isAbstract": false,
                    "type": {
                        "type": "List"
                    },
                    "queryParameters": [
                        {
                            "type": {
                                "type": "Integer"
                            },
                            "name": "max"
                        },
                        {
                            "type": {
                                "type": "Integer"
                            },
                            "name": "offset"
                        }
                    ],
                    "verb": "GET",
                    "methodParameters": [
                        {
                            "type": {
                                "type": "Server"
                            },
                            "name": "server"
                        }
                    ],
                    "pathParameters": [
                        {
                            "type": {
                                "type": "Long"
                            },
                            "name": "id"
                        }
                    ],
                    "isPublic": true,
                    "code": {
                        "code": {
                            "JAVA": "\n\t\tString path = \"/api/user/{id}/project.json?\";\n\t\tpath = path.replace(\"{id}\",id+\"\");\n\t\tpath = path + \"&max=\" + max;\n\t\tpath = path + \"&offset=\" + offset;\n\n\t\tJSONArray json = server.doGETList(path);\n\t\tList<Project> domains = new ArrayList<Project>();\n\t\tfor(int i=0;i<json.size();i++) {\n\t\t\tProject domain = new Project();\n\t\t\tdomain.build((JSONObject)json.get(i));\n\t\t\t domains.add(domain);\n\t\t }\n\t\treturn domains;\n\n    "
                        }
                    },
                    "allParameters": [
                        {
                            "type": {
                                "type": "Server"
                            },
                            "name": "server"
                        },
                        {
                            "type": {
                                "type": "Long"
                            },
                            "name": "id"
                        },
                        {
                            "type": {
                                "type": "Integer"
                            },
                            "name": "max"
                        },
                        {
                            "type": {
                                "type": "Integer"
                            },
                            "name": "offset"
                        }
                    ],
                    "path": "/api/user/{id}/project.json",
                    "name": "listByUser"
                },
                {
                    "isStatic": true,
                    "isAbstract": false,
                    "type": {
                        "type": "Project(light)"
                    },
                    "queryParameters": [
                        {
                            "type": {
                                "type": "Boolean"
                            },
                            "name": "creator"
                        },
                        {
                            "type": {
                                "type": "Boolean"
                            },
                            "name": "admin"
                        },
                        {
                            "type": {
                                "type": "Boolean"
                            },
                            "name": "user"
                        },
                        {
                            "type": {
                                "type": "Integer"
                            },
                            "name": "max"
                        },
                        {
                            "type": {
                                "type": "Integer"
                            },
                            "name": "offset"
                        }
                    ],
                    "verb": "GET",
                    "methodParameters": [
                        {
                            "type": {
                                "type": "Server"
                            },
                            "name": "server"
                        }
                    ],
                    "pathParameters": [
                        {
                            "type": {
                                "type": "Long"
                            },
                            "name": "id"
                        }
                    ],
                    "isPublic": true,
                    "code": {
                        "code": {
                            "JAVA": "\n\t\tthrow new Exception(\"Not yet implemented\");\n    "
                        }
                    },
                    "allParameters": [
                        {
                            "type": {
                                "type": "Server"
                            },
                            "name": "server"
                        },
                        {
                            "type": {
                                "type": "Long"
                            },
                            "name": "id"
                        },
                        {
                            "type": {
                                "type": "Boolean"
                            },
                            "name": "creator"
                        },
                        {
                            "type": {
                                "type": "Boolean"
                            },
                            "name": "admin"
                        },
                        {
                            "type": {
                                "type": "Boolean"
                            },
                            "name": "user"
                        },
                        {
                            "type": {
                                "type": "Integer"
                            },
                            "name": "max"
                        },
                        {
                            "type": {
                                "type": "Integer"
                            },
                            "name": "offset"
                        }
                    ],
                    "path": "/api/user/{id}/project/light.json",
                    "name": "listLightByUser"
                },
                {
                    "isStatic": true,
                    "isAbstract": false,
                    "type": {
                        "type": "List"
                    },
                    "queryParameters": [
                        
                    ],
                    "verb": "GET",
                    "methodParameters": [
                        {
                            "type": {
                                "type": "Server"
                            },
                            "name": "server"
                        }
                    ],
                    "pathParameters": [
                        {
                            "type": {
                                "type": "Long"
                            },
                            "name": "id"
                        }
                    ],
                    "isPublic": true,
                    "code": {
                        "code": {
                            "JAVA": "\n\t\tString path = \"/api/retrieval/{id}/project.json?\";\n\t\tpath = path.replace(\"{id}\",id+\"\");\n\n\t\tJSONArray json = server.doGETList(path);\n\t\tList<Project> domains = new ArrayList<Project>();\n\t\tfor(int i=0;i<json.size();i++) {\n\t\t\tProject domain = new Project();\n\t\t\tdomain.build((JSONObject)json.get(i));\n\t\t\t domains.add(domain);\n\t\t }\n\t\treturn domains;\n\n    "
                        }
                    },
                    "allParameters": [
                        {
                            "type": {
                                "type": "Server"
                            },
                            "name": "server"
                        },
                        {
                            "type": {
                                "type": "Long"
                            },
                            "name": "id"
                        }
                    ],
                    "path": "/api/retrieval/{id}/project.json",
                    "name": "listRetrieval"
                },
                {
                    "isStatic": true,
                    "isAbstract": false,
                    "type": {
                        "type": "List"
                    },
                    "queryParameters": [
                        {
                            "type": {
                                "type": "Integer"
                            },
                            "name": "max"
                        },
                        {
                            "type": {
                                "type": "Integer"
                            },
                            "name": "offset"
                        }
                    ],
                    "verb": "GET",
                    "methodParameters": [
                        {
                            "type": {
                                "type": "Server"
                            },
                            "name": "server"
                        }
                    ],
                    "pathParameters": [
                        {
                            "type": {
                                "type": "Long"
                            },
                            "name": "id"
                        }
                    ],
                    "isPublic": true,
                    "code": {
                        "code": {
                            "JAVA": "\n\t\tString path = \"/api/retrieval/{id}/project.json?\";\n\t\tpath = path.replace(\"{id}\",id+\"\");\n\t\tpath = path + \"&max=\" + max;\n\t\tpath = path + \"&offset=\" + offset;\n\n\t\tJSONArray json = server.doGETList(path);\n\t\tList<Project> domains = new ArrayList<Project>();\n\t\tfor(int i=0;i<json.size();i++) {\n\t\t\tProject domain = new Project();\n\t\t\tdomain.build((JSONObject)json.get(i));\n\t\t\t domains.add(domain);\n\t\t }\n\t\treturn domains;\n\n    "
                        }
                    },
                    "allParameters": [
                        {
                            "type": {
                                "type": "Server"
                            },
                            "name": "server"
                        },
                        {
                            "type": {
                                "type": "Long"
                            },
                            "name": "id"
                        },
                        {
                            "type": {
                                "type": "Integer"
                            },
                            "name": "max"
                        },
                        {
                            "type": {
                                "type": "Integer"
                            },
                            "name": "offset"
                        }
                    ],
                    "path": "/api/retrieval/{id}/project.json",
                    "name": "listRetrieval"
                },
                {
                    "isStatic": true,
                    "isAbstract": false,
                    "type": {
                        "type": "CommandHistory"
                    },
                    "queryParameters": [
                        {
                            "type": {
                                "type": "Long"
                            },
                            "name": "user"
                        },
                        {
                            "type": {
                                "type": "Boolean"
                            },
                            "name": "fullData"
                        },
                        {
                            "type": {
                                "type": "Integer"
                            },
                            "name": "max"
                        },
                        {
                            "type": {
                                "type": "Integer"
                            },
                            "name": "offset"
                        }
                    ],
                    "verb": "GET",
                    "methodParameters": [
                        {
                            "type": {
                                "type": "Server"
                            },
                            "name": "server"
                        }
                    ],
                    "pathParameters": [
                        {
                            "type": {
                                "type": "Long"
                            },
                            "name": "id"
                        }
                    ],
                    "isPublic": true,
                    "code": {
                        "code": {
                            "JAVA": "\n\t\tthrow new Exception(\"Not yet implemented\");\n    "
                        }
                    },
                    "allParameters": [
                        {
                            "type": {
                                "type": "Server"
                            },
                            "name": "server"
                        },
                        {
                            "type": {
                                "type": "Long"
                            },
                            "name": "id"
                        },
                        {
                            "type": {
                                "type": "Long"
                            },
                            "name": "user"
                        },
                        {
                            "type": {
                                "type": "Boolean"
                            },
                            "name": "fullData"
                        },
                        {
                            "type": {
                                "type": "Integer"
                            },
                            "name": "max"
                        },
                        {
                            "type": {
                                "type": "Integer"
                            },
                            "name": "offset"
                        }
                    ],
                    "path": "/api/commandhistory.json",
                    "name": "listCommandHistory"
                },
                {
                    "isStatic": false,
                    "isAbstract": false,
                    "type": {
                        "type": "Void"
                    },
                    "queryParameters": [
                        
                    ],
                    "verb": "POST",
                    "methodParameters": [
                        {
                            "type": {
                                "type": "Server"
                            },
                            "name": "server"
                        }
                    ],
                    "pathParameters": [
                        
                    ],
                    "isPublic": true,
                    "code": {
                        "code": {
                            "JAVA": "\n\t\tString path = \"/api/project.json?\";\n\n\t\tJSONObject json = server.doPOST(path,this.toJSON());\n\n\t\tthis.build((JSONObject)json.get(\"project\"));\n\n    "
                        }
                    },
                    "allParameters": [
                        {
                            "type": {
                                "type": "Server"
                            },
                            "name": "server"
                        }
                    ],
                    "path": "/api/project.json",
                    "name": "add"
                },
                {
                    "isStatic": true,
                    "isAbstract": false,
                    "type": {
                        "type": "List"
                    },
                    "queryParameters": [
                        
                    ],
                    "verb": "GET",
                    "methodParameters": [
                        {
                            "type": {
                                "type": "Server"
                            },
                            "name": "server"
                        }
                    ],
                    "pathParameters": [
                        
                    ],
                    "isPublic": true,
                    "code": {
                        "code": {
                            "JAVA": "\n\t\tString path = \"/api/project.json?\";\n\n\t\tJSONArray json = server.doGETList(path);\n\t\tList<Project> domains = new ArrayList<Project>();\n\t\tfor(int i=0;i<json.size();i++) {\n\t\t\tProject domain = new Project();\n\t\t\tdomain.build((JSONObject)json.get(i));\n\t\t\t domains.add(domain);\n\t\t }\n\t\treturn domains;\n\n    "
                        }
                    },
                    "allParameters": [
                        {
                            "type": {
                                "type": "Server"
                            },
                            "name": "server"
                        }
                    ],
                    "path": "/api/project.json",
                    "name": "list"
                },
                {
                    "isStatic": true,
                    "isAbstract": false,
                    "type": {
                        "type": "List"
                    },
                    "queryParameters": [
                        {
                            "type": {
                                "type": "Integer"
                            },
                            "name": "max"
                        },
                        {
                            "type": {
                                "type": "Integer"
                            },
                            "name": "offset"
                        }
                    ],
                    "verb": "GET",
                    "methodParameters": [
                        {
                            "type": {
                                "type": "Server"
                            },
                            "name": "server"
                        }
                    ],
                    "pathParameters": [
                        
                    ],
                    "isPublic": true,
                    "code": {
                        "code": {
                            "JAVA": "\n\t\tString path = \"/api/project.json?\";\n\t\tpath = path + \"&max=\" + max;\n\t\tpath = path + \"&offset=\" + offset;\n\n\t\tJSONArray json = server.doGETList(path);\n\t\tList<Project> domains = new ArrayList<Project>();\n\t\tfor(int i=0;i<json.size();i++) {\n\t\t\tProject domain = new Project();\n\t\t\tdomain.build((JSONObject)json.get(i));\n\t\t\t domains.add(domain);\n\t\t }\n\t\treturn domains;\n\n    "
                        }
                    },
                    "allParameters": [
                        {
                            "type": {
                                "type": "Server"
                            },
                            "name": "server"
                        },
                        {
                            "type": {
                                "type": "Integer"
                            },
                            "name": "max"
                        },
                        {
                            "type": {
                                "type": "Integer"
                            },
                            "name": "offset"
                        }
                    ],
                    "path": "/api/project.json",
                    "name": "list"
                },
                {
                    "isStatic": false,
                    "isAbstract": false,
                    "type": {
                        "type": "Void"
                    },
                    "queryParameters": [
                        
                    ],
                    "verb": "DELETE",
                    "methodParameters": [
                        {
                            "type": {
                                "type": "Server"
                            },
                            "name": "server"
                        }
                    ],
                    "pathParameters": [
                        
                    ],
                    "isPublic": true,
                    "code": {
                        "code": {
                            "JAVA": "\n\t\tString path = \"/api/project/{id}.json?\";\n\t\tpath = path.replace(\"{id}\",getId()+\"\");\n\n\t\tserver.doDELETE(path);\n\t\tbuild(new JSONObject());\n\n    "
                        }
                    },
                    "allParameters": [
                        {
                            "type": {
                                "type": "Server"
                            },
                            "name": "server"
                        }
                    ],
                    "path": "/api/project/{id}.json",
                    "name": "delete"
                },
                {
                    "isStatic": false,
                    "isAbstract": false,
                    "type": {
                        "type": "Void"
                    },
                    "queryParameters": [
                        
                    ],
                    "verb": "PUT",
                    "methodParameters": [
                        {
                            "type": {
                                "type": "Server"
                            },
                            "name": "server"
                        }
                    ],
                    "pathParameters": [
                        
                    ],
                    "isPublic": true,
                    "code": {
                        "code": {
                            "JAVA": "\n\t\tString path = \"/api/project/{id}.json?\";\n\t\tpath = path.replace(\"{id}\",getId()+\"\");\n\n\t\tJSONObject json = server.doPUT(path,this.toJSON());\n\n\t\tthis.build((JSONObject)json.get(\"project\"));\n\n    "
                        }
                    },
                    "allParameters": [
                        {
                            "type": {
                                "type": "Server"
                            },
                            "name": "server"
                        }
                    ],
                    "path": "/api/project/{id}.json",
                    "name": "edit"
                }
            ],
            "name": "AbstractProject"
        },
        {
            "fullPackage": "be.cytomine.client.abst",
            "isAbstract": true,
            "comment": {
                "version": "0.1",
                "description": "A key-value entry that can be map to a domain (project, image, annotation,...)",
                "author": "ClientBuilder (Lo\u00EFc Rollus)"
            },
            "fields": [
                {
                    "useInConstructor": false,
                    "type": {
                        "type": "String"
                    },
                    "useInSetter": false,
                    "comment": {
                        "description": "The full class name of the domain"
                    },
                    "useInGetter": true,
                    "name": "clazz"
                },
                {
                    "useInConstructor": false,
                    "type": {
                        "type": "Long"
                    },
                    "useInSetter": false,
                    "comment": {
                        "description": "The domain id"
                    },
                    "useInGetter": true,
                    "name": "id"
                },
                {
                    "useInConstructor": false,
                    "type": {
                        "type": "Date"
                    },
                    "useInSetter": false,
                    "comment": {
                        "description": "The date of the domain creation"
                    },
                    "useInGetter": true,
                    "name": "created"
                },
                {
                    "useInConstructor": false,
                    "type": {
                        "type": "Date"
                    },
                    "useInSetter": false,
                    "comment": {
                        "description": "The date of the domain modification"
                    },
                    "useInGetter": true,
                    "name": "updated"
                },
                {
                    "useInConstructor": false,
                    "type": {
                        "type": "Date"
                    },
                    "useInSetter": false,
                    "comment": {
                        "description": "When domain was removed from Cytomine"
                    },
                    "useInGetter": true,
                    "name": "deleted"
                },
                {
                    "useInConstructor": true,
                    "type": {
                        "type": "Long"
                    },
                    "useInSetter": true,
                    "comment": {
                        "description": "The domain identifier (id)"
                    },
                    "useInGetter": true,
                    "name": "domainIdent"
                },
                {
                    "useInConstructor": true,
                    "type": {
                        "type": "String"
                    },
                    "useInSetter": true,
                    "comment": {
                        "description": "The domain class"
                    },
                    "useInGetter": true,
                    "name": "domainClassName"
                },
                {
                    "useInConstructor": true,
                    "type": {
                        "type": "String"
                    },
                    "useInSetter": true,
                    "comment": {
                        "description": "The property key"
                    },
                    "useInGetter": true,
                    "name": "key"
                },
                {
                    "useInConstructor": true,
                    "type": {
                        "type": "String"
                    },
                    "useInSetter": true,
                    "comment": {
                        "description": "The property value"
                    },
                    "useInGetter": true,
                    "name": "value"
                }
            ],
            "domainName": "Property",
            "methods": [
                {
                    "isStatic": false,
                    "isAbstract": false,
                    "type": {
                        "type": "Void"
                    },
                    "queryParameters": [
                        
                    ],
                    "verb": null,
                    "methodParameters": [
                        {
                            "type": {
                                "type": "Long"
                            },
                            "name": "domainIdent"
                        },
                        {
                            "type": {
                                "type": "String"
                            },
                            "name": "domainClassName"
                        },
                        {
                            "type": {
                                "type": "String"
                            },
                            "name": "key"
                        },
                        {
                            "type": {
                                "type": "String"
                            },
                            "name": "value"
                        }
                    ],
                    "pathParameters": [
                        
                    ],
                    "isPublic": true,
                    "code": {
                        "code": {
                            "JAVA": "\n\t\tthis.domainIdent=domainIdent;\n\t\tthis.domainClassName=domainClassName;\n\t\tthis.key=key;\n\t\tthis.value=value;\n\n    "
                        }
                    },
                    "allParameters": [
                        {
                            "type": {
                                "type": "Long"
                            },
                            "name": "domainIdent"
                        },
                        {
                            "type": {
                                "type": "String"
                            },
                            "name": "domainClassName"
                        },
                        {
                            "type": {
                                "type": "String"
                            },
                            "name": "key"
                        },
                        {
                            "type": {
                                "type": "String"
                            },
                            "name": "value"
                        }
                    ],
                    "path": null,
                    "name": "build"
                },
                {
                    "isStatic": false,
                    "isAbstract": false,
                    "type": {
                        "type": "Void"
                    },
                    "queryParameters": [
                        
                    ],
                    "verb": null,
                    "methodParameters": [
                        {
                            "type": {
                                "type": "JSONObject"
                            },
                            "name": "json"
                        }
                    ],
                    "pathParameters": [
                        
                    ],
                    "isPublic": true,
                    "code": {
                        "code": {
                            "JAVA": "\n\t\tthis.clazz =JSONUtils.extractJSONString(json.get(\"class\"));\n\t\tthis.id =JSONUtils.extractJSONLong(json.get(\"id\"));\n\t\tthis.created =JSONUtils.extractJSONDate(json.get(\"created\"));\n\t\tthis.updated =JSONUtils.extractJSONDate(json.get(\"updated\"));\n\t\tthis.deleted =JSONUtils.extractJSONDate(json.get(\"deleted\"));\n\t\tthis.domainIdent =JSONUtils.extractJSONLong(json.get(\"domainIdent\"));\n\t\tthis.domainClassName =JSONUtils.extractJSONString(json.get(\"domainClassName\"));\n\t\tthis.key =JSONUtils.extractJSONString(json.get(\"key\"));\n\t\tthis.value =JSONUtils.extractJSONString(json.get(\"value\"));\n\n    "
                        }
                    },
                    "allParameters": [
                        {
                            "type": {
                                "type": "JSONObject"
                            },
                            "name": "json"
                        }
                    ],
                    "path": null,
                    "name": "build"
                },
                {
                    "isStatic": false,
                    "isAbstract": false,
                    "type": {
                        "type": "JSONObject"
                    },
                    "queryParameters": [
                        
                    ],
                    "verb": null,
                    "methodParameters": [
                        
                    ],
                    "pathParameters": [
                        
                    ],
                    "isPublic": true,
                    "code": {
                        "code": {
                            "JAVA": "\n\t\tJSONObject json=new JSONObject();\n\t\tjson.put(\"class\",JSONUtils.formatJSON(this.clazz));\n\t\tjson.put(\"id\",JSONUtils.formatJSON(this.id));\n\t\tjson.put(\"created\",JSONUtils.formatJSON(this.created));\n\t\tjson.put(\"updated\",JSONUtils.formatJSON(this.updated));\n\t\tjson.put(\"deleted\",JSONUtils.formatJSON(this.deleted));\n\t\tjson.put(\"domainIdent\",JSONUtils.formatJSON(this.domainIdent));\n\t\tjson.put(\"domainClassName\",JSONUtils.formatJSON(this.domainClassName));\n\t\tjson.put(\"key\",JSONUtils.formatJSON(this.key));\n\t\tjson.put(\"value\",JSONUtils.formatJSON(this.value));\n\n\t\treturn json;\n    "
                        }
                    },
                    "allParameters": [
                        
                    ],
                    "path": null,
                    "name": "toJSON"
                },
                {
                    "isStatic": true,
                    "isAbstract": false,
                    "type": {
                        "type": "List"
                    },
                    "queryParameters": [
                        
                    ],
                    "verb": "GET",
                    "methodParameters": [
                        {
                            "type": {
                                "type": "Server"
                            },
                            "name": "server"
                        }
                    ],
                    "pathParameters": [
                        {
                            "type": {
                                "type": "Long"
                            },
                            "name": "idImageInstance"
                        }
                    ],
                    "isPublic": true,
                    "code": {
                        "code": {
                            "JAVA": "\n\t\tString path = \"/api/imageinstance/{idImageInstance}/property.json?\";\n\t\tpath = path.replace(\"{idImageInstance}\",idImageInstance+\"\");\n\n\t\tJSONArray json = server.doGETList(path);\n\t\tList<Property> domains = new ArrayList<Property>();\n\t\tfor(int i=0;i<json.size();i++) {\n\t\t\tProperty domain = new Property();\n\t\t\tdomain.build((JSONObject)json.get(i));\n\t\t\t domains.add(domain);\n\t\t }\n\t\treturn domains;\n\n    "
                        }
                    },
                    "allParameters": [
                        {
                            "type": {
                                "type": "Server"
                            },
                            "name": "server"
                        },
                        {
                            "type": {
                                "type": "Long"
                            },
                            "name": "idImageInstance"
                        }
                    ],
                    "path": "/api/imageinstance/{idImageInstance}/property.json",
                    "name": "listByImageInstance"
                },
                {
                    "isStatic": true,
                    "isAbstract": false,
                    "type": {
                        "type": "List"
                    },
                    "queryParameters": [
                        {
                            "type": {
                                "type": "Integer"
                            },
                            "name": "max"
                        },
                        {
                            "type": {
                                "type": "Integer"
                            },
                            "name": "offset"
                        }
                    ],
                    "verb": "GET",
                    "methodParameters": [
                        {
                            "type": {
                                "type": "Server"
                            },
                            "name": "server"
                        }
                    ],
                    "pathParameters": [
                        {
                            "type": {
                                "type": "Long"
                            },
                            "name": "idImageInstance"
                        }
                    ],
                    "isPublic": true,
                    "code": {
                        "code": {
                            "JAVA": "\n\t\tString path = \"/api/imageinstance/{idImageInstance}/property.json?\";\n\t\tpath = path.replace(\"{idImageInstance}\",idImageInstance+\"\");\n\t\tpath = path + \"&max=\" + max;\n\t\tpath = path + \"&offset=\" + offset;\n\n\t\tJSONArray json = server.doGETList(path);\n\t\tList<Property> domains = new ArrayList<Property>();\n\t\tfor(int i=0;i<json.size();i++) {\n\t\t\tProperty domain = new Property();\n\t\t\tdomain.build((JSONObject)json.get(i));\n\t\t\t domains.add(domain);\n\t\t }\n\t\treturn domains;\n\n    "
                        }
                    },
                    "allParameters": [
                        {
                            "type": {
                                "type": "Server"
                            },
                            "name": "server"
                        },
                        {
                            "type": {
                                "type": "Long"
                            },
                            "name": "idImageInstance"
                        },
                        {
                            "type": {
                                "type": "Integer"
                            },
                            "name": "max"
                        },
                        {
                            "type": {
                                "type": "Integer"
                            },
                            "name": "offset"
                        }
                    ],
                    "path": "/api/imageinstance/{idImageInstance}/property.json",
                    "name": "listByImageInstance"
                },
                {
                    "isStatic": true,
                    "isAbstract": false,
                    "type": {
                        "type": "List"
                    },
                    "queryParameters": [
                        {
                            "type": {
                                "type": "Long"
                            },
                            "name": "idProject"
                        },
                        {
                            "type": {
                                "type": "Long"
                            },
                            "name": "idImage"
                        }
                    ],
                    "verb": "GET",
                    "methodParameters": [
                        {
                            "type": {
                                "type": "Server"
                            },
                            "name": "server"
                        }
                    ],
                    "pathParameters": [
                        
                    ],
                    "isPublic": true,
                    "code": {
                        "code": {
                            "JAVA": "\n\t\tString path = \"/api/annotation/property/key.json?\";\n\t\tpath = path + \"&idProject=\" + idProject;\n\t\tpath = path + \"&idImage=\" + idImage;\n\n\t\tJSONArray json = server.doGETList(path);\n\t\tList<Property> domains = new ArrayList<Property>();\n\t\tfor(int i=0;i<json.size();i++) {\n\t\t\tProperty domain = new Property();\n\t\t\tdomain.build((JSONObject)json.get(i));\n\t\t\t domains.add(domain);\n\t\t }\n\t\treturn domains;\n\n    "
                        }
                    },
                    "allParameters": [
                        {
                            "type": {
                                "type": "Server"
                            },
                            "name": "server"
                        },
                        {
                            "type": {
                                "type": "Long"
                            },
                            "name": "idProject"
                        },
                        {
                            "type": {
                                "type": "Long"
                            },
                            "name": "idImage"
                        }
                    ],
                    "path": "/api/annotation/property/key.json",
                    "name": "listKeyForAnnotation"
                },
                {
                    "isStatic": true,
                    "isAbstract": false,
                    "type": {
                        "type": "List"
                    },
                    "queryParameters": [
                        {
                            "type": {
                                "type": "Long"
                            },
                            "name": "idProject"
                        },
                        {
                            "type": {
                                "type": "Long"
                            },
                            "name": "idImage"
                        },
                        {
                            "type": {
                                "type": "Integer"
                            },
                            "name": "max"
                        },
                        {
                            "type": {
                                "type": "Integer"
                            },
                            "name": "offset"
                        }
                    ],
                    "verb": "GET",
                    "methodParameters": [
                        {
                            "type": {
                                "type": "Server"
                            },
                            "name": "server"
                        }
                    ],
                    "pathParameters": [
                        
                    ],
                    "isPublic": true,
                    "code": {
                        "code": {
                            "JAVA": "\n\t\tString path = \"/api/annotation/property/key.json?\";\n\t\tpath = path + \"&idProject=\" + idProject;\n\t\tpath = path + \"&idImage=\" + idImage;\n\t\tpath = path + \"&max=\" + max;\n\t\tpath = path + \"&offset=\" + offset;\n\n\t\tJSONArray json = server.doGETList(path);\n\t\tList<Property> domains = new ArrayList<Property>();\n\t\tfor(int i=0;i<json.size();i++) {\n\t\t\tProperty domain = new Property();\n\t\t\tdomain.build((JSONObject)json.get(i));\n\t\t\t domains.add(domain);\n\t\t }\n\t\treturn domains;\n\n    "
                        }
                    },
                    "allParameters": [
                        {
                            "type": {
                                "type": "Server"
                            },
                            "name": "server"
                        },
                        {
                            "type": {
                                "type": "Long"
                            },
                            "name": "idProject"
                        },
                        {
                            "type": {
                                "type": "Long"
                            },
                            "name": "idImage"
                        },
                        {
                            "type": {
                                "type": "Integer"
                            },
                            "name": "max"
                        },
                        {
                            "type": {
                                "type": "Integer"
                            },
                            "name": "offset"
                        }
                    ],
                    "path": "/api/annotation/property/key.json",
                    "name": "listKeyForAnnotation"
                },
                {
                    "isStatic": true,
                    "isAbstract": false,
                    "type": {
                        "type": "List"
                    },
                    "queryParameters": [
                        {
                            "type": {
                                "type": "Long"
                            },
                            "name": "idProject"
                        }
                    ],
                    "verb": "GET",
                    "methodParameters": [
                        {
                            "type": {
                                "type": "Server"
                            },
                            "name": "server"
                        }
                    ],
                    "pathParameters": [
                        
                    ],
                    "isPublic": true,
                    "code": {
                        "code": {
                            "JAVA": "\n\t\tString path = \"/api/imageinstance/property/key.json?\";\n\t\tpath = path + \"&idProject=\" + idProject;\n\n\t\tJSONArray json = server.doGETList(path);\n\t\tList<Property> domains = new ArrayList<Property>();\n\t\tfor(int i=0;i<json.size();i++) {\n\t\t\tProperty domain = new Property();\n\t\t\tdomain.build((JSONObject)json.get(i));\n\t\t\t domains.add(domain);\n\t\t }\n\t\treturn domains;\n\n    "
                        }
                    },
                    "allParameters": [
                        {
                            "type": {
                                "type": "Server"
                            },
                            "name": "server"
                        },
                        {
                            "type": {
                                "type": "Long"
                            },
                            "name": "idProject"
                        }
                    ],
                    "path": "/api/imageinstance/property/key.json",
                    "name": "listKeyForImageInstance"
                },
                {
                    "isStatic": true,
                    "isAbstract": false,
                    "type": {
                        "type": "List"
                    },
                    "queryParameters": [
                        {
                            "type": {
                                "type": "Long"
                            },
                            "name": "idProject"
                        },
                        {
                            "type": {
                                "type": "Integer"
                            },
                            "name": "max"
                        },
                        {
                            "type": {
                                "type": "Integer"
                            },
                            "name": "offset"
                        }
                    ],
                    "verb": "GET",
                    "methodParameters": [
                        {
                            "type": {
                                "type": "Server"
                            },
                            "name": "server"
                        }
                    ],
                    "pathParameters": [
                        
                    ],
                    "isPublic": true,
                    "code": {
                        "code": {
                            "JAVA": "\n\t\tString path = \"/api/imageinstance/property/key.json?\";\n\t\tpath = path + \"&idProject=\" + idProject;\n\t\tpath = path + \"&max=\" + max;\n\t\tpath = path + \"&offset=\" + offset;\n\n\t\tJSONArray json = server.doGETList(path);\n\t\tList<Property> domains = new ArrayList<Property>();\n\t\tfor(int i=0;i<json.size();i++) {\n\t\t\tProperty domain = new Property();\n\t\t\tdomain.build((JSONObject)json.get(i));\n\t\t\t domains.add(domain);\n\t\t }\n\t\treturn domains;\n\n    "
                        }
                    },
                    "allParameters": [
                        {
                            "type": {
                                "type": "Server"
                            },
                            "name": "server"
                        },
                        {
                            "type": {
                                "type": "Long"
                            },
                            "name": "idProject"
                        },
                        {
                            "type": {
                                "type": "Integer"
                            },
                            "name": "max"
                        },
                        {
                            "type": {
                                "type": "Integer"
                            },
                            "name": "offset"
                        }
                    ],
                    "path": "/api/imageinstance/property/key.json",
                    "name": "listKeyForImageInstance"
                },
                {
                    "isStatic": true,
                    "isAbstract": false,
                    "type": {
                        "type": "List"
                    },
                    "queryParameters": [
                        {
                            "type": {
                                "type": "Long"
                            },
                            "name": "key"
                        },
                        {
                            "type": {
                                "type": "String"
                            },
                            "name": "bbox"
                        }
                    ],
                    "verb": "GET",
                    "methodParameters": [
                        {
                            "type": {
                                "type": "Server"
                            },
                            "name": "server"
                        }
                    ],
                    "pathParameters": [
                        {
                            "type": {
                                "type": "Long"
                            },
                            "name": "idImage"
                        },
                        {
                            "type": {
                                "type": "Long"
                            },
                            "name": "idUser"
                        }
                    ],
                    "isPublic": true,
                    "code": {
                        "code": {
                            "JAVA": "\n\t\tString path = \"/api/user/{idUser}/imageinstance/{idImage}/annotationposition.json?\";\n\t\tpath = path.replace(\"{idImage}\",idImage+\"\");\n\t\tpath = path.replace(\"{idUser}\",idUser+\"\");\n\t\tpath = path + \"&key=\" + key;\n\t\tpath = path + \"&bbox=\" + bbox;\n\n\t\tJSONArray json = server.doGETList(path);\n\t\tList<Property> domains = new ArrayList<Property>();\n\t\tfor(int i=0;i<json.size();i++) {\n\t\t\tProperty domain = new Property();\n\t\t\tdomain.build((JSONObject)json.get(i));\n\t\t\t domains.add(domain);\n\t\t }\n\t\treturn domains;\n\n    "
                        }
                    },
                    "allParameters": [
                        {
                            "type": {
                                "type": "Server"
                            },
                            "name": "server"
                        },
                        {
                            "type": {
                                "type": "Long"
                            },
                            "name": "idImage"
                        },
                        {
                            "type": {
                                "type": "Long"
                            },
                            "name": "idUser"
                        },
                        {
                            "type": {
                                "type": "Long"
                            },
                            "name": "key"
                        },
                        {
                            "type": {
                                "type": "String"
                            },
                            "name": "bbox"
                        }
                    ],
                    "path": "/api/user/{idUser}/imageinstance/{idImage}/annotationposition.json",
                    "name": "listAnnotationPosition"
                },
                {
                    "isStatic": true,
                    "isAbstract": false,
                    "type": {
                        "type": "List"
                    },
                    "queryParameters": [
                        {
                            "type": {
                                "type": "Long"
                            },
                            "name": "key"
                        },
                        {
                            "type": {
                                "type": "String"
                            },
                            "name": "bbox"
                        },
                        {
                            "type": {
                                "type": "Integer"
                            },
                            "name": "max"
                        },
                        {
                            "type": {
                                "type": "Integer"
                            },
                            "name": "offset"
                        }
                    ],
                    "verb": "GET",
                    "methodParameters": [
                        {
                            "type": {
                                "type": "Server"
                            },
                            "name": "server"
                        }
                    ],
                    "pathParameters": [
                        {
                            "type": {
                                "type": "Long"
                            },
                            "name": "idImage"
                        },
                        {
                            "type": {
                                "type": "Long"
                            },
                            "name": "idUser"
                        }
                    ],
                    "isPublic": true,
                    "code": {
                        "code": {
                            "JAVA": "\n\t\tString path = \"/api/user/{idUser}/imageinstance/{idImage}/annotationposition.json?\";\n\t\tpath = path.replace(\"{idImage}\",idImage+\"\");\n\t\tpath = path.replace(\"{idUser}\",idUser+\"\");\n\t\tpath = path + \"&key=\" + key;\n\t\tpath = path + \"&bbox=\" + bbox;\n\t\tpath = path + \"&max=\" + max;\n\t\tpath = path + \"&offset=\" + offset;\n\n\t\tJSONArray json = server.doGETList(path);\n\t\tList<Property> domains = new ArrayList<Property>();\n\t\tfor(int i=0;i<json.size();i++) {\n\t\t\tProperty domain = new Property();\n\t\t\tdomain.build((JSONObject)json.get(i));\n\t\t\t domains.add(domain);\n\t\t }\n\t\treturn domains;\n\n    "
                        }
                    },
                    "allParameters": [
                        {
                            "type": {
                                "type": "Server"
                            },
                            "name": "server"
                        },
                        {
                            "type": {
                                "type": "Long"
                            },
                            "name": "idImage"
                        },
                        {
                            "type": {
                                "type": "Long"
                            },
                            "name": "idUser"
                        },
                        {
                            "type": {
                                "type": "Long"
                            },
                            "name": "key"
                        },
                        {
                            "type": {
                                "type": "String"
                            },
                            "name": "bbox"
                        },
                        {
                            "type": {
                                "type": "Integer"
                            },
                            "name": "max"
                        },
                        {
                            "type": {
                                "type": "Integer"
                            },
                            "name": "offset"
                        }
                    ],
                    "path": "/api/user/{idUser}/imageinstance/{idImage}/annotationposition.json",
                    "name": "listAnnotationPosition"
                },
                {
                    "isStatic": true,
                    "isAbstract": false,
                    "type": {
                        "type": "Property"
                    },
                    "queryParameters": [
                        
                    ],
                    "verb": "GET",
                    "methodParameters": [
                        {
                            "type": {
                                "type": "Server"
                            },
                            "name": "server"
                        }
                    ],
                    "pathParameters": [
                        {
                            "type": {
                                "type": "Long"
                            },
                            "name": "idProject"
                        },
                        {
                            "type": {
                                "type": "Long"
                            },
                            "name": "id"
                        },
                        {
                            "type": {
                                "type": "Long"
                            },
                            "name": "key"
                        }
                    ],
                    "isPublic": true,
                    "code": {
                        "code": {
                            "JAVA": "\n\t\tthrow new Exception(\"Not yet implemented\");\n    "
                        }
                    },
                    "allParameters": [
                        {
                            "type": {
                                "type": "Server"
                            },
                            "name": "server"
                        },
                        {
                            "type": {
                                "type": "Long"
                            },
                            "name": "idProject"
                        },
                        {
                            "type": {
                                "type": "Long"
                            },
                            "name": "id"
                        },
                        {
                            "type": {
                                "type": "Long"
                            },
                            "name": "key"
                        }
                    ],
                    "path": "/api/project/{idProject}/property/{id}.json",
                    "name": "showProject"
                },
                {
                    "isStatic": true,
                    "isAbstract": false,
                    "type": {
                        "type": "Property"
                    },
                    "queryParameters": [
                        
                    ],
                    "verb": "GET",
                    "methodParameters": [
                        {
                            "type": {
                                "type": "Server"
                            },
                            "name": "server"
                        }
                    ],
                    "pathParameters": [
                        {
                            "type": {
                                "type": "Long"
                            },
                            "name": "idAnnotation"
                        },
                        {
                            "type": {
                                "type": "Long"
                            },
                            "name": "id"
                        },
                        {
                            "type": {
                                "type": "Long"
                            },
                            "name": "key"
                        }
                    ],
                    "isPublic": true,
                    "code": {
                        "code": {
                            "JAVA": "\n\t\tthrow new Exception(\"Not yet implemented\");\n    "
                        }
                    },
                    "allParameters": [
                        {
                            "type": {
                                "type": "Server"
                            },
                            "name": "server"
                        },
                        {
                            "type": {
                                "type": "Long"
                            },
                            "name": "idAnnotation"
                        },
                        {
                            "type": {
                                "type": "Long"
                            },
                            "name": "id"
                        },
                        {
                            "type": {
                                "type": "Long"
                            },
                            "name": "key"
                        }
                    ],
                    "path": "/api/annotation/{idAnnotation}/property/{id}.json",
                    "name": "showAnnotation"
                },
                {
                    "isStatic": true,
                    "isAbstract": false,
                    "type": {
                        "type": "Property"
                    },
                    "queryParameters": [
                        
                    ],
                    "verb": "GET",
                    "methodParameters": [
                        {
                            "type": {
                                "type": "Server"
                            },
                            "name": "server"
                        }
                    ],
                    "pathParameters": [
                        {
                            "type": {
                                "type": "Long"
                            },
                            "name": "idImageInstance"
                        },
                        {
                            "type": {
                                "type": "Long"
                            },
                            "name": "id"
                        },
                        {
                            "type": {
                                "type": "Long"
                            },
                            "name": "key"
                        }
                    ],
                    "isPublic": true,
                    "code": {
                        "code": {
                            "JAVA": "\n\t\tthrow new Exception(\"Not yet implemented\");\n    "
                        }
                    },
                    "allParameters": [
                        {
                            "type": {
                                "type": "Server"
                            },
                            "name": "server"
                        },
                        {
                            "type": {
                                "type": "Long"
                            },
                            "name": "idImageInstance"
                        },
                        {
                            "type": {
                                "type": "Long"
                            },
                            "name": "id"
                        },
                        {
                            "type": {
                                "type": "Long"
                            },
                            "name": "key"
                        }
                    ],
                    "path": "/api/imageinstance/{idImageInstance}/property/{id}.json",
                    "name": "showImageInstance"
                },
                {
                    "isStatic": true,
                    "isAbstract": false,
                    "type": {
                        "type": "Property"
                    },
                    "queryParameters": [
                        
                    ],
                    "verb": "POST",
                    "methodParameters": [
                        {
                            "type": {
                                "type": "Server"
                            },
                            "name": "server"
                        }
                    ],
                    "pathParameters": [
                        {
                            "type": {
                                "type": "Long"
                            },
                            "name": "idProject"
                        }
                    ],
                    "isPublic": true,
                    "code": {
                        "code": {
                            "JAVA": "\n\t\tthrow new Exception(\"Not yet implemented\");\n    "
                        }
                    },
                    "allParameters": [
                        {
                            "type": {
                                "type": "Server"
                            },
                            "name": "server"
                        },
                        {
                            "type": {
                                "type": "Long"
                            },
                            "name": "idProject"
                        }
                    ],
                    "path": "/api/project/{idProject}/property.json",
                    "name": "addPropertyProject"
                },
                {
                    "isStatic": true,
                    "isAbstract": false,
                    "type": {
                        "type": "Property"
                    },
                    "queryParameters": [
                        
                    ],
                    "verb": "POST",
                    "methodParameters": [
                        {
                            "type": {
                                "type": "Server"
                            },
                            "name": "server"
                        }
                    ],
                    "pathParameters": [
                        {
                            "type": {
                                "type": "Long"
                            },
                            "name": "idAnnotation"
                        }
                    ],
                    "isPublic": true,
                    "code": {
                        "code": {
                            "JAVA": "\n\t\tthrow new Exception(\"Not yet implemented\");\n    "
                        }
                    },
                    "allParameters": [
                        {
                            "type": {
                                "type": "Server"
                            },
                            "name": "server"
                        },
                        {
                            "type": {
                                "type": "Long"
                            },
                            "name": "idAnnotation"
                        }
                    ],
                    "path": "/api/annotation/{idAnnotation}/property.json",
                    "name": "addPropertyAnnotation"
                },
                {
                    "isStatic": true,
                    "isAbstract": false,
                    "type": {
                        "type": "Property"
                    },
                    "queryParameters": [
                        
                    ],
                    "verb": "POST",
                    "methodParameters": [
                        {
                            "type": {
                                "type": "Server"
                            },
                            "name": "server"
                        }
                    ],
                    "pathParameters": [
                        {
                            "type": {
                                "type": "Long"
                            },
                            "name": "idImageInstance"
                        }
                    ],
                    "isPublic": true,
                    "code": {
                        "code": {
                            "JAVA": "\n\t\tthrow new Exception(\"Not yet implemented\");\n    "
                        }
                    },
                    "allParameters": [
                        {
                            "type": {
                                "type": "Server"
                            },
                            "name": "server"
                        },
                        {
                            "type": {
                                "type": "Long"
                            },
                            "name": "idImageInstance"
                        }
                    ],
                    "path": "/api/imageinstance/{idImageInstance}/property.json",
                    "name": "addPropertyImageInstance"
                },
                {
                    "isStatic": true,
                    "isAbstract": false,
                    "type": {
                        "type": "List"
                    },
                    "queryParameters": [
                        
                    ],
                    "verb": "GET",
                    "methodParameters": [
                        {
                            "type": {
                                "type": "Server"
                            },
                            "name": "server"
                        }
                    ],
                    "pathParameters": [
                        {
                            "type": {
                                "type": "Long"
                            },
                            "name": "idAnnotation"
                        }
                    ],
                    "isPublic": true,
                    "code": {
                        "code": {
                            "JAVA": "\n\t\tString path = \"/api/annotation/{idAnnotation}/property.json?\";\n\t\tpath = path.replace(\"{idAnnotation}\",idAnnotation+\"\");\n\n\t\tJSONArray json = server.doGETList(path);\n\t\tList<Property> domains = new ArrayList<Property>();\n\t\tfor(int i=0;i<json.size();i++) {\n\t\t\tProperty domain = new Property();\n\t\t\tdomain.build((JSONObject)json.get(i));\n\t\t\t domains.add(domain);\n\t\t }\n\t\treturn domains;\n\n    "
                        }
                    },
                    "allParameters": [
                        {
                            "type": {
                                "type": "Server"
                            },
                            "name": "server"
                        },
                        {
                            "type": {
                                "type": "Long"
                            },
                            "name": "idAnnotation"
                        }
                    ],
                    "path": "/api/annotation/{idAnnotation}/property.json",
                    "name": "listByAnnotation"
                },
                {
                    "isStatic": true,
                    "isAbstract": false,
                    "type": {
                        "type": "List"
                    },
                    "queryParameters": [
                        {
                            "type": {
                                "type": "Integer"
                            },
                            "name": "max"
                        },
                        {
                            "type": {
                                "type": "Integer"
                            },
                            "name": "offset"
                        }
                    ],
                    "verb": "GET",
                    "methodParameters": [
                        {
                            "type": {
                                "type": "Server"
                            },
                            "name": "server"
                        }
                    ],
                    "pathParameters": [
                        {
                            "type": {
                                "type": "Long"
                            },
                            "name": "idAnnotation"
                        }
                    ],
                    "isPublic": true,
                    "code": {
                        "code": {
                            "JAVA": "\n\t\tString path = \"/api/annotation/{idAnnotation}/property.json?\";\n\t\tpath = path.replace(\"{idAnnotation}\",idAnnotation+\"\");\n\t\tpath = path + \"&max=\" + max;\n\t\tpath = path + \"&offset=\" + offset;\n\n\t\tJSONArray json = server.doGETList(path);\n\t\tList<Property> domains = new ArrayList<Property>();\n\t\tfor(int i=0;i<json.size();i++) {\n\t\t\tProperty domain = new Property();\n\t\t\tdomain.build((JSONObject)json.get(i));\n\t\t\t domains.add(domain);\n\t\t }\n\t\treturn domains;\n\n    "
                        }
                    },
                    "allParameters": [
                        {
                            "type": {
                                "type": "Server"
                            },
                            "name": "server"
                        },
                        {
                            "type": {
                                "type": "Long"
                            },
                            "name": "idAnnotation"
                        },
                        {
                            "type": {
                                "type": "Integer"
                            },
                            "name": "max"
                        },
                        {
                            "type": {
                                "type": "Integer"
                            },
                            "name": "offset"
                        }
                    ],
                    "path": "/api/annotation/{idAnnotation}/property.json",
                    "name": "listByAnnotation"
                },
                {
                    "isStatic": true,
                    "isAbstract": false,
                    "type": {
                        "type": "List"
                    },
                    "queryParameters": [
                        
                    ],
                    "verb": "GET",
                    "methodParameters": [
                        {
                            "type": {
                                "type": "Server"
                            },
                            "name": "server"
                        }
                    ],
                    "pathParameters": [
                        {
                            "type": {
                                "type": "Long"
                            },
                            "name": "idProject"
                        }
                    ],
                    "isPublic": true,
                    "code": {
                        "code": {
                            "JAVA": "\n\t\tString path = \"/api/project/{idProject}/property.json?\";\n\t\tpath = path.replace(\"{idProject}\",idProject+\"\");\n\n\t\tJSONArray json = server.doGETList(path);\n\t\tList<Property> domains = new ArrayList<Property>();\n\t\tfor(int i=0;i<json.size();i++) {\n\t\t\tProperty domain = new Property();\n\t\t\tdomain.build((JSONObject)json.get(i));\n\t\t\t domains.add(domain);\n\t\t }\n\t\treturn domains;\n\n    "
                        }
                    },
                    "allParameters": [
                        {
                            "type": {
                                "type": "Server"
                            },
                            "name": "server"
                        },
                        {
                            "type": {
                                "type": "Long"
                            },
                            "name": "idProject"
                        }
                    ],
                    "path": "/api/project/{idProject}/property.json",
                    "name": "listByProject"
                },
                {
                    "isStatic": true,
                    "isAbstract": false,
                    "type": {
                        "type": "List"
                    },
                    "queryParameters": [
                        {
                            "type": {
                                "type": "Integer"
                            },
                            "name": "max"
                        },
                        {
                            "type": {
                                "type": "Integer"
                            },
                            "name": "offset"
                        }
                    ],
                    "verb": "GET",
                    "methodParameters": [
                        {
                            "type": {
                                "type": "Server"
                            },
                            "name": "server"
                        }
                    ],
                    "pathParameters": [
                        {
                            "type": {
                                "type": "Long"
                            },
                            "name": "idProject"
                        }
                    ],
                    "isPublic": true,
                    "code": {
                        "code": {
                            "JAVA": "\n\t\tString path = \"/api/project/{idProject}/property.json?\";\n\t\tpath = path.replace(\"{idProject}\",idProject+\"\");\n\t\tpath = path + \"&max=\" + max;\n\t\tpath = path + \"&offset=\" + offset;\n\n\t\tJSONArray json = server.doGETList(path);\n\t\tList<Property> domains = new ArrayList<Property>();\n\t\tfor(int i=0;i<json.size();i++) {\n\t\t\tProperty domain = new Property();\n\t\t\tdomain.build((JSONObject)json.get(i));\n\t\t\t domains.add(domain);\n\t\t }\n\t\treturn domains;\n\n    "
                        }
                    },
                    "allParameters": [
                        {
                            "type": {
                                "type": "Server"
                            },
                            "name": "server"
                        },
                        {
                            "type": {
                                "type": "Long"
                            },
                            "name": "idProject"
                        },
                        {
                            "type": {
                                "type": "Integer"
                            },
                            "name": "max"
                        },
                        {
                            "type": {
                                "type": "Integer"
                            },
                            "name": "offset"
                        }
                    ],
                    "path": "/api/project/{idProject}/property.json",
                    "name": "listByProject"
                },
                {
                    "isStatic": false,
                    "isAbstract": false,
                    "type": {
                        "type": "Void"
                    },
                    "queryParameters": [
                        
                    ],
                    "verb": "DELETE",
                    "methodParameters": [
                        {
                            "type": {
                                "type": "Server"
                            },
                            "name": "server"
                        }
                    ],
                    "pathParameters": [
                        
                    ],
                    "isPublic": true,
                    "code": {
                        "code": {
                            "JAVA": "\n\t\tString path = \"/api/imageinstance/{idImageInstance}/property/{id}.json?\";\n\t\tpath = path.replace(\"{id}\",getId()+\"\");\n\n\t\tserver.doDELETE(path);\n\t\tbuild(new JSONObject());\n\n    "
                        }
                    },
                    "allParameters": [
                        {
                            "type": {
                                "type": "Server"
                            },
                            "name": "server"
                        }
                    ],
                    "path": "/api/imageinstance/{idImageInstance}/property/{id}.json",
                    "name": "delete"
                },
                {
                    "isStatic": false,
                    "isAbstract": false,
                    "type": {
                        "type": "Void"
                    },
                    "queryParameters": [
                        
                    ],
                    "verb": "PUT",
                    "methodParameters": [
                        {
                            "type": {
                                "type": "Server"
                            },
                            "name": "server"
                        }
                    ],
                    "pathParameters": [
                        
                    ],
                    "isPublic": true,
                    "code": {
                        "code": {
                            "JAVA": "\n\t\tString path = \"/api/imageinstance/{idImageInstance}/property/{id}.json?\";\n\t\tpath = path.replace(\"{idAnnotation}\",getIdAnnotation()+\"\");\n\t\tpath = path.replace(\"{idImageInstance}\",getIdImageInstance()+\"\");\n\t\tpath = path.replace(\"{idProject}\",getIdProject()+\"\");\n\n\t\tJSONObject json = server.doPUT(path,this.toJSON());\n\n\t\tthis.build((JSONObject)json.get(\"property\"));\n\n    "
                        }
                    },
                    "allParameters": [
                        {
                            "type": {
                                "type": "Server"
                            },
                            "name": "server"
                        }
                    ],
                    "path": "/api/imageinstance/{idImageInstance}/property/{id}.json",
                    "name": "edit"
                }
            ],
            "name": "AbstractProperty"
        },
        {
            "fullPackage": "be.cytomine.client.abst",
            "isAbstract": true,
            "comment": {
                "version": "0.1",
                "description": "Relation between a term 1 , a term 2 and a relantion domain (e.g. term1 PARENT term2)",
                "author": "ClientBuilder (Lo\u00EFc Rollus)"
            },
            "fields": [
                {
                    "useInConstructor": false,
                    "type": {
                        "type": "String"
                    },
                    "useInSetter": false,
                    "comment": {
                        "description": "The full class name of the domain"
                    },
                    "useInGetter": true,
                    "name": "clazz"
                },
                {
                    "useInConstructor": false,
                    "type": {
                        "type": "Long"
                    },
                    "useInSetter": false,
                    "comment": {
                        "description": "The domain id"
                    },
                    "useInGetter": true,
                    "name": "id"
                },
                {
                    "useInConstructor": false,
                    "type": {
                        "type": "Date"
                    },
                    "useInSetter": false,
                    "comment": {
                        "description": "The date of the domain creation"
                    },
                    "useInGetter": true,
                    "name": "created"
                },
                {
                    "useInConstructor": false,
                    "type": {
                        "type": "Date"
                    },
                    "useInSetter": false,
                    "comment": {
                        "description": "The date of the domain modification"
                    },
                    "useInGetter": true,
                    "name": "updated"
                },
                {
                    "useInConstructor": false,
                    "type": {
                        "type": "Date"
                    },
                    "useInSetter": false,
                    "comment": {
                        "description": "When domain was removed from Cytomine"
                    },
                    "useInGetter": true,
                    "name": "deleted"
                },
                {
                    "useInConstructor": true,
                    "type": {
                        "type": "Long"
                    },
                    "useInSetter": true,
                    "comment": {
                        "description": "The relation"
                    },
                    "useInGetter": true,
                    "name": "relation"
                },
                {
                    "useInConstructor": true,
                    "type": {
                        "type": "Long"
                    },
                    "useInSetter": true,
                    "comment": {
                        "description": "The first term"
                    },
                    "useInGetter": true,
                    "name": "term1"
                },
                {
                    "useInConstructor": true,
                    "type": {
                        "type": "Long"
                    },
                    "useInSetter": true,
                    "comment": {
                        "description": "The second term"
                    },
                    "useInGetter": true,
                    "name": "term2"
                }
            ],
            "domainName": "Relation",
            "methods": [
                {
                    "isStatic": false,
                    "isAbstract": false,
                    "type": {
                        "type": "Void"
                    },
                    "queryParameters": [
                        
                    ],
                    "verb": null,
                    "methodParameters": [
                        {
                            "type": {
                                "type": "Long"
                            },
                            "name": "relation"
                        },
                        {
                            "type": {
                                "type": "Long"
                            },
                            "name": "term1"
                        },
                        {
                            "type": {
                                "type": "Long"
                            },
                            "name": "term2"
                        }
                    ],
                    "pathParameters": [
                        
                    ],
                    "isPublic": true,
                    "code": {
                        "code": {
                            "JAVA": "\n\t\tthis.relation=relation;\n\t\tthis.term1=term1;\n\t\tthis.term2=term2;\n\n    "
                        }
                    },
                    "allParameters": [
                        {
                            "type": {
                                "type": "Long"
                            },
                            "name": "relation"
                        },
                        {
                            "type": {
                                "type": "Long"
                            },
                            "name": "term1"
                        },
                        {
                            "type": {
                                "type": "Long"
                            },
                            "name": "term2"
                        }
                    ],
                    "path": null,
                    "name": "build"
                },
                {
                    "isStatic": false,
                    "isAbstract": false,
                    "type": {
                        "type": "Void"
                    },
                    "queryParameters": [
                        
                    ],
                    "verb": null,
                    "methodParameters": [
                        {
                            "type": {
                                "type": "JSONObject"
                            },
                            "name": "json"
                        }
                    ],
                    "pathParameters": [
                        
                    ],
                    "isPublic": true,
                    "code": {
                        "code": {
                            "JAVA": "\n\t\tthis.clazz =JSONUtils.extractJSONString(json.get(\"class\"));\n\t\tthis.id =JSONUtils.extractJSONLong(json.get(\"id\"));\n\t\tthis.created =JSONUtils.extractJSONDate(json.get(\"created\"));\n\t\tthis.updated =JSONUtils.extractJSONDate(json.get(\"updated\"));\n\t\tthis.deleted =JSONUtils.extractJSONDate(json.get(\"deleted\"));\n\t\tthis.relation =JSONUtils.extractJSONLong(json.get(\"relation\"));\n\t\tthis.term1 =JSONUtils.extractJSONLong(json.get(\"term1\"));\n\t\tthis.term2 =JSONUtils.extractJSONLong(json.get(\"term2\"));\n\n    "
                        }
                    },
                    "allParameters": [
                        {
                            "type": {
                                "type": "JSONObject"
                            },
                            "name": "json"
                        }
                    ],
                    "path": null,
                    "name": "build"
                },
                {
                    "isStatic": false,
                    "isAbstract": false,
                    "type": {
                        "type": "JSONObject"
                    },
                    "queryParameters": [
                        
                    ],
                    "verb": null,
                    "methodParameters": [
                        
                    ],
                    "pathParameters": [
                        
                    ],
                    "isPublic": true,
                    "code": {
                        "code": {
                            "JAVA": "\n\t\tJSONObject json=new JSONObject();\n\t\tjson.put(\"class\",JSONUtils.formatJSON(this.clazz));\n\t\tjson.put(\"id\",JSONUtils.formatJSON(this.id));\n\t\tjson.put(\"created\",JSONUtils.formatJSON(this.created));\n\t\tjson.put(\"updated\",JSONUtils.formatJSON(this.updated));\n\t\tjson.put(\"deleted\",JSONUtils.formatJSON(this.deleted));\n\t\tjson.put(\"relation\",JSONUtils.formatJSON(this.relation));\n\t\tjson.put(\"term1\",JSONUtils.formatJSON(this.term1));\n\t\tjson.put(\"term2\",JSONUtils.formatJSON(this.term2));\n\n\t\treturn json;\n    "
                        }
                    },
                    "allParameters": [
                        
                    ],
                    "path": null,
                    "name": "toJSON"
                },
                {
                    "isStatic": true,
                    "isAbstract": false,
                    "type": {
                        "type": "Relation"
                    },
                    "queryParameters": [
                        
                    ],
                    "verb": "GET",
                    "methodParameters": [
                        {
                            "type": {
                                "type": "Server"
                            },
                            "name": "server"
                        }
                    ],
                    "pathParameters": [
                        {
                            "type": {
                                "type": "Long"
                            },
                            "name": "id"
                        }
                    ],
                    "isPublic": true,
                    "code": {
                        "code": {
                            "JAVA": "\n\t\tString path = \"/api/relation/{id}.json?\";\n\t\tpath = path.replace(\"{id}\",id+\"\");\n\n\t\tJSONObject json = server.doGET(path);\n\t\tRelation domain = new Relation();\n\t\tdomain.build(json);\n\t\treturn domain;\n\n    "
                        }
                    },
                    "allParameters": [
                        {
                            "type": {
                                "type": "Server"
                            },
                            "name": "server"
                        },
                        {
                            "type": {
                                "type": "Long"
                            },
                            "name": "id"
                        }
                    ],
                    "path": "/api/relation/{id}.json",
                    "name": "get"
                },
                {
                    "isStatic": true,
                    "isAbstract": false,
                    "type": {
                        "type": "List"
                    },
                    "queryParameters": [
                        
                    ],
                    "verb": "GET",
                    "methodParameters": [
                        {
                            "type": {
                                "type": "Server"
                            },
                            "name": "server"
                        }
                    ],
                    "pathParameters": [
                        
                    ],
                    "isPublic": true,
                    "code": {
                        "code": {
                            "JAVA": "\n\t\tString path = \"/api/relation.json?\";\n\n\t\tJSONArray json = server.doGETList(path);\n\t\tList<Relation> domains = new ArrayList<Relation>();\n\t\tfor(int i=0;i<json.size();i++) {\n\t\t\tRelation domain = new Relation();\n\t\t\tdomain.build((JSONObject)json.get(i));\n\t\t\t domains.add(domain);\n\t\t }\n\t\treturn domains;\n\n    "
                        }
                    },
                    "allParameters": [
                        {
                            "type": {
                                "type": "Server"
                            },
                            "name": "server"
                        }
                    ],
                    "path": "/api/relation.json",
                    "name": "list"
                },
                {
                    "isStatic": true,
                    "isAbstract": false,
                    "type": {
                        "type": "List"
                    },
                    "queryParameters": [
                        {
                            "type": {
                                "type": "Integer"
                            },
                            "name": "max"
                        },
                        {
                            "type": {
                                "type": "Integer"
                            },
                            "name": "offset"
                        }
                    ],
                    "verb": "GET",
                    "methodParameters": [
                        {
                            "type": {
                                "type": "Server"
                            },
                            "name": "server"
                        }
                    ],
                    "pathParameters": [
                        
                    ],
                    "isPublic": true,
                    "code": {
                        "code": {
                            "JAVA": "\n\t\tString path = \"/api/relation.json?\";\n\t\tpath = path + \"&max=\" + max;\n\t\tpath = path + \"&offset=\" + offset;\n\n\t\tJSONArray json = server.doGETList(path);\n\t\tList<Relation> domains = new ArrayList<Relation>();\n\t\tfor(int i=0;i<json.size();i++) {\n\t\t\tRelation domain = new Relation();\n\t\t\tdomain.build((JSONObject)json.get(i));\n\t\t\t domains.add(domain);\n\t\t }\n\t\treturn domains;\n\n    "
                        }
                    },
                    "allParameters": [
                        {
                            "type": {
                                "type": "Server"
                            },
                            "name": "server"
                        },
                        {
                            "type": {
                                "type": "Integer"
                            },
                            "name": "max"
                        },
                        {
                            "type": {
                                "type": "Integer"
                            },
                            "name": "offset"
                        }
                    ],
                    "path": "/api/relation.json",
                    "name": "list"
                }
            ],
            "name": "AbstractRelation"
        },
        {
            "fullPackage": "be.cytomine.client.abst",
            "isAbstract": true,
            "comment": {
                "version": "0.1",
                "description": "A reviewed annotation is an user/algo-annotation validated by a user. When a user validate an user/algoannotation, we copy all data from the validated annotation to create the review annotation",
                "author": "ClientBuilder (Lo\u00EFc Rollus)"
            },
            "fields": [
                {
                    "useInConstructor": false,
                    "type": {
                        "type": "String"
                    },
                    "useInSetter": false,
                    "comment": {
                        "description": "The full class name of the domain"
                    },
                    "useInGetter": true,
                    "name": "clazz"
                },
                {
                    "useInConstructor": false,
                    "type": {
                        "type": "Long"
                    },
                    "useInSetter": false,
                    "comment": {
                        "description": "The domain id"
                    },
                    "useInGetter": true,
                    "name": "id"
                },
                {
                    "useInConstructor": false,
                    "type": {
                        "type": "Date"
                    },
                    "useInSetter": false,
                    "comment": {
                        "description": "The date of the domain creation"
                    },
                    "useInGetter": true,
                    "name": "created"
                },
                {
                    "useInConstructor": false,
                    "type": {
                        "type": "Date"
                    },
                    "useInSetter": false,
                    "comment": {
                        "description": "The date of the domain modification"
                    },
                    "useInGetter": true,
                    "name": "updated"
                },
                {
                    "useInConstructor": false,
                    "type": {
                        "type": "Date"
                    },
                    "useInSetter": false,
                    "comment": {
                        "description": "When domain was removed from Cytomine"
                    },
                    "useInGetter": true,
                    "name": "deleted"
                },
                {
                    "useInConstructor": true,
                    "type": {
                        "type": "String"
                    },
                    "useInSetter": true,
                    "comment": {
                        "description": "The WKT of the annotation form"
                    },
                    "useInGetter": true,
                    "name": "location"
                },
                {
                    "useInConstructor": true,
                    "type": {
                        "type": "Long"
                    },
                    "useInSetter": true,
                    "comment": {
                        "description": "The image id of the annotation"
                    },
                    "useInGetter": true,
                    "name": "image"
                },
                {
                    "useInConstructor": false,
                    "type": {
                        "type": "Double"
                    },
                    "useInSetter": true,
                    "comment": {
                        "description": "The geometry compression rate used to simplify the annotation (during creation)"
                    },
                    "useInGetter": true,
                    "name": "geometryCompression"
                },
                {
                    "useInConstructor": true,
                    "type": {
                        "type": "Long"
                    },
                    "useInSetter": true,
                    "comment": {
                        "description": "The project id of the annotation"
                    },
                    "useInGetter": true,
                    "name": "project"
                },
                {
                    "useInConstructor": false,
                    "type": {
                        "type": "Object"
                    },
                    "useInSetter": true,
                    "comment": {
                        "description": "Undefined"
                    },
                    "useInGetter": true,
                    "name": "container"
                },
                {
                    "useInConstructor": false,
                    "type": {
                        "type": "Long"
                    },
                    "useInSetter": false,
                    "comment": {
                        "description": "User that created the based annotation"
                    },
                    "useInGetter": true,
                    "name": "user"
                },
                {
                    "useInConstructor": false,
                    "type": {
                        "type": "Long"
                    },
                    "useInSetter": false,
                    "comment": {
                        "description": "The number of comments added by a user on this annotation"
                    },
                    "useInGetter": true,
                    "name": "nbComments"
                },
                {
                    "useInConstructor": false,
                    "type": {
                        "type": "Double"
                    },
                    "useInSetter": false,
                    "comment": {
                        "description": "The annotation form area"
                    },
                    "useInGetter": true,
                    "name": "area"
                },
                {
                    "useInConstructor": false,
                    "type": {
                        "type": "Integer"
                    },
                    "useInSetter": false,
                    "comment": {
                        "description": "The annotation unit used for perimeter (pixels=0,mm=2,)"
                    },
                    "useInGetter": true,
                    "name": "perimeterUnit"
                },
                {
                    "useInConstructor": false,
                    "type": {
                        "type": "Integer"
                    },
                    "useInSetter": false,
                    "comment": {
                        "description": "The annotation unit used for area (pixels\u00B2=1,micron\u00B2=3)"
                    },
                    "useInGetter": true,
                    "name": "areaUnit"
                },
                {
                    "useInConstructor": false,
                    "type": {
                        "type": "Double"
                    },
                    "useInSetter": false,
                    "comment": {
                        "description": "The annotation form perimeter"
                    },
                    "useInGetter": true,
                    "name": "perimeter"
                },
                {
                    "useInConstructor": false,
                    "type": {
                        "type": "Map"
                    },
                    "useInSetter": false,
                    "comment": {
                        "description": "X,Y coord of the annotation centroid"
                    },
                    "useInGetter": true,
                    "name": "centroid"
                },
                {
                    "useInConstructor": false,
                    "type": {
                        "type": "List"
                    },
                    "useInSetter": true,
                    "comment": {
                        "description": "List of term id mapped with this annotation"
                    },
                    "useInGetter": true,
                    "name": "term"
                },
                {
                    "useInConstructor": false,
                    "type": {
                        "type": "Double"
                    },
                    "useInSetter": false,
                    "comment": {
                        "description": "The similarity rate for this annotation compare to another annotation (from retrieval)"
                    },
                    "useInGetter": true,
                    "name": "similarity"
                },
                {
                    "useInConstructor": false,
                    "type": {
                        "type": "Double"
                    },
                    "useInSetter": false,
                    "comment": {
                        "description": "The reliability value estimated by the software for the mapping between annotation and term"
                    },
                    "useInGetter": true,
                    "name": "rate"
                },
                {
                    "useInConstructor": false,
                    "type": {
                        "type": "Long"
                    },
                    "useInSetter": false,
                    "comment": {
                        "description": "The id of the term map with this annotation by a the software"
                    },
                    "useInGetter": true,
                    "name": "idTerm"
                },
                {
                    "useInConstructor": false,
                    "type": {
                        "type": "Long"
                    },
                    "useInSetter": false,
                    "comment": {
                        "description": "The id of the real term (corresponding to the term add by a real user)"
                    },
                    "useInGetter": true,
                    "name": "idExpectedTerm"
                },
                {
                    "useInConstructor": true,
                    "type": {
                        "type": "Long"
                    },
                    "useInSetter": true,
                    "comment": {
                        "description": "Annotation id that has been reviewed"
                    },
                    "useInGetter": true,
                    "name": "parentIdent"
                },
                {
                    "useInConstructor": true,
                    "type": {
                        "type": "String"
                    },
                    "useInSetter": true,
                    "comment": {
                        "description": "Annotation type that has been reviewed (algo/user)"
                    },
                    "useInGetter": true,
                    "name": "parentClassName"
                },
                {
                    "useInConstructor": false,
                    "type": {
                        "type": "Integer"
                    },
                    "useInSetter": true,
                    "comment": {
                        "description": "Status for the reviewed"
                    },
                    "useInGetter": true,
                    "name": "status"
                },
                {
                    "useInConstructor": false,
                    "type": {
                        "type": "Long"
                    },
                    "useInSetter": true,
                    "comment": {
                        "description": "User that review the based annotation"
                    },
                    "useInGetter": true,
                    "name": "reviewUser"
                },
                {
                    "useInConstructor": false,
                    "type": {
                        "type": "List"
                    },
                    "useInSetter": true,
                    "comment": {
                        "description": "List of term id mapped with this annotation"
                    },
                    "useInGetter": true,
                    "name": "terms"
                },
                {
                    "useInConstructor": false,
                    "type": {
                        "type": "String"
                    },
                    "useInSetter": false,
                    "comment": {
                        "description": "URL to get the annotation crop"
                    },
                    "useInGetter": true,
                    "name": "cropURL"
                },
                {
                    "useInConstructor": false,
                    "type": {
                        "type": "String"
                    },
                    "useInSetter": false,
                    "comment": {
                        "description": "URL to get a small annotation crop (<256px)"
                    },
                    "useInGetter": true,
                    "name": "smallCropURL"
                },
                {
                    "useInConstructor": false,
                    "type": {
                        "type": "String"
                    },
                    "useInSetter": false,
                    "comment": {
                        "description": "URL to go to the annotation on the image"
                    },
                    "useInGetter": true,
                    "name": "url"
                },
                {
                    "useInConstructor": false,
                    "type": {
                        "type": "String"
                    },
                    "useInSetter": false,
                    "comment": {
                        "description": "URL to go to the image"
                    },
                    "useInGetter": true,
                    "name": "imageURL"
                },
                {
                    "useInConstructor": false,
                    "type": {
                        "type": "Boolean"
                    },
                    "useInSetter": false,
                    "comment": {
                        "description": "Always true"
                    },
                    "useInGetter": true,
                    "name": "reviewed"
                }
            ],
            "domainName": "ReviewedAnnotation",
            "methods": [
                {
                    "isStatic": false,
                    "isAbstract": false,
                    "type": {
                        "type": "Void"
                    },
                    "queryParameters": [
                        
                    ],
                    "verb": null,
                    "methodParameters": [
                        {
                            "type": {
                                "type": "String"
                            },
                            "name": "location"
                        },
                        {
                            "type": {
                                "type": "Long"
                            },
                            "name": "image"
                        },
                        {
                            "type": {
                                "type": "Long"
                            },
                            "name": "project"
                        },
                        {
                            "type": {
                                "type": "Long"
                            },
                            "name": "parentIdent"
                        },
                        {
                            "type": {
                                "type": "String"
                            },
                            "name": "parentClassName"
                        }
                    ],
                    "pathParameters": [
                        
                    ],
                    "isPublic": true,
                    "code": {
                        "code": {
                            "JAVA": "\n\t\tthis.location=location;\n\t\tthis.image=image;\n\t\tthis.project=project;\n\t\tthis.parentIdent=parentIdent;\n\t\tthis.parentClassName=parentClassName;\n\n    "
                        }
                    },
                    "allParameters": [
                        {
                            "type": {
                                "type": "String"
                            },
                            "name": "location"
                        },
                        {
                            "type": {
                                "type": "Long"
                            },
                            "name": "image"
                        },
                        {
                            "type": {
                                "type": "Long"
                            },
                            "name": "project"
                        },
                        {
                            "type": {
                                "type": "Long"
                            },
                            "name": "parentIdent"
                        },
                        {
                            "type": {
                                "type": "String"
                            },
                            "name": "parentClassName"
                        }
                    ],
                    "path": null,
                    "name": "build"
                },
                {
                    "isStatic": false,
                    "isAbstract": false,
                    "type": {
                        "type": "Void"
                    },
                    "queryParameters": [
                        
                    ],
                    "verb": null,
                    "methodParameters": [
                        {
                            "type": {
                                "type": "JSONObject"
                            },
                            "name": "json"
                        }
                    ],
                    "pathParameters": [
                        
                    ],
                    "isPublic": true,
                    "code": {
                        "code": {
                            "JAVA": "\n\t\tthis.clazz =JSONUtils.extractJSONString(json.get(\"class\"));\n\t\tthis.id =JSONUtils.extractJSONLong(json.get(\"id\"));\n\t\tthis.created =JSONUtils.extractJSONDate(json.get(\"created\"));\n\t\tthis.updated =JSONUtils.extractJSONDate(json.get(\"updated\"));\n\t\tthis.deleted =JSONUtils.extractJSONDate(json.get(\"deleted\"));\n\t\tthis.location =JSONUtils.extractJSONString(json.get(\"location\"));\n\t\tthis.image =JSONUtils.extractJSONLong(json.get(\"image\"));\n\t\tthis.geometryCompression =JSONUtils.extractJSONDouble(json.get(\"geometryCompression\"));\n\t\tthis.project =JSONUtils.extractJSONLong(json.get(\"project\"));\n\t\tthis.container =JSONUtils.extractJSONObject(json.get(\"container\"));\n\t\tthis.user =JSONUtils.extractJSONLong(json.get(\"user\"));\n\t\tthis.nbComments =JSONUtils.extractJSONLong(json.get(\"nbComments\"));\n\t\tthis.area =JSONUtils.extractJSONDouble(json.get(\"area\"));\n\t\tthis.perimeterUnit =JSONUtils.extractJSONInteger(json.get(\"perimeterUnit\"));\n\t\tthis.areaUnit =JSONUtils.extractJSONInteger(json.get(\"areaUnit\"));\n\t\tthis.perimeter =JSONUtils.extractJSONDouble(json.get(\"perimeter\"));\n\t\tthis.centroid =JSONUtils.extractJSONMap(json.get(\"centroid\"));\n\t\tthis.term =JSONUtils.extractJSONList(json.get(\"term\"));\n\t\tthis.similarity =JSONUtils.extractJSONDouble(json.get(\"similarity\"));\n\t\tthis.rate =JSONUtils.extractJSONDouble(json.get(\"rate\"));\n\t\tthis.idTerm =JSONUtils.extractJSONLong(json.get(\"idTerm\"));\n\t\tthis.idExpectedTerm =JSONUtils.extractJSONLong(json.get(\"idExpectedTerm\"));\n\t\tthis.parentIdent =JSONUtils.extractJSONLong(json.get(\"parentIdent\"));\n\t\tthis.parentClassName =JSONUtils.extractJSONString(json.get(\"parentClassName\"));\n\t\tthis.status =JSONUtils.extractJSONInteger(json.get(\"status\"));\n\t\tthis.reviewUser =JSONUtils.extractJSONLong(json.get(\"reviewUser\"));\n\t\tthis.terms =JSONUtils.extractJSONList(json.get(\"terms\"));\n\t\tthis.cropURL =JSONUtils.extractJSONString(json.get(\"cropURL\"));\n\t\tthis.smallCropURL =JSONUtils.extractJSONString(json.get(\"smallCropURL\"));\n\t\tthis.url =JSONUtils.extractJSONString(json.get(\"url\"));\n\t\tthis.imageURL =JSONUtils.extractJSONString(json.get(\"imageURL\"));\n\t\tthis.reviewed =JSONUtils.extractJSONBoolean(json.get(\"reviewed\"));\n\n    "
                        }
                    },
                    "allParameters": [
                        {
                            "type": {
                                "type": "JSONObject"
                            },
                            "name": "json"
                        }
                    ],
                    "path": null,
                    "name": "build"
                },
                {
                    "isStatic": false,
                    "isAbstract": false,
                    "type": {
                        "type": "JSONObject"
                    },
                    "queryParameters": [
                        
                    ],
                    "verb": null,
                    "methodParameters": [
                        
                    ],
                    "pathParameters": [
                        
                    ],
                    "isPublic": true,
                    "code": {
                        "code": {
                            "JAVA": "\n\t\tJSONObject json=new JSONObject();\n\t\tjson.put(\"class\",JSONUtils.formatJSON(this.clazz));\n\t\tjson.put(\"id\",JSONUtils.formatJSON(this.id));\n\t\tjson.put(\"created\",JSONUtils.formatJSON(this.created));\n\t\tjson.put(\"updated\",JSONUtils.formatJSON(this.updated));\n\t\tjson.put(\"deleted\",JSONUtils.formatJSON(this.deleted));\n\t\tjson.put(\"location\",JSONUtils.formatJSON(this.location));\n\t\tjson.put(\"image\",JSONUtils.formatJSON(this.image));\n\t\tjson.put(\"geometryCompression\",JSONUtils.formatJSON(this.geometryCompression));\n\t\tjson.put(\"project\",JSONUtils.formatJSON(this.project));\n\t\tjson.put(\"container\",JSONUtils.formatJSON(this.container));\n\t\tjson.put(\"user\",JSONUtils.formatJSON(this.user));\n\t\tjson.put(\"nbComments\",JSONUtils.formatJSON(this.nbComments));\n\t\tjson.put(\"area\",JSONUtils.formatJSON(this.area));\n\t\tjson.put(\"perimeterUnit\",JSONUtils.formatJSON(this.perimeterUnit));\n\t\tjson.put(\"areaUnit\",JSONUtils.formatJSON(this.areaUnit));\n\t\tjson.put(\"perimeter\",JSONUtils.formatJSON(this.perimeter));\n\t\tjson.put(\"centroid\",JSONUtils.formatJSON(this.centroid));\n\t\tjson.put(\"term\",JSONUtils.formatJSON(this.term));\n\t\tjson.put(\"similarity\",JSONUtils.formatJSON(this.similarity));\n\t\tjson.put(\"rate\",JSONUtils.formatJSON(this.rate));\n\t\tjson.put(\"idTerm\",JSONUtils.formatJSON(this.idTerm));\n\t\tjson.put(\"idExpectedTerm\",JSONUtils.formatJSON(this.idExpectedTerm));\n\t\tjson.put(\"parentIdent\",JSONUtils.formatJSON(this.parentIdent));\n\t\tjson.put(\"parentClassName\",JSONUtils.formatJSON(this.parentClassName));\n\t\tjson.put(\"status\",JSONUtils.formatJSON(this.status));\n\t\tjson.put(\"reviewUser\",JSONUtils.formatJSON(this.reviewUser));\n\t\tjson.put(\"terms\",JSONUtils.formatJSON(this.terms));\n\t\tjson.put(\"cropURL\",JSONUtils.formatJSON(this.cropURL));\n\t\tjson.put(\"smallCropURL\",JSONUtils.formatJSON(this.smallCropURL));\n\t\tjson.put(\"url\",JSONUtils.formatJSON(this.url));\n\t\tjson.put(\"imageURL\",JSONUtils.formatJSON(this.imageURL));\n\t\tjson.put(\"reviewed\",JSONUtils.formatJSON(this.reviewed));\n\n\t\treturn json;\n    "
                        }
                    },
                    "allParameters": [
                        
                    ],
                    "path": null,
                    "name": "toJSON"
                },
                {
                    "isStatic": true,
                    "isAbstract": false,
                    "type": {
                        "type": "ReviewedAnnotation"
                    },
                    "queryParameters": [
                        
                    ],
                    "verb": "GET",
                    "methodParameters": [
                        {
                            "type": {
                                "type": "Server"
                            },
                            "name": "server"
                        }
                    ],
                    "pathParameters": [
                        {
                            "type": {
                                "type": "Long"
                            },
                            "name": "id"
                        }
                    ],
                    "isPublic": true,
                    "code": {
                        "code": {
                            "JAVA": "\n\t\tString path = \"/api/reviewedannotation/{id}.json?\";\n\t\tpath = path.replace(\"{id}\",id+\"\");\n\n\t\tJSONObject json = server.doGET(path);\n\t\tReviewedAnnotation domain = new ReviewedAnnotation();\n\t\tdomain.build(json);\n\t\treturn domain;\n\n    "
                        }
                    },
                    "allParameters": [
                        {
                            "type": {
                                "type": "Server"
                            },
                            "name": "server"
                        },
                        {
                            "type": {
                                "type": "Long"
                            },
                            "name": "id"
                        }
                    ],
                    "path": "/api/reviewedannotation/{id}.json",
                    "name": "get"
                },
                {
                    "isStatic": true,
                    "isAbstract": false,
                    "type": {
                        "type": "ReviewedAnnotation"
                    },
                    "queryParameters": [
                        
                    ],
                    "verb": "GET",
                    "methodParameters": [
                        {
                            "type": {
                                "type": "Server"
                            },
                            "name": "server"
                        }
                    ],
                    "pathParameters": [
                        {
                            "type": {
                                "type": "Long"
                            },
                            "name": "image"
                        }
                    ],
                    "isPublic": true,
                    "code": {
                        "code": {
                            "JAVA": "\n\t\tthrow new Exception(\"Not yet implemented\");\n    "
                        }
                    },
                    "allParameters": [
                        {
                            "type": {
                                "type": "Server"
                            },
                            "name": "server"
                        },
                        {
                            "type": {
                                "type": "Long"
                            },
                            "name": "image"
                        }
                    ],
                    "path": "/api/imageinstance/{image}/reviewedannotation/stats.json",
                    "name": "stats"
                },
                {
                    "isStatic": true,
                    "isAbstract": false,
                    "type": {
                        "type": "File"
                    },
                    "queryParameters": [
                        {
                            "type": {
                                "type": "List"
                            },
                            "name": "terms"
                        },
                        {
                            "type": {
                                "type": "List"
                            },
                            "name": "users"
                        },
                        {
                            "type": {
                                "type": "List"
                            },
                            "name": "images"
                        },
                        {
                            "type": {
                                "type": "String"
                            },
                            "name": "format"
                        }
                    ],
                    "verb": null,
                    "methodParameters": [
                        {
                            "type": {
                                "type": "Server"
                            },
                            "name": "server"
                        }
                    ],
                    "pathParameters": [
                        {
                            "type": {
                                "type": "Long"
                            },
                            "name": "id"
                        }
                    ],
                    "isPublic": true,
                    "code": {
                        "code": {
                            "JAVA": "\n\t\tthrow new Exception(\"Not yet implemented\");\n    "
                        }
                    },
                    "allParameters": [
                        {
                            "type": {
                                "type": "Server"
                            },
                            "name": "server"
                        },
                        {
                            "type": {
                                "type": "Long"
                            },
                            "name": "id"
                        },
                        {
                            "type": {
                                "type": "List"
                            },
                            "name": "terms"
                        },
                        {
                            "type": {
                                "type": "List"
                            },
                            "name": "users"
                        },
                        {
                            "type": {
                                "type": "List"
                            },
                            "name": "images"
                        },
                        {
                            "type": {
                                "type": "String"
                            },
                            "name": "format"
                        }
                    ],
                    "path": "/rest reviewed annotation.json",
                    "name": "downloadDocumentByProject"
                },
                {
                    "isStatic": true,
                    "isAbstract": false,
                    "type": {
                        "type": "File"
                    },
                    "queryParameters": [
                        
                    ],
                    "verb": "GET",
                    "methodParameters": [
                        {
                            "type": {
                                "type": "Server"
                            },
                            "name": "server"
                        }
                    ],
                    "pathParameters": [
                        {
                            "type": {
                                "type": "Long"
                            },
                            "name": "id"
                        },
                        {
                            "type": {
                                "type": "Integer"
                            },
                            "name": "max_size"
                        },
                        {
                            "type": {
                                "type": "Integer"
                            },
                            "name": "zoom"
                        },
                        {
                            "type": {
                                "type": "Boolean"
                            },
                            "name": "draw"
                        }
                    ],
                    "isPublic": true,
                    "code": {
                        "code": {
                            "JAVA": "\n\t\tthrow new Exception(\"Not yet implemented\");\n    "
                        }
                    },
                    "allParameters": [
                        {
                            "type": {
                                "type": "Server"
                            },
                            "name": "server"
                        },
                        {
                            "type": {
                                "type": "Long"
                            },
                            "name": "id"
                        },
                        {
                            "type": {
                                "type": "Integer"
                            },
                            "name": "max_size"
                        },
                        {
                            "type": {
                                "type": "Integer"
                            },
                            "name": "zoom"
                        },
                        {
                            "type": {
                                "type": "Boolean"
                            },
                            "name": "draw"
                        }
                    ],
                    "path": "/api/reviewedannotation/{id}/crop.json",
                    "name": "crop"
                },
                {
                    "isStatic": true,
                    "isAbstract": false,
                    "type": {
                        "type": "Total:x"
                    },
                    "queryParameters": [
                        
                    ],
                    "verb": "GET",
                    "methodParameters": [
                        {
                            "type": {
                                "type": "Server"
                            },
                            "name": "server"
                        }
                    ],
                    "pathParameters": [
                        
                    ],
                    "isPublic": true,
                    "code": {
                        "code": {
                            "JAVA": "\n\t\tthrow new Exception(\"Not yet implemented\");\n    "
                        }
                    },
                    "allParameters": [
                        {
                            "type": {
                                "type": "Server"
                            },
                            "name": "server"
                        }
                    ],
                    "path": "/api/user/{id}/reviewedannotation/count.json",
                    "name": "countByUser"
                },
                {
                    "isStatic": true,
                    "isAbstract": false,
                    "type": {
                        "type": "ReviewedAnnotation"
                    },
                    "queryParameters": [
                        
                    ],
                    "verb": "PUT",
                    "methodParameters": [
                        {
                            "type": {
                                "type": "Server"
                            },
                            "name": "server"
                        }
                    ],
                    "pathParameters": [
                        {
                            "type": {
                                "type": "Long"
                            },
                            "name": "id"
                        }
                    ],
                    "isPublic": true,
                    "code": {
                        "code": {
                            "JAVA": "\n\t\tthrow new Exception(\"Not yet implemented\");\n    "
                        }
                    },
                    "allParameters": [
                        {
                            "type": {
                                "type": "Server"
                            },
                            "name": "server"
                        },
                        {
                            "type": {
                                "type": "Long"
                            },
                            "name": "id"
                        }
                    ],
                    "path": "/api/imageinstance/{id}/review.json",
                    "name": "startImageInstanceReview"
                },
                {
                    "isStatic": true,
                    "isAbstract": false,
                    "type": {
                        "type": "ReviewedAnnotation"
                    },
                    "queryParameters": [
                        {
                            "type": {
                                "type": "Boolean"
                            },
                            "name": "cancel"
                        }
                    ],
                    "verb": "DELETE",
                    "methodParameters": [
                        {
                            "type": {
                                "type": "Server"
                            },
                            "name": "server"
                        }
                    ],
                    "pathParameters": [
                        {
                            "type": {
                                "type": "Long"
                            },
                            "name": "id"
                        }
                    ],
                    "isPublic": true,
                    "code": {
                        "code": {
                            "JAVA": "\n\t\tthrow new Exception(\"Not yet implemented\");\n    "
                        }
                    },
                    "allParameters": [
                        {
                            "type": {
                                "type": "Server"
                            },
                            "name": "server"
                        },
                        {
                            "type": {
                                "type": "Long"
                            },
                            "name": "id"
                        },
                        {
                            "type": {
                                "type": "Boolean"
                            },
                            "name": "cancel"
                        }
                    ],
                    "path": "/api/imageinstance/{id}/review.json",
                    "name": "stopImageInstanceReview"
                },
                {
                    "isStatic": true,
                    "isAbstract": false,
                    "type": {
                        "type": "ReviewedAnnotation"
                    },
                    "queryParameters": [
                        {
                            "type": {
                                "type": "List"
                            },
                            "name": "POST JSON (terms)"
                        }
                    ],
                    "verb": "PUT",
                    "methodParameters": [
                        {
                            "type": {
                                "type": "Server"
                            },
                            "name": "server"
                        }
                    ],
                    "pathParameters": [
                        {
                            "type": {
                                "type": "Long"
                            },
                            "name": "id"
                        }
                    ],
                    "isPublic": true,
                    "code": {
                        "code": {
                            "JAVA": "\n\t\tthrow new Exception(\"Not yet implemented\");\n    "
                        }
                    },
                    "allParameters": [
                        {
                            "type": {
                                "type": "Server"
                            },
                            "name": "server"
                        },
                        {
                            "type": {
                                "type": "Long"
                            },
                            "name": "id"
                        },
                        {
                            "type": {
                                "type": "List"
                            },
                            "name": "POST JSON (terms)"
                        }
                    ],
                    "path": "/api/annotation/{id}/review.json",
                    "name": "addAnnotationReview"
                },
                {
                    "isStatic": true,
                    "isAbstract": false,
                    "type": {
                        "type": "ReviewedAnnotation"
                    },
                    "queryParameters": [
                        
                    ],
                    "verb": "DELETE",
                    "methodParameters": [
                        {
                            "type": {
                                "type": "Server"
                            },
                            "name": "server"
                        }
                    ],
                    "pathParameters": [
                        {
                            "type": {
                                "type": "Long"
                            },
                            "name": "id"
                        }
                    ],
                    "isPublic": true,
                    "code": {
                        "code": {
                            "JAVA": "\n\t\tthrow new Exception(\"Not yet implemented\");\n    "
                        }
                    },
                    "allParameters": [
                        {
                            "type": {
                                "type": "Server"
                            },
                            "name": "server"
                        },
                        {
                            "type": {
                                "type": "Long"
                            },
                            "name": "id"
                        }
                    ],
                    "path": "/api/annotation/{id}/review.json",
                    "name": "deleteAnnotationReview"
                },
                {
                    "isStatic": true,
                    "isAbstract": false,
                    "type": {
                        "type": "ReviewedAnnotation"
                    },
                    "queryParameters": [
                        
                    ],
                    "verb": "PUT",
                    "methodParameters": [
                        {
                            "type": {
                                "type": "Server"
                            },
                            "name": "server"
                        }
                    ],
                    "pathParameters": [
                        {
                            "type": {
                                "type": "Long"
                            },
                            "name": "image"
                        },
                        {
                            "type": {
                                "type": "List"
                            },
                            "name": "users"
                        }
                    ],
                    "isPublic": true,
                    "code": {
                        "code": {
                            "JAVA": "\n\t\tthrow new Exception(\"Not yet implemented\");\n    "
                        }
                    },
                    "allParameters": [
                        {
                            "type": {
                                "type": "Server"
                            },
                            "name": "server"
                        },
                        {
                            "type": {
                                "type": "Long"
                            },
                            "name": "image"
                        },
                        {
                            "type": {
                                "type": "List"
                            },
                            "name": "users"
                        }
                    ],
                    "path": "/api/imageinstance/{image}/annotation/review.json",
                    "name": "reviewLayer"
                },
                {
                    "isStatic": true,
                    "isAbstract": false,
                    "type": {
                        "type": "ReviewedAnnotation"
                    },
                    "queryParameters": [
                        
                    ],
                    "verb": "DELETE",
                    "methodParameters": [
                        {
                            "type": {
                                "type": "Server"
                            },
                            "name": "server"
                        }
                    ],
                    "pathParameters": [
                        {
                            "type": {
                                "type": "Long"
                            },
                            "name": "image"
                        },
                        {
                            "type": {
                                "type": "List"
                            },
                            "name": "users"
                        }
                    ],
                    "isPublic": true,
                    "code": {
                        "code": {
                            "JAVA": "\n\t\tthrow new Exception(\"Not yet implemented\");\n    "
                        }
                    },
                    "allParameters": [
                        {
                            "type": {
                                "type": "Server"
                            },
                            "name": "server"
                        },
                        {
                            "type": {
                                "type": "Long"
                            },
                            "name": "image"
                        },
                        {
                            "type": {
                                "type": "List"
                            },
                            "name": "users"
                        }
                    ],
                    "path": "/api/imageinstance/{image}/annotation/review.json",
                    "name": "unReviewLayer"
                },
                {
                    "isStatic": false,
                    "isAbstract": false,
                    "type": {
                        "type": "Void"
                    },
                    "queryParameters": [
                        
                    ],
                    "verb": "POST",
                    "methodParameters": [
                        {
                            "type": {
                                "type": "Server"
                            },
                            "name": "server"
                        }
                    ],
                    "pathParameters": [
                        
                    ],
                    "isPublic": true,
                    "code": {
                        "code": {
                            "JAVA": "\n\t\tString path = \"/api/user/{iduser}/reviewedannotation.json?\";\n\n\t\tJSONObject json = server.doPOST(path,this.toJSON());\n\n\t\tthis.build((JSONObject)json.get(\"reviewedannotation\"));\n\n    "
                        }
                    },
                    "allParameters": [
                        {
                            "type": {
                                "type": "Server"
                            },
                            "name": "server"
                        }
                    ],
                    "path": "/api/user/{iduser}/reviewedannotation.json",
                    "name": "add"
                },
                {
                    "isStatic": true,
                    "isAbstract": false,
                    "type": {
                        "type": "ReviewedAnnotation"
                    },
                    "queryParameters": [
                        {
                            "type": {
                                "type": "Integer"
                            },
                            "name": "max"
                        },
                        {
                            "type": {
                                "type": "Integer"
                            },
                            "name": "offset"
                        }
                    ],
                    "verb": "GET",
                    "methodParameters": [
                        {
                            "type": {
                                "type": "Server"
                            },
                            "name": "server"
                        }
                    ],
                    "pathParameters": [
                        
                    ],
                    "isPublic": true,
                    "code": {
                        "code": {
                            "JAVA": "\n\t\tthrow new Exception(\"Not yet implemented\");\n    "
                        }
                    },
                    "allParameters": [
                        {
                            "type": {
                                "type": "Server"
                            },
                            "name": "server"
                        },
                        {
                            "type": {
                                "type": "Integer"
                            },
                            "name": "max"
                        },
                        {
                            "type": {
                                "type": "Integer"
                            },
                            "name": "offset"
                        }
                    ],
                    "path": "/api/reviewedannotation.json",
                    "name": "list"
                },
                {
                    "isStatic": false,
                    "isAbstract": false,
                    "type": {
                        "type": "Void"
                    },
                    "queryParameters": [
                        
                    ],
                    "verb": "DELETE",
                    "methodParameters": [
                        {
                            "type": {
                                "type": "Server"
                            },
                            "name": "server"
                        }
                    ],
                    "pathParameters": [
                        
                    ],
                    "isPublic": true,
                    "code": {
                        "code": {
                            "JAVA": "\n\t\tString path = \"/api/reviewedannotation/{id}.json?\";\n\t\tpath = path.replace(\"{id}\",getId()+\"\");\n\n\t\tserver.doDELETE(path);\n\t\tbuild(new JSONObject());\n\n    "
                        }
                    },
                    "allParameters": [
                        {
                            "type": {
                                "type": "Server"
                            },
                            "name": "server"
                        }
                    ],
                    "path": "/api/reviewedannotation/{id}.json",
                    "name": "delete"
                },
                {
                    "isStatic": false,
                    "isAbstract": false,
                    "type": {
                        "type": "Void"
                    },
                    "queryParameters": [
                        
                    ],
                    "verb": "PUT",
                    "methodParameters": [
                        {
                            "type": {
                                "type": "Server"
                            },
                            "name": "server"
                        }
                    ],
                    "pathParameters": [
                        
                    ],
                    "isPublic": true,
                    "code": {
                        "code": {
                            "JAVA": "\n\t\tString path = \"/api/reviewedannotation/{id}.json?\";\n\t\tpath = path.replace(\"{id}\",getId()+\"\");\n\n\t\tJSONObject json = server.doPUT(path,this.toJSON());\n\n\t\tthis.build((JSONObject)json.get(\"reviewedannotation\"));\n\n    "
                        }
                    },
                    "allParameters": [
                        {
                            "type": {
                                "type": "Server"
                            },
                            "name": "server"
                        }
                    ],
                    "path": "/api/reviewedannotation/{id}.json",
                    "name": "edit"
                }
            ],
            "name": "AbstractReviewedAnnotation"
        },
        {
            "fullPackage": "be.cytomine.client.abst",
            "isAbstract": true,
            "comment": {
                "version": "0.1",
                "description": "An region of interest on a picture",
                "author": "ClientBuilder (Lo\u00EFc Rollus)"
            },
            "fields": [
                {
                    "useInConstructor": false,
                    "type": {
                        "type": "String"
                    },
                    "useInSetter": false,
                    "comment": {
                        "description": "The full class name of the domain"
                    },
                    "useInGetter": true,
                    "name": "clazz"
                },
                {
                    "useInConstructor": false,
                    "type": {
                        "type": "Long"
                    },
                    "useInSetter": false,
                    "comment": {
                        "description": "The domain id"
                    },
                    "useInGetter": true,
                    "name": "id"
                },
                {
                    "useInConstructor": false,
                    "type": {
                        "type": "Date"
                    },
                    "useInSetter": false,
                    "comment": {
                        "description": "The date of the domain creation"
                    },
                    "useInGetter": true,
                    "name": "created"
                },
                {
                    "useInConstructor": false,
                    "type": {
                        "type": "Date"
                    },
                    "useInSetter": false,
                    "comment": {
                        "description": "The date of the domain modification"
                    },
                    "useInGetter": true,
                    "name": "updated"
                },
                {
                    "useInConstructor": false,
                    "type": {
                        "type": "Date"
                    },
                    "useInSetter": false,
                    "comment": {
                        "description": "When domain was removed from Cytomine"
                    },
                    "useInGetter": true,
                    "name": "deleted"
                },
                {
                    "useInConstructor": true,
                    "type": {
                        "type": "String"
                    },
                    "useInSetter": true,
                    "comment": {
                        "description": "The WKT of the annotation form"
                    },
                    "useInGetter": true,
                    "name": "location"
                },
                {
                    "useInConstructor": true,
                    "type": {
                        "type": "Long"
                    },
                    "useInSetter": true,
                    "comment": {
                        "description": "The image id of the annotation"
                    },
                    "useInGetter": true,
                    "name": "image"
                },
                {
                    "useInConstructor": false,
                    "type": {
                        "type": "Double"
                    },
                    "useInSetter": true,
                    "comment": {
                        "description": "The geometry compression rate used to simplify the annotation (during creation)"
                    },
                    "useInGetter": true,
                    "name": "geometryCompression"
                },
                {
                    "useInConstructor": true,
                    "type": {
                        "type": "Long"
                    },
                    "useInSetter": true,
                    "comment": {
                        "description": "The project id of the annotation"
                    },
                    "useInGetter": true,
                    "name": "project"
                },
                {
                    "useInConstructor": false,
                    "type": {
                        "type": "Object"
                    },
                    "useInSetter": true,
                    "comment": {
                        "description": "Undefined"
                    },
                    "useInGetter": true,
                    "name": "container"
                },
                {
                    "useInConstructor": true,
                    "type": {
                        "type": "Long"
                    },
                    "useInSetter": true,
                    "comment": {
                        "description": "User id that created this annotation"
                    },
                    "useInGetter": true,
                    "name": "user"
                },
                {
                    "useInConstructor": false,
                    "type": {
                        "type": "Long"
                    },
                    "useInSetter": false,
                    "comment": {
                        "description": "The number of comments added by a user on this annotation"
                    },
                    "useInGetter": true,
                    "name": "nbComments"
                },
                {
                    "useInConstructor": false,
                    "type": {
                        "type": "Double"
                    },
                    "useInSetter": false,
                    "comment": {
                        "description": "The annotation form area"
                    },
                    "useInGetter": true,
                    "name": "area"
                },
                {
                    "useInConstructor": false,
                    "type": {
                        "type": "Integer"
                    },
                    "useInSetter": false,
                    "comment": {
                        "description": "The annotation unit used for perimeter (pixels=0,mm=2,)"
                    },
                    "useInGetter": true,
                    "name": "perimeterUnit"
                },
                {
                    "useInConstructor": false,
                    "type": {
                        "type": "Integer"
                    },
                    "useInSetter": false,
                    "comment": {
                        "description": "The annotation unit used for area (pixels\u00B2=1,micron\u00B2=3)"
                    },
                    "useInGetter": true,
                    "name": "areaUnit"
                },
                {
                    "useInConstructor": false,
                    "type": {
                        "type": "Double"
                    },
                    "useInSetter": false,
                    "comment": {
                        "description": "The annotation form perimeter"
                    },
                    "useInGetter": true,
                    "name": "perimeter"
                },
                {
                    "useInConstructor": false,
                    "type": {
                        "type": "Map"
                    },
                    "useInSetter": false,
                    "comment": {
                        "description": "X,Y coord of the annotation centroid"
                    },
                    "useInGetter": true,
                    "name": "centroid"
                },
                {
                    "useInConstructor": false,
                    "type": {
                        "type": "List"
                    },
                    "useInSetter": true,
                    "comment": {
                        "description": "List of term id mapped with this annotation"
                    },
                    "useInGetter": true,
                    "name": "term"
                },
                {
                    "useInConstructor": false,
                    "type": {
                        "type": "Double"
                    },
                    "useInSetter": false,
                    "comment": {
                        "description": "The similarity rate for this annotation compare to another annotation (from retrieval)"
                    },
                    "useInGetter": true,
                    "name": "similarity"
                },
                {
                    "useInConstructor": false,
                    "type": {
                        "type": "Double"
                    },
                    "useInSetter": false,
                    "comment": {
                        "description": "The reliability value estimated by the software for the mapping between annotation and term"
                    },
                    "useInGetter": true,
                    "name": "rate"
                },
                {
                    "useInConstructor": false,
                    "type": {
                        "type": "Long"
                    },
                    "useInSetter": false,
                    "comment": {
                        "description": "The id of the term map with this annotation by a the software"
                    },
                    "useInGetter": true,
                    "name": "idTerm"
                },
                {
                    "useInConstructor": false,
                    "type": {
                        "type": "Long"
                    },
                    "useInSetter": false,
                    "comment": {
                        "description": "The id of the real term (corresponding to the term add by a real user)"
                    },
                    "useInGetter": true,
                    "name": "idExpectedTerm"
                },
                {
                    "useInConstructor": false,
                    "type": {
                        "type": "String"
                    },
                    "useInSetter": false,
                    "comment": {
                        "description": "URL to get the annotation crop"
                    },
                    "useInGetter": true,
                    "name": "cropURL"
                },
                {
                    "useInConstructor": false,
                    "type": {
                        "type": "String"
                    },
                    "useInSetter": false,
                    "comment": {
                        "description": "URL to get a small annotation crop (<256px)"
                    },
                    "useInGetter": true,
                    "name": "smallCropURL"
                },
                {
                    "useInConstructor": false,
                    "type": {
                        "type": "String"
                    },
                    "useInSetter": false,
                    "comment": {
                        "description": "URL to go to the annotation on the image"
                    },
                    "useInGetter": true,
                    "name": "url"
                },
                {
                    "useInConstructor": false,
                    "type": {
                        "type": "String"
                    },
                    "useInSetter": false,
                    "comment": {
                        "description": "URL to go to the image"
                    },
                    "useInGetter": true,
                    "name": "imageURL"
                },
                {
                    "useInConstructor": false,
                    "type": {
                        "type": "Boolean"
                    },
                    "useInSetter": false,
                    "comment": {
                        "description": "True if annotation has at least one review"
                    },
                    "useInGetter": true,
                    "name": "reviewed"
                }
            ],
            "domainName": "RoiAnnotation",
            "methods": [
                {
                    "isStatic": false,
                    "isAbstract": false,
                    "type": {
                        "type": "Void"
                    },
                    "queryParameters": [
                        
                    ],
                    "verb": null,
                    "methodParameters": [
                        {
                            "type": {
                                "type": "String"
                            },
                            "name": "location"
                        },
                        {
                            "type": {
                                "type": "Long"
                            },
                            "name": "image"
                        },
                        {
                            "type": {
                                "type": "Long"
                            },
                            "name": "project"
                        },
                        {
                            "type": {
                                "type": "Long"
                            },
                            "name": "user"
                        }
                    ],
                    "pathParameters": [
                        
                    ],
                    "isPublic": true,
                    "code": {
                        "code": {
                            "JAVA": "\n\t\tthis.location=location;\n\t\tthis.image=image;\n\t\tthis.project=project;\n\t\tthis.user=user;\n\n    "
                        }
                    },
                    "allParameters": [
                        {
                            "type": {
                                "type": "String"
                            },
                            "name": "location"
                        },
                        {
                            "type": {
                                "type": "Long"
                            },
                            "name": "image"
                        },
                        {
                            "type": {
                                "type": "Long"
                            },
                            "name": "project"
                        },
                        {
                            "type": {
                                "type": "Long"
                            },
                            "name": "user"
                        }
                    ],
                    "path": null,
                    "name": "build"
                },
                {
                    "isStatic": false,
                    "isAbstract": false,
                    "type": {
                        "type": "Void"
                    },
                    "queryParameters": [
                        
                    ],
                    "verb": null,
                    "methodParameters": [
                        {
                            "type": {
                                "type": "JSONObject"
                            },
                            "name": "json"
                        }
                    ],
                    "pathParameters": [
                        
                    ],
                    "isPublic": true,
                    "code": {
                        "code": {
                            "JAVA": "\n\t\tthis.clazz =JSONUtils.extractJSONString(json.get(\"class\"));\n\t\tthis.id =JSONUtils.extractJSONLong(json.get(\"id\"));\n\t\tthis.created =JSONUtils.extractJSONDate(json.get(\"created\"));\n\t\tthis.updated =JSONUtils.extractJSONDate(json.get(\"updated\"));\n\t\tthis.deleted =JSONUtils.extractJSONDate(json.get(\"deleted\"));\n\t\tthis.location =JSONUtils.extractJSONString(json.get(\"location\"));\n\t\tthis.image =JSONUtils.extractJSONLong(json.get(\"image\"));\n\t\tthis.geometryCompression =JSONUtils.extractJSONDouble(json.get(\"geometryCompression\"));\n\t\tthis.project =JSONUtils.extractJSONLong(json.get(\"project\"));\n\t\tthis.container =JSONUtils.extractJSONObject(json.get(\"container\"));\n\t\tthis.user =JSONUtils.extractJSONLong(json.get(\"user\"));\n\t\tthis.nbComments =JSONUtils.extractJSONLong(json.get(\"nbComments\"));\n\t\tthis.area =JSONUtils.extractJSONDouble(json.get(\"area\"));\n\t\tthis.perimeterUnit =JSONUtils.extractJSONInteger(json.get(\"perimeterUnit\"));\n\t\tthis.areaUnit =JSONUtils.extractJSONInteger(json.get(\"areaUnit\"));\n\t\tthis.perimeter =JSONUtils.extractJSONDouble(json.get(\"perimeter\"));\n\t\tthis.centroid =JSONUtils.extractJSONMap(json.get(\"centroid\"));\n\t\tthis.term =JSONUtils.extractJSONList(json.get(\"term\"));\n\t\tthis.similarity =JSONUtils.extractJSONDouble(json.get(\"similarity\"));\n\t\tthis.rate =JSONUtils.extractJSONDouble(json.get(\"rate\"));\n\t\tthis.idTerm =JSONUtils.extractJSONLong(json.get(\"idTerm\"));\n\t\tthis.idExpectedTerm =JSONUtils.extractJSONLong(json.get(\"idExpectedTerm\"));\n\t\tthis.cropURL =JSONUtils.extractJSONString(json.get(\"cropURL\"));\n\t\tthis.smallCropURL =JSONUtils.extractJSONString(json.get(\"smallCropURL\"));\n\t\tthis.url =JSONUtils.extractJSONString(json.get(\"url\"));\n\t\tthis.imageURL =JSONUtils.extractJSONString(json.get(\"imageURL\"));\n\t\tthis.reviewed =JSONUtils.extractJSONBoolean(json.get(\"reviewed\"));\n\n    "
                        }
                    },
                    "allParameters": [
                        {
                            "type": {
                                "type": "JSONObject"
                            },
                            "name": "json"
                        }
                    ],
                    "path": null,
                    "name": "build"
                },
                {
                    "isStatic": false,
                    "isAbstract": false,
                    "type": {
                        "type": "JSONObject"
                    },
                    "queryParameters": [
                        
                    ],
                    "verb": null,
                    "methodParameters": [
                        
                    ],
                    "pathParameters": [
                        
                    ],
                    "isPublic": true,
                    "code": {
                        "code": {
                            "JAVA": "\n\t\tJSONObject json=new JSONObject();\n\t\tjson.put(\"class\",JSONUtils.formatJSON(this.clazz));\n\t\tjson.put(\"id\",JSONUtils.formatJSON(this.id));\n\t\tjson.put(\"created\",JSONUtils.formatJSON(this.created));\n\t\tjson.put(\"updated\",JSONUtils.formatJSON(this.updated));\n\t\tjson.put(\"deleted\",JSONUtils.formatJSON(this.deleted));\n\t\tjson.put(\"location\",JSONUtils.formatJSON(this.location));\n\t\tjson.put(\"image\",JSONUtils.formatJSON(this.image));\n\t\tjson.put(\"geometryCompression\",JSONUtils.formatJSON(this.geometryCompression));\n\t\tjson.put(\"project\",JSONUtils.formatJSON(this.project));\n\t\tjson.put(\"container\",JSONUtils.formatJSON(this.container));\n\t\tjson.put(\"user\",JSONUtils.formatJSON(this.user));\n\t\tjson.put(\"nbComments\",JSONUtils.formatJSON(this.nbComments));\n\t\tjson.put(\"area\",JSONUtils.formatJSON(this.area));\n\t\tjson.put(\"perimeterUnit\",JSONUtils.formatJSON(this.perimeterUnit));\n\t\tjson.put(\"areaUnit\",JSONUtils.formatJSON(this.areaUnit));\n\t\tjson.put(\"perimeter\",JSONUtils.formatJSON(this.perimeter));\n\t\tjson.put(\"centroid\",JSONUtils.formatJSON(this.centroid));\n\t\tjson.put(\"term\",JSONUtils.formatJSON(this.term));\n\t\tjson.put(\"similarity\",JSONUtils.formatJSON(this.similarity));\n\t\tjson.put(\"rate\",JSONUtils.formatJSON(this.rate));\n\t\tjson.put(\"idTerm\",JSONUtils.formatJSON(this.idTerm));\n\t\tjson.put(\"idExpectedTerm\",JSONUtils.formatJSON(this.idExpectedTerm));\n\t\tjson.put(\"cropURL\",JSONUtils.formatJSON(this.cropURL));\n\t\tjson.put(\"smallCropURL\",JSONUtils.formatJSON(this.smallCropURL));\n\t\tjson.put(\"url\",JSONUtils.formatJSON(this.url));\n\t\tjson.put(\"imageURL\",JSONUtils.formatJSON(this.imageURL));\n\t\tjson.put(\"reviewed\",JSONUtils.formatJSON(this.reviewed));\n\n\t\treturn json;\n    "
                        }
                    },
                    "allParameters": [
                        
                    ],
                    "path": null,
                    "name": "toJSON"
                },
                {
                    "isStatic": true,
                    "isAbstract": false,
                    "type": {
                        "type": "RoiAnnotation"
                    },
                    "queryParameters": [
                        
                    ],
                    "verb": "GET",
                    "methodParameters": [
                        {
                            "type": {
                                "type": "Server"
                            },
                            "name": "server"
                        }
                    ],
                    "pathParameters": [
                        {
                            "type": {
                                "type": "Long"
                            },
                            "name": "id"
                        }
                    ],
                    "isPublic": true,
                    "code": {
                        "code": {
                            "JAVA": "\n\t\tString path = \"/api/roiannotation/{id}.json?\";\n\t\tpath = path.replace(\"{id}\",id+\"\");\n\n\t\tJSONObject json = server.doGET(path);\n\t\tRoiAnnotation domain = new RoiAnnotation();\n\t\tdomain.build(json);\n\t\treturn domain;\n\n    "
                        }
                    },
                    "allParameters": [
                        {
                            "type": {
                                "type": "Server"
                            },
                            "name": "server"
                        },
                        {
                            "type": {
                                "type": "Long"
                            },
                            "name": "id"
                        }
                    ],
                    "path": "/api/roiannotation/{id}.json",
                    "name": "get"
                },
                {
                    "isStatic": true,
                    "isAbstract": false,
                    "type": {
                        "type": "File"
                    },
                    "queryParameters": [
                        
                    ],
                    "verb": "GET",
                    "methodParameters": [
                        {
                            "type": {
                                "type": "Server"
                            },
                            "name": "server"
                        }
                    ],
                    "pathParameters": [
                        {
                            "type": {
                                "type": "Long"
                            },
                            "name": "id"
                        },
                        {
                            "type": {
                                "type": "Integer"
                            },
                            "name": "max_size"
                        },
                        {
                            "type": {
                                "type": "Integer"
                            },
                            "name": "zoom"
                        },
                        {
                            "type": {
                                "type": "Boolean"
                            },
                            "name": "draw"
                        }
                    ],
                    "isPublic": true,
                    "code": {
                        "code": {
                            "JAVA": "\n\t\tthrow new Exception(\"Not yet implemented\");\n    "
                        }
                    },
                    "allParameters": [
                        {
                            "type": {
                                "type": "Server"
                            },
                            "name": "server"
                        },
                        {
                            "type": {
                                "type": "Long"
                            },
                            "name": "id"
                        },
                        {
                            "type": {
                                "type": "Integer"
                            },
                            "name": "max_size"
                        },
                        {
                            "type": {
                                "type": "Integer"
                            },
                            "name": "zoom"
                        },
                        {
                            "type": {
                                "type": "Boolean"
                            },
                            "name": "draw"
                        }
                    ],
                    "path": "/api/roiannotation/{id}/crop.json",
                    "name": "crop"
                },
                {
                    "isStatic": false,
                    "isAbstract": false,
                    "type": {
                        "type": "Void"
                    },
                    "queryParameters": [
                        
                    ],
                    "verb": "POST",
                    "methodParameters": [
                        {
                            "type": {
                                "type": "Server"
                            },
                            "name": "server"
                        }
                    ],
                    "pathParameters": [
                        
                    ],
                    "isPublic": true,
                    "code": {
                        "code": {
                            "JAVA": "\n\t\tString path = \"/api/roiannotation.json?\";\n\n\t\tJSONObject json = server.doPOST(path,this.toJSON());\n\n\t\tthis.build((JSONObject)json.get(\"roiannotation\"));\n\n    "
                        }
                    },
                    "allParameters": [
                        {
                            "type": {
                                "type": "Server"
                            },
                            "name": "server"
                        }
                    ],
                    "path": "/api/roiannotation.json",
                    "name": "add"
                },
                {
                    "isStatic": false,
                    "isAbstract": false,
                    "type": {
                        "type": "Void"
                    },
                    "queryParameters": [
                        
                    ],
                    "verb": "DELETE",
                    "methodParameters": [
                        {
                            "type": {
                                "type": "Server"
                            },
                            "name": "server"
                        }
                    ],
                    "pathParameters": [
                        
                    ],
                    "isPublic": true,
                    "code": {
                        "code": {
                            "JAVA": "\n\t\tString path = \"/api/roiannotation/{id}.json?\";\n\t\tpath = path.replace(\"{id}\",getId()+\"\");\n\n\t\tserver.doDELETE(path);\n\t\tbuild(new JSONObject());\n\n    "
                        }
                    },
                    "allParameters": [
                        {
                            "type": {
                                "type": "Server"
                            },
                            "name": "server"
                        }
                    ],
                    "path": "/api/roiannotation/{id}.json",
                    "name": "delete"
                },
                {
                    "isStatic": false,
                    "isAbstract": false,
                    "type": {
                        "type": "Void"
                    },
                    "queryParameters": [
                        
                    ],
                    "verb": "PUT",
                    "methodParameters": [
                        {
                            "type": {
                                "type": "Server"
                            },
                            "name": "server"
                        }
                    ],
                    "pathParameters": [
                        
                    ],
                    "isPublic": true,
                    "code": {
                        "code": {
                            "JAVA": "\n\t\tString path = \"/api/roiannotation/{id}.json?\";\n\t\tpath = path.replace(\"{id}\",getId()+\"\");\n\n\t\tJSONObject json = server.doPUT(path,this.toJSON());\n\n\t\tthis.build((JSONObject)json.get(\"roiannotation\"));\n\n    "
                        }
                    },
                    "allParameters": [
                        {
                            "type": {
                                "type": "Server"
                            },
                            "name": "server"
                        }
                    ],
                    "path": "/api/roiannotation/{id}.json",
                    "name": "edit"
                }
            ],
            "name": "AbstractRoiAnnotation"
        },
        {
            "fullPackage": "be.cytomine.client.abst",
            "isAbstract": true,
            "comment": {
                "version": "0.1",
                "description": "A sample is a source of image. This is a real thing: blood, a mouse lung,...",
                "author": "ClientBuilder (Lo\u00EFc Rollus)"
            },
            "fields": [
                {
                    "useInConstructor": false,
                    "type": {
                        "type": "String"
                    },
                    "useInSetter": false,
                    "comment": {
                        "description": "The full class name of the domain"
                    },
                    "useInGetter": true,
                    "name": "clazz"
                },
                {
                    "useInConstructor": false,
                    "type": {
                        "type": "Long"
                    },
                    "useInSetter": false,
                    "comment": {
                        "description": "The domain id"
                    },
                    "useInGetter": true,
                    "name": "id"
                },
                {
                    "useInConstructor": false,
                    "type": {
                        "type": "Date"
                    },
                    "useInSetter": false,
                    "comment": {
                        "description": "The date of the domain creation"
                    },
                    "useInGetter": true,
                    "name": "created"
                },
                {
                    "useInConstructor": false,
                    "type": {
                        "type": "Date"
                    },
                    "useInSetter": false,
                    "comment": {
                        "description": "The date of the domain modification"
                    },
                    "useInGetter": true,
                    "name": "updated"
                },
                {
                    "useInConstructor": false,
                    "type": {
                        "type": "Date"
                    },
                    "useInSetter": false,
                    "comment": {
                        "description": "When domain was removed from Cytomine"
                    },
                    "useInGetter": true,
                    "name": "deleted"
                },
                {
                    "useInConstructor": true,
                    "type": {
                        "type": "String"
                    },
                    "useInSetter": true,
                    "comment": {
                        "description": "Sample name"
                    },
                    "useInGetter": true,
                    "name": "name"
                }
            ],
            "domainName": "Sample",
            "methods": [
                {
                    "isStatic": false,
                    "isAbstract": false,
                    "type": {
                        "type": "Void"
                    },
                    "queryParameters": [
                        
                    ],
                    "verb": null,
                    "methodParameters": [
                        {
                            "type": {
                                "type": "String"
                            },
                            "name": "name"
                        }
                    ],
                    "pathParameters": [
                        
                    ],
                    "isPublic": true,
                    "code": {
                        "code": {
                            "JAVA": "\n\t\tthis.name=name;\n\n    "
                        }
                    },
                    "allParameters": [
                        {
                            "type": {
                                "type": "String"
                            },
                            "name": "name"
                        }
                    ],
                    "path": null,
                    "name": "build"
                },
                {
                    "isStatic": false,
                    "isAbstract": false,
                    "type": {
                        "type": "Void"
                    },
                    "queryParameters": [
                        
                    ],
                    "verb": null,
                    "methodParameters": [
                        {
                            "type": {
                                "type": "JSONObject"
                            },
                            "name": "json"
                        }
                    ],
                    "pathParameters": [
                        
                    ],
                    "isPublic": true,
                    "code": {
                        "code": {
                            "JAVA": "\n\t\tthis.clazz =JSONUtils.extractJSONString(json.get(\"class\"));\n\t\tthis.id =JSONUtils.extractJSONLong(json.get(\"id\"));\n\t\tthis.created =JSONUtils.extractJSONDate(json.get(\"created\"));\n\t\tthis.updated =JSONUtils.extractJSONDate(json.get(\"updated\"));\n\t\tthis.deleted =JSONUtils.extractJSONDate(json.get(\"deleted\"));\n\t\tthis.name =JSONUtils.extractJSONString(json.get(\"name\"));\n\n    "
                        }
                    },
                    "allParameters": [
                        {
                            "type": {
                                "type": "JSONObject"
                            },
                            "name": "json"
                        }
                    ],
                    "path": null,
                    "name": "build"
                },
                {
                    "isStatic": false,
                    "isAbstract": false,
                    "type": {
                        "type": "JSONObject"
                    },
                    "queryParameters": [
                        
                    ],
                    "verb": null,
                    "methodParameters": [
                        
                    ],
                    "pathParameters": [
                        
                    ],
                    "isPublic": true,
                    "code": {
                        "code": {
                            "JAVA": "\n\t\tJSONObject json=new JSONObject();\n\t\tjson.put(\"class\",JSONUtils.formatJSON(this.clazz));\n\t\tjson.put(\"id\",JSONUtils.formatJSON(this.id));\n\t\tjson.put(\"created\",JSONUtils.formatJSON(this.created));\n\t\tjson.put(\"updated\",JSONUtils.formatJSON(this.updated));\n\t\tjson.put(\"deleted\",JSONUtils.formatJSON(this.deleted));\n\t\tjson.put(\"name\",JSONUtils.formatJSON(this.name));\n\n\t\treturn json;\n    "
                        }
                    },
                    "allParameters": [
                        
                    ],
                    "path": null,
                    "name": "toJSON"
                },
                {
                    "isStatic": true,
                    "isAbstract": false,
                    "type": {
                        "type": "Sample"
                    },
                    "queryParameters": [
                        
                    ],
                    "verb": "GET",
                    "methodParameters": [
                        {
                            "type": {
                                "type": "Server"
                            },
                            "name": "server"
                        }
                    ],
                    "pathParameters": [
                        {
                            "type": {
                                "type": "Long"
                            },
                            "name": "id"
                        }
                    ],
                    "isPublic": true,
                    "code": {
                        "code": {
                            "JAVA": "\n\t\tString path = \"/api/sample/{id}.json?\";\n\t\tpath = path.replace(\"{id}\",id+\"\");\n\n\t\tJSONObject json = server.doGET(path);\n\t\tSample domain = new Sample();\n\t\tdomain.build(json);\n\t\treturn domain;\n\n    "
                        }
                    },
                    "allParameters": [
                        {
                            "type": {
                                "type": "Server"
                            },
                            "name": "server"
                        },
                        {
                            "type": {
                                "type": "Long"
                            },
                            "name": "id"
                        }
                    ],
                    "path": "/api/sample/{id}.json",
                    "name": "get"
                },
                {
                    "isStatic": false,
                    "isAbstract": false,
                    "type": {
                        "type": "Void"
                    },
                    "queryParameters": [
                        
                    ],
                    "verb": "POST",
                    "methodParameters": [
                        {
                            "type": {
                                "type": "Server"
                            },
                            "name": "server"
                        }
                    ],
                    "pathParameters": [
                        
                    ],
                    "isPublic": true,
                    "code": {
                        "code": {
                            "JAVA": "\n\t\tString path = \"/api/sample.json?\";\n\n\t\tJSONObject json = server.doPOST(path,this.toJSON());\n\n\t\tthis.build((JSONObject)json.get(\"sample\"));\n\n    "
                        }
                    },
                    "allParameters": [
                        {
                            "type": {
                                "type": "Server"
                            },
                            "name": "server"
                        }
                    ],
                    "path": "/api/sample.json",
                    "name": "add"
                },
                {
                    "isStatic": true,
                    "isAbstract": false,
                    "type": {
                        "type": "List"
                    },
                    "queryParameters": [
                        
                    ],
                    "verb": "GET",
                    "methodParameters": [
                        {
                            "type": {
                                "type": "Server"
                            },
                            "name": "server"
                        }
                    ],
                    "pathParameters": [
                        
                    ],
                    "isPublic": true,
                    "code": {
                        "code": {
                            "JAVA": "\n\t\tString path = \"/api/sample.json?\";\n\n\t\tJSONArray json = server.doGETList(path);\n\t\tList<Sample> domains = new ArrayList<Sample>();\n\t\tfor(int i=0;i<json.size();i++) {\n\t\t\tSample domain = new Sample();\n\t\t\tdomain.build((JSONObject)json.get(i));\n\t\t\t domains.add(domain);\n\t\t }\n\t\treturn domains;\n\n    "
                        }
                    },
                    "allParameters": [
                        {
                            "type": {
                                "type": "Server"
                            },
                            "name": "server"
                        }
                    ],
                    "path": "/api/sample.json",
                    "name": "list"
                },
                {
                    "isStatic": true,
                    "isAbstract": false,
                    "type": {
                        "type": "List"
                    },
                    "queryParameters": [
                        {
                            "type": {
                                "type": "Integer"
                            },
                            "name": "max"
                        },
                        {
                            "type": {
                                "type": "Integer"
                            },
                            "name": "offset"
                        }
                    ],
                    "verb": "GET",
                    "methodParameters": [
                        {
                            "type": {
                                "type": "Server"
                            },
                            "name": "server"
                        }
                    ],
                    "pathParameters": [
                        
                    ],
                    "isPublic": true,
                    "code": {
                        "code": {
                            "JAVA": "\n\t\tString path = \"/api/sample.json?\";\n\t\tpath = path + \"&max=\" + max;\n\t\tpath = path + \"&offset=\" + offset;\n\n\t\tJSONArray json = server.doGETList(path);\n\t\tList<Sample> domains = new ArrayList<Sample>();\n\t\tfor(int i=0;i<json.size();i++) {\n\t\t\tSample domain = new Sample();\n\t\t\tdomain.build((JSONObject)json.get(i));\n\t\t\t domains.add(domain);\n\t\t }\n\t\treturn domains;\n\n    "
                        }
                    },
                    "allParameters": [
                        {
                            "type": {
                                "type": "Server"
                            },
                            "name": "server"
                        },
                        {
                            "type": {
                                "type": "Integer"
                            },
                            "name": "max"
                        },
                        {
                            "type": {
                                "type": "Integer"
                            },
                            "name": "offset"
                        }
                    ],
                    "path": "/api/sample.json",
                    "name": "list"
                },
                {
                    "isStatic": false,
                    "isAbstract": false,
                    "type": {
                        "type": "Void"
                    },
                    "queryParameters": [
                        
                    ],
                    "verb": "DELETE",
                    "methodParameters": [
                        {
                            "type": {
                                "type": "Server"
                            },
                            "name": "server"
                        }
                    ],
                    "pathParameters": [
                        
                    ],
                    "isPublic": true,
                    "code": {
                        "code": {
                            "JAVA": "\n\t\tString path = \"/api/sample/{id}.json?\";\n\t\tpath = path.replace(\"{id}\",getId()+\"\");\n\n\t\tserver.doDELETE(path);\n\t\tbuild(new JSONObject());\n\n    "
                        }
                    },
                    "allParameters": [
                        {
                            "type": {
                                "type": "Server"
                            },
                            "name": "server"
                        }
                    ],
                    "path": "/api/sample/{id}.json",
                    "name": "delete"
                },
                {
                    "isStatic": false,
                    "isAbstract": false,
                    "type": {
                        "type": "Void"
                    },
                    "queryParameters": [
                        
                    ],
                    "verb": "PUT",
                    "methodParameters": [
                        {
                            "type": {
                                "type": "Server"
                            },
                            "name": "server"
                        }
                    ],
                    "pathParameters": [
                        
                    ],
                    "isPublic": true,
                    "code": {
                        "code": {
                            "JAVA": "\n\t\tString path = \"/api/sample/{id}.json?\";\n\t\tpath = path.replace(\"{id}\",getId()+\"\");\n\n\t\tJSONObject json = server.doPUT(path,this.toJSON());\n\n\t\tthis.build((JSONObject)json.get(\"sample\"));\n\n    "
                        }
                    },
                    "allParameters": [
                        {
                            "type": {
                                "type": "Server"
                            },
                            "name": "server"
                        }
                    ],
                    "path": "/api/sample/{id}.json",
                    "name": "edit"
                }
            ],
            "name": "AbstractSample"
        },
        {
            "fullPackage": "be.cytomine.client.abst",
            "isAbstract": true,
            "comment": {
                "version": "0.1",
                "description": "A user role on the full app (user, admin, guest,...)",
                "author": "ClientBuilder (Lo\u00EFc Rollus)"
            },
            "fields": [
                {
                    "useInConstructor": true,
                    "type": {
                        "type": "String"
                    },
                    "useInSetter": true,
                    "comment": {
                        "description": "The role name"
                    },
                    "useInGetter": true,
                    "name": "authority"
                }
            ],
            "domainName": "SecRole",
            "methods": [
                {
                    "isStatic": false,
                    "isAbstract": false,
                    "type": {
                        "type": "Void"
                    },
                    "queryParameters": [
                        
                    ],
                    "verb": null,
                    "methodParameters": [
                        {
                            "type": {
                                "type": "String"
                            },
                            "name": "authority"
                        }
                    ],
                    "pathParameters": [
                        
                    ],
                    "isPublic": true,
                    "code": {
                        "code": {
                            "JAVA": "\n\t\tthis.authority=authority;\n\n    "
                        }
                    },
                    "allParameters": [
                        {
                            "type": {
                                "type": "String"
                            },
                            "name": "authority"
                        }
                    ],
                    "path": null,
                    "name": "build"
                },
                {
                    "isStatic": false,
                    "isAbstract": false,
                    "type": {
                        "type": "Void"
                    },
                    "queryParameters": [
                        
                    ],
                    "verb": null,
                    "methodParameters": [
                        {
                            "type": {
                                "type": "JSONObject"
                            },
                            "name": "json"
                        }
                    ],
                    "pathParameters": [
                        
                    ],
                    "isPublic": true,
                    "code": {
                        "code": {
                            "JAVA": "\n\t\tthis.authority =JSONUtils.extractJSONString(json.get(\"authority\"));\n\n    "
                        }
                    },
                    "allParameters": [
                        {
                            "type": {
                                "type": "JSONObject"
                            },
                            "name": "json"
                        }
                    ],
                    "path": null,
                    "name": "build"
                },
                {
                    "isStatic": false,
                    "isAbstract": false,
                    "type": {
                        "type": "JSONObject"
                    },
                    "queryParameters": [
                        
                    ],
                    "verb": null,
                    "methodParameters": [
                        
                    ],
                    "pathParameters": [
                        
                    ],
                    "isPublic": true,
                    "code": {
                        "code": {
                            "JAVA": "\n\t\tJSONObject json=new JSONObject();\n\t\tjson.put(\"authority\",JSONUtils.formatJSON(this.authority));\n\n\t\treturn json;\n    "
                        }
                    },
                    "allParameters": [
                        
                    ],
                    "path": null,
                    "name": "toJSON"
                },
                {
                    "isStatic": true,
                    "isAbstract": false,
                    "type": {
                        "type": "SecRole"
                    },
                    "queryParameters": [
                        
                    ],
                    "verb": "GET",
                    "methodParameters": [
                        {
                            "type": {
                                "type": "Server"
                            },
                            "name": "server"
                        }
                    ],
                    "pathParameters": [
                        {
                            "type": {
                                "type": "Long"
                            },
                            "name": "id"
                        }
                    ],
                    "isPublic": true,
                    "code": {
                        "code": {
                            "JAVA": "\n\t\tString path = \"/api/role/{id}.json?\";\n\t\tpath = path.replace(\"{id}\",id+\"\");\n\n\t\tJSONObject json = server.doGET(path);\n\t\tSecRole domain = new SecRole();\n\t\tdomain.build(json);\n\t\treturn domain;\n\n    "
                        }
                    },
                    "allParameters": [
                        {
                            "type": {
                                "type": "Server"
                            },
                            "name": "server"
                        },
                        {
                            "type": {
                                "type": "Long"
                            },
                            "name": "id"
                        }
                    ],
                    "path": "/api/role/{id}.json",
                    "name": "get"
                },
                {
                    "isStatic": true,
                    "isAbstract": false,
                    "type": {
                        "type": "SecRole"
                    },
                    "queryParameters": [
                        {
                            "type": {
                                "type": "Integer"
                            },
                            "name": "max"
                        },
                        {
                            "type": {
                                "type": "Integer"
                            },
                            "name": "offset"
                        }
                    ],
                    "verb": "GET",
                    "methodParameters": [
                        {
                            "type": {
                                "type": "Server"
                            },
                            "name": "server"
                        }
                    ],
                    "pathParameters": [
                        
                    ],
                    "isPublic": true,
                    "code": {
                        "code": {
                            "JAVA": "\n\t\tthrow new Exception(\"Not yet implemented\");\n    "
                        }
                    },
                    "allParameters": [
                        {
                            "type": {
                                "type": "Server"
                            },
                            "name": "server"
                        },
                        {
                            "type": {
                                "type": "Integer"
                            },
                            "name": "max"
                        },
                        {
                            "type": {
                                "type": "Integer"
                            },
                            "name": "offset"
                        }
                    ],
                    "path": "/api/role.json",
                    "name": "list"
                }
            ],
            "name": "AbstractSecRole"
        },
        {
            "fullPackage": "be.cytomine.client.abst",
            "isAbstract": true,
            "comment": {
                "version": "0.1",
                "description": "User - role link. A user may have many role (USER, ADMIN, GUEST)",
                "author": "ClientBuilder (Lo\u00EFc Rollus)"
            },
            "fields": [
                {
                    "useInConstructor": false,
                    "type": {
                        "type": "String"
                    },
                    "useInSetter": false,
                    "comment": {
                        "description": "The full class name of the domain"
                    },
                    "useInGetter": true,
                    "name": "clazz"
                },
                {
                    "useInConstructor": false,
                    "type": {
                        "type": "Long"
                    },
                    "useInSetter": false,
                    "comment": {
                        "description": "The domain id"
                    },
                    "useInGetter": true,
                    "name": "id"
                },
                {
                    "useInConstructor": false,
                    "type": {
                        "type": "Date"
                    },
                    "useInSetter": false,
                    "comment": {
                        "description": "The date of the domain creation"
                    },
                    "useInGetter": true,
                    "name": "created"
                },
                {
                    "useInConstructor": false,
                    "type": {
                        "type": "Date"
                    },
                    "useInSetter": false,
                    "comment": {
                        "description": "The date of the domain modification"
                    },
                    "useInGetter": true,
                    "name": "updated"
                },
                {
                    "useInConstructor": false,
                    "type": {
                        "type": "Date"
                    },
                    "useInSetter": false,
                    "comment": {
                        "description": "When domain was removed from Cytomine"
                    },
                    "useInGetter": true,
                    "name": "deleted"
                },
                {
                    "useInConstructor": false,
                    "type": {
                        "type": "Object"
                    },
                    "useInSetter": true,
                    "comment": {
                        "description": "Undefined"
                    },
                    "useInGetter": true,
                    "name": "user"
                },
                {
                    "useInConstructor": false,
                    "type": {
                        "type": "Object"
                    },
                    "useInSetter": true,
                    "comment": {
                        "description": "Undefined"
                    },
                    "useInGetter": true,
                    "name": "role"
                },
                {
                    "useInConstructor": true,
                    "type": {
                        "type": "Long"
                    },
                    "useInSetter": true,
                    "comment": {
                        "description": "The role id"
                    },
                    "useInGetter": false,
                    "name": "secRole"
                },
                {
                    "useInConstructor": true,
                    "type": {
                        "type": "Long"
                    },
                    "useInSetter": true,
                    "comment": {
                        "description": "The user id"
                    },
                    "useInGetter": false,
                    "name": "secUser"
                }
            ],
            "domainName": "SecUserSecRole",
            "methods": [
                {
                    "isStatic": false,
                    "isAbstract": false,
                    "type": {
                        "type": "Void"
                    },
                    "queryParameters": [
                        
                    ],
                    "verb": null,
                    "methodParameters": [
                        {
                            "type": {
                                "type": "Long"
                            },
                            "name": "secRole"
                        },
                        {
                            "type": {
                                "type": "Long"
                            },
                            "name": "secUser"
                        }
                    ],
                    "pathParameters": [
                        
                    ],
                    "isPublic": true,
                    "code": {
                        "code": {
                            "JAVA": "\n\t\tthis.secRole=secRole;\n\t\tthis.secUser=secUser;\n\n    "
                        }
                    },
                    "allParameters": [
                        {
                            "type": {
                                "type": "Long"
                            },
                            "name": "secRole"
                        },
                        {
                            "type": {
                                "type": "Long"
                            },
                            "name": "secUser"
                        }
                    ],
                    "path": null,
                    "name": "build"
                },
                {
                    "isStatic": false,
                    "isAbstract": false,
                    "type": {
                        "type": "Void"
                    },
                    "queryParameters": [
                        
                    ],
                    "verb": null,
                    "methodParameters": [
                        {
                            "type": {
                                "type": "JSONObject"
                            },
                            "name": "json"
                        }
                    ],
                    "pathParameters": [
                        
                    ],
                    "isPublic": true,
                    "code": {
                        "code": {
                            "JAVA": "\n\t\tthis.clazz =JSONUtils.extractJSONString(json.get(\"class\"));\n\t\tthis.id =JSONUtils.extractJSONLong(json.get(\"id\"));\n\t\tthis.created =JSONUtils.extractJSONDate(json.get(\"created\"));\n\t\tthis.updated =JSONUtils.extractJSONDate(json.get(\"updated\"));\n\t\tthis.deleted =JSONUtils.extractJSONDate(json.get(\"deleted\"));\n\t\tthis.user =JSONUtils.extractJSONObject(json.get(\"user\"));\n\t\tthis.role =JSONUtils.extractJSONObject(json.get(\"role\"));\n\t\tthis.secRole =JSONUtils.extractJSONLong(json.get(\"secRole\"));\n\t\tthis.secUser =JSONUtils.extractJSONLong(json.get(\"secUser\"));\n\n    "
                        }
                    },
                    "allParameters": [
                        {
                            "type": {
                                "type": "JSONObject"
                            },
                            "name": "json"
                        }
                    ],
                    "path": null,
                    "name": "build"
                },
                {
                    "isStatic": false,
                    "isAbstract": false,
                    "type": {
                        "type": "JSONObject"
                    },
                    "queryParameters": [
                        
                    ],
                    "verb": null,
                    "methodParameters": [
                        
                    ],
                    "pathParameters": [
                        
                    ],
                    "isPublic": true,
                    "code": {
                        "code": {
                            "JAVA": "\n\t\tJSONObject json=new JSONObject();\n\t\tjson.put(\"class\",JSONUtils.formatJSON(this.clazz));\n\t\tjson.put(\"id\",JSONUtils.formatJSON(this.id));\n\t\tjson.put(\"created\",JSONUtils.formatJSON(this.created));\n\t\tjson.put(\"updated\",JSONUtils.formatJSON(this.updated));\n\t\tjson.put(\"deleted\",JSONUtils.formatJSON(this.deleted));\n\t\tjson.put(\"user\",JSONUtils.formatJSON(this.user));\n\t\tjson.put(\"role\",JSONUtils.formatJSON(this.role));\n\n\t\treturn json;\n    "
                        }
                    },
                    "allParameters": [
                        
                    ],
                    "path": null,
                    "name": "toJSON"
                },
                {
                    "isStatic": true,
                    "isAbstract": false,
                    "type": {
                        "type": "SecUserSecRole"
                    },
                    "queryParameters": [
                        
                    ],
                    "verb": "GET",
                    "methodParameters": [
                        {
                            "type": {
                                "type": "Server"
                            },
                            "name": "server"
                        }
                    ],
                    "pathParameters": [
                        {
                            "type": {
                                "type": "String"
                            },
                            "name": "user"
                        },
                        {
                            "type": {
                                "type": "String"
                            },
                            "name": "role"
                        }
                    ],
                    "isPublic": true,
                    "code": {
                        "code": {
                            "JAVA": "\n\t\tString path = \"/api/user/{user}/role/{role}.json?\";\n\t\tpath = path.replace(\"{user}\",user+\"\");\n\t\tpath = path.replace(\"{role}\",role+\"\");\n\n\t\tJSONObject json = server.doGET(path);\n\t\tSecUserSecRole domain = new SecUserSecRole();\n\t\tdomain.build(json);\n\t\treturn domain;\n\n    "
                        }
                    },
                    "allParameters": [
                        {
                            "type": {
                                "type": "Server"
                            },
                            "name": "server"
                        },
                        {
                            "type": {
                                "type": "String"
                            },
                            "name": "user"
                        },
                        {
                            "type": {
                                "type": "String"
                            },
                            "name": "role"
                        }
                    ],
                    "path": "/api/user/{user}/role/{role}.json",
                    "name": "get"
                },
                {
                    "isStatic": false,
                    "isAbstract": false,
                    "type": {
                        "type": "Void"
                    },
                    "queryParameters": [
                        
                    ],
                    "verb": "POST",
                    "methodParameters": [
                        {
                            "type": {
                                "type": "Server"
                            },
                            "name": "server"
                        }
                    ],
                    "pathParameters": [
                        
                    ],
                    "isPublic": true,
                    "code": {
                        "code": {
                            "JAVA": "\n\t\tString path = \"/api/user/{user}/role.json?\";\n\t\tpath = path.replace(\"{user}\",getUser()+\"\");\n\t\tpath = path.replace(\"{role}\",getRole()+\"\");\n\n\t\tJSONObject json = server.doPOST(path,this.toJSON());\n\n\t\tthis.build((JSONObject)json.get(\"secusersecrole\"));\n\n    "
                        }
                    },
                    "allParameters": [
                        {
                            "type": {
                                "type": "Server"
                            },
                            "name": "server"
                        }
                    ],
                    "path": "/api/user/{user}/role.json",
                    "name": "add"
                },
                {
                    "isStatic": true,
                    "isAbstract": false,
                    "type": {
                        "type": "SecUserSecRole"
                    },
                    "queryParameters": [
                        {
                            "type": {
                                "type": "Integer"
                            },
                            "name": "max"
                        },
                        {
                            "type": {
                                "type": "Integer"
                            },
                            "name": "offset"
                        }
                    ],
                    "verb": "GET",
                    "methodParameters": [
                        {
                            "type": {
                                "type": "Server"
                            },
                            "name": "server"
                        }
                    ],
                    "pathParameters": [
                        {
                            "type": {
                                "type": "String"
                            },
                            "name": "user"
                        }
                    ],
                    "isPublic": true,
                    "code": {
                        "code": {
                            "JAVA": "\n\t\tthrow new Exception(\"Not yet implemented\");\n    "
                        }
                    },
                    "allParameters": [
                        {
                            "type": {
                                "type": "Server"
                            },
                            "name": "server"
                        },
                        {
                            "type": {
                                "type": "String"
                            },
                            "name": "user"
                        },
                        {
                            "type": {
                                "type": "Integer"
                            },
                            "name": "max"
                        },
                        {
                            "type": {
                                "type": "Integer"
                            },
                            "name": "offset"
                        }
                    ],
                    "path": "/api/user/{user}/role.json",
                    "name": "list"
                },
                {
                    "isStatic": false,
                    "isAbstract": false,
                    "type": {
                        "type": "Void"
                    },
                    "queryParameters": [
                        
                    ],
                    "verb": "DELETE",
                    "methodParameters": [
                        {
                            "type": {
                                "type": "Server"
                            },
                            "name": "server"
                        }
                    ],
                    "pathParameters": [
                        
                    ],
                    "isPublic": true,
                    "code": {
                        "code": {
                            "JAVA": "\n\t\tString path = \"/api/user/{user}/role/{role}.json?\";\n\t\tpath = path.replace(\"{user}\",getUser()+\"\");\n\t\tpath = path.replace(\"{role}\",getRole()+\"\");\n\n\t\tserver.doDELETE(path);\n\t\tbuild(new JSONObject());\n\n    "
                        }
                    },
                    "allParameters": [
                        {
                            "type": {
                                "type": "Server"
                            },
                            "name": "server"
                        }
                    ],
                    "path": "/api/user/{user}/role/{role}.json",
                    "name": "delete"
                }
            ],
            "name": "AbstractSecUserSecRole"
        },
        {
            "fullPackage": "be.cytomine.client.abst",
            "isAbstract": true,
            "comment": {
                "version": "0.1",
                "description": "Software is an application that can read/add/update/delete data from cytomine. Each time a software is launch, we create a job instance",
                "author": "ClientBuilder (Lo\u00EFc Rollus)"
            },
            "fields": [
                {
                    "useInConstructor": false,
                    "type": {
                        "type": "String"
                    },
                    "useInSetter": false,
                    "comment": {
                        "description": "The full class name of the domain"
                    },
                    "useInGetter": true,
                    "name": "clazz"
                },
                {
                    "useInConstructor": false,
                    "type": {
                        "type": "Long"
                    },
                    "useInSetter": false,
                    "comment": {
                        "description": "The domain id"
                    },
                    "useInGetter": true,
                    "name": "id"
                },
                {
                    "useInConstructor": false,
                    "type": {
                        "type": "Date"
                    },
                    "useInSetter": false,
                    "comment": {
                        "description": "The date of the domain creation"
                    },
                    "useInGetter": true,
                    "name": "created"
                },
                {
                    "useInConstructor": false,
                    "type": {
                        "type": "Date"
                    },
                    "useInSetter": false,
                    "comment": {
                        "description": "The date of the domain modification"
                    },
                    "useInGetter": true,
                    "name": "updated"
                },
                {
                    "useInConstructor": false,
                    "type": {
                        "type": "Date"
                    },
                    "useInSetter": false,
                    "comment": {
                        "description": "When domain was removed from Cytomine"
                    },
                    "useInGetter": true,
                    "name": "deleted"
                },
                {
                    "useInConstructor": true,
                    "type": {
                        "type": "String"
                    },
                    "useInSetter": true,
                    "comment": {
                        "description": "The software name"
                    },
                    "useInGetter": true,
                    "name": "name"
                },
                {
                    "useInConstructor": false,
                    "type": {
                        "type": "String"
                    },
                    "useInSetter": true,
                    "comment": {
                        "description": "Service name used to load software and create job"
                    },
                    "useInGetter": true,
                    "name": "serviceName"
                },
                {
                    "useInConstructor": false,
                    "type": {
                        "type": "String"
                    },
                    "useInSetter": true,
                    "comment": {
                        "description": "For UI client: Type of result page. We load a specific page for each software to print data (charts, listing,...)"
                    },
                    "useInGetter": true,
                    "name": "resultName"
                },
                {
                    "useInConstructor": false,
                    "type": {
                        "type": "String"
                    },
                    "useInSetter": true,
                    "comment": {
                        "description": "Software info"
                    },
                    "useInGetter": true,
                    "name": "description"
                },
                {
                    "useInConstructor": false,
                    "type": {
                        "type": "List"
                    },
                    "useInSetter": false,
                    "comment": {
                        "description": "List of 'software parameter' for this software (sort by index asc)"
                    },
                    "useInGetter": true,
                    "name": "parameters"
                },
                {
                    "useInConstructor": false,
                    "type": {
                        "type": "Long"
                    },
                    "useInSetter": false,
                    "comment": {
                        "description": "The number of job for this software"
                    },
                    "useInGetter": true,
                    "name": "numberOfJob"
                },
                {
                    "useInConstructor": false,
                    "type": {
                        "type": "Long"
                    },
                    "useInSetter": false,
                    "comment": {
                        "description": "The number of job not launch for this software"
                    },
                    "useInGetter": true,
                    "name": "numberOfNotLaunch"
                },
                {
                    "useInConstructor": false,
                    "type": {
                        "type": "Long"
                    },
                    "useInSetter": false,
                    "comment": {
                        "description": "The number of job in queue for this software"
                    },
                    "useInGetter": true,
                    "name": "numberOfInQueue"
                },
                {
                    "useInConstructor": false,
                    "type": {
                        "type": "Long"
                    },
                    "useInSetter": false,
                    "comment": {
                        "description": "The number of job currently running for this software"
                    },
                    "useInGetter": true,
                    "name": "numberOfRunning"
                },
                {
                    "useInConstructor": false,
                    "type": {
                        "type": "Long"
                    },
                    "useInSetter": false,
                    "comment": {
                        "description": "The number of job finished with success for this software"
                    },
                    "useInGetter": true,
                    "name": "numberOfSuccess"
                },
                {
                    "useInConstructor": false,
                    "type": {
                        "type": "Long"
                    },
                    "useInSetter": false,
                    "comment": {
                        "description": "The number of job failed for this software"
                    },
                    "useInGetter": true,
                    "name": "numberOfFailed"
                },
                {
                    "useInConstructor": false,
                    "type": {
                        "type": "Long"
                    },
                    "useInSetter": false,
                    "comment": {
                        "description": "The number of job in indeterminate status for this software"
                    },
                    "useInGetter": true,
                    "name": "numberOfIndeterminate"
                },
                {
                    "useInConstructor": false,
                    "type": {
                        "type": "Long"
                    },
                    "useInSetter": false,
                    "comment": {
                        "description": "The number of job waiting for this software"
                    },
                    "useInGetter": true,
                    "name": "numberOfWait"
                }
            ],
            "domainName": "Software",
            "methods": [
                {
                    "isStatic": false,
                    "isAbstract": false,
                    "type": {
                        "type": "Void"
                    },
                    "queryParameters": [
                        
                    ],
                    "verb": null,
                    "methodParameters": [
                        {
                            "type": {
                                "type": "String"
                            },
                            "name": "name"
                        }
                    ],
                    "pathParameters": [
                        
                    ],
                    "isPublic": true,
                    "code": {
                        "code": {
                            "JAVA": "\n\t\tthis.name=name;\n\n    "
                        }
                    },
                    "allParameters": [
                        {
                            "type": {
                                "type": "String"
                            },
                            "name": "name"
                        }
                    ],
                    "path": null,
                    "name": "build"
                },
                {
                    "isStatic": false,
                    "isAbstract": false,
                    "type": {
                        "type": "Void"
                    },
                    "queryParameters": [
                        
                    ],
                    "verb": null,
                    "methodParameters": [
                        {
                            "type": {
                                "type": "JSONObject"
                            },
                            "name": "json"
                        }
                    ],
                    "pathParameters": [
                        
                    ],
                    "isPublic": true,
                    "code": {
                        "code": {
                            "JAVA": "\n\t\tthis.clazz =JSONUtils.extractJSONString(json.get(\"class\"));\n\t\tthis.id =JSONUtils.extractJSONLong(json.get(\"id\"));\n\t\tthis.created =JSONUtils.extractJSONDate(json.get(\"created\"));\n\t\tthis.updated =JSONUtils.extractJSONDate(json.get(\"updated\"));\n\t\tthis.deleted =JSONUtils.extractJSONDate(json.get(\"deleted\"));\n\t\tthis.name =JSONUtils.extractJSONString(json.get(\"name\"));\n\t\tthis.serviceName =JSONUtils.extractJSONString(json.get(\"serviceName\"));\n\t\tthis.resultName =JSONUtils.extractJSONString(json.get(\"resultName\"));\n\t\tthis.description =JSONUtils.extractJSONString(json.get(\"description\"));\n\t\tthis.parameters =JSONUtils.extractJSONList(json.get(\"parameters\"));\n\t\tthis.numberOfJob =JSONUtils.extractJSONLong(json.get(\"numberOfJob\"));\n\t\tthis.numberOfNotLaunch =JSONUtils.extractJSONLong(json.get(\"numberOfNotLaunch\"));\n\t\tthis.numberOfInQueue =JSONUtils.extractJSONLong(json.get(\"numberOfInQueue\"));\n\t\tthis.numberOfRunning =JSONUtils.extractJSONLong(json.get(\"numberOfRunning\"));\n\t\tthis.numberOfSuccess =JSONUtils.extractJSONLong(json.get(\"numberOfSuccess\"));\n\t\tthis.numberOfFailed =JSONUtils.extractJSONLong(json.get(\"numberOfFailed\"));\n\t\tthis.numberOfIndeterminate =JSONUtils.extractJSONLong(json.get(\"numberOfIndeterminate\"));\n\t\tthis.numberOfWait =JSONUtils.extractJSONLong(json.get(\"numberOfWait\"));\n\n    "
                        }
                    },
                    "allParameters": [
                        {
                            "type": {
                                "type": "JSONObject"
                            },
                            "name": "json"
                        }
                    ],
                    "path": null,
                    "name": "build"
                },
                {
                    "isStatic": false,
                    "isAbstract": false,
                    "type": {
                        "type": "JSONObject"
                    },
                    "queryParameters": [
                        
                    ],
                    "verb": null,
                    "methodParameters": [
                        
                    ],
                    "pathParameters": [
                        
                    ],
                    "isPublic": true,
                    "code": {
                        "code": {
                            "JAVA": "\n\t\tJSONObject json=new JSONObject();\n\t\tjson.put(\"class\",JSONUtils.formatJSON(this.clazz));\n\t\tjson.put(\"id\",JSONUtils.formatJSON(this.id));\n\t\tjson.put(\"created\",JSONUtils.formatJSON(this.created));\n\t\tjson.put(\"updated\",JSONUtils.formatJSON(this.updated));\n\t\tjson.put(\"deleted\",JSONUtils.formatJSON(this.deleted));\n\t\tjson.put(\"name\",JSONUtils.formatJSON(this.name));\n\t\tjson.put(\"serviceName\",JSONUtils.formatJSON(this.serviceName));\n\t\tjson.put(\"resultName\",JSONUtils.formatJSON(this.resultName));\n\t\tjson.put(\"description\",JSONUtils.formatJSON(this.description));\n\t\tjson.put(\"parameters\",JSONUtils.formatJSON(this.parameters));\n\t\tjson.put(\"numberOfJob\",JSONUtils.formatJSON(this.numberOfJob));\n\t\tjson.put(\"numberOfNotLaunch\",JSONUtils.formatJSON(this.numberOfNotLaunch));\n\t\tjson.put(\"numberOfInQueue\",JSONUtils.formatJSON(this.numberOfInQueue));\n\t\tjson.put(\"numberOfRunning\",JSONUtils.formatJSON(this.numberOfRunning));\n\t\tjson.put(\"numberOfSuccess\",JSONUtils.formatJSON(this.numberOfSuccess));\n\t\tjson.put(\"numberOfFailed\",JSONUtils.formatJSON(this.numberOfFailed));\n\t\tjson.put(\"numberOfIndeterminate\",JSONUtils.formatJSON(this.numberOfIndeterminate));\n\t\tjson.put(\"numberOfWait\",JSONUtils.formatJSON(this.numberOfWait));\n\n\t\treturn json;\n    "
                        }
                    },
                    "allParameters": [
                        
                    ],
                    "path": null,
                    "name": "toJSON"
                },
                {
                    "isStatic": true,
                    "isAbstract": false,
                    "type": {
                        "type": "Software"
                    },
                    "queryParameters": [
                        
                    ],
                    "verb": "GET",
                    "methodParameters": [
                        {
                            "type": {
                                "type": "Server"
                            },
                            "name": "server"
                        }
                    ],
                    "pathParameters": [
                        {
                            "type": {
                                "type": "Long"
                            },
                            "name": "id"
                        }
                    ],
                    "isPublic": true,
                    "code": {
                        "code": {
                            "JAVA": "\n\t\tString path = \"/api/software/{id}.json?\";\n\t\tpath = path.replace(\"{id}\",id+\"\");\n\n\t\tJSONObject json = server.doGET(path);\n\t\tSoftware domain = new Software();\n\t\tdomain.build(json);\n\t\treturn domain;\n\n    "
                        }
                    },
                    "allParameters": [
                        {
                            "type": {
                                "type": "Server"
                            },
                            "name": "server"
                        },
                        {
                            "type": {
                                "type": "Long"
                            },
                            "name": "id"
                        }
                    ],
                    "path": "/api/software/{id}.json",
                    "name": "get"
                },
                {
                    "isStatic": true,
                    "isAbstract": false,
                    "type": {
                        "type": "NumberOfJob:x,numberOfNotLaunch:x,numberOfInQueue:x,numberOfRunning:x,numberOfSuccess:x,numberOfFailed:x,numberOfIndeterminate:x,numberOfWait:x"
                    },
                    "queryParameters": [
                        {
                            "type": {
                                "type": "Integer"
                            },
                            "name": "max"
                        },
                        {
                            "type": {
                                "type": "Integer"
                            },
                            "name": "offset"
                        }
                    ],
                    "verb": "GET",
                    "methodParameters": [
                        {
                            "type": {
                                "type": "Server"
                            },
                            "name": "server"
                        }
                    ],
                    "pathParameters": [
                        {
                            "type": {
                                "type": "Long"
                            },
                            "name": "idProject"
                        },
                        {
                            "type": {
                                "type": "Long"
                            },
                            "name": "idSoftware"
                        }
                    ],
                    "isPublic": true,
                    "code": {
                        "code": {
                            "JAVA": "\n\t\tthrow new Exception(\"Not yet implemented\");\n    "
                        }
                    },
                    "allParameters": [
                        {
                            "type": {
                                "type": "Server"
                            },
                            "name": "server"
                        },
                        {
                            "type": {
                                "type": "Long"
                            },
                            "name": "idProject"
                        },
                        {
                            "type": {
                                "type": "Long"
                            },
                            "name": "idSoftware"
                        },
                        {
                            "type": {
                                "type": "Integer"
                            },
                            "name": "max"
                        },
                        {
                            "type": {
                                "type": "Integer"
                            },
                            "name": "offset"
                        }
                    ],
                    "path": "/api/project/{idProject}/software/{idSoftware}/stats.json",
                    "name": "softwareInfoForProject"
                },
                {
                    "isStatic": true,
                    "isAbstract": false,
                    "type": {
                        "type": "List"
                    },
                    "queryParameters": [
                        
                    ],
                    "verb": "GET",
                    "methodParameters": [
                        {
                            "type": {
                                "type": "Server"
                            },
                            "name": "server"
                        }
                    ],
                    "pathParameters": [
                        {
                            "type": {
                                "type": "Long"
                            },
                            "name": "id"
                        }
                    ],
                    "isPublic": true,
                    "code": {
                        "code": {
                            "JAVA": "\n\t\tString path = \"/api/project/{id}/software.json?\";\n\t\tpath = path.replace(\"{id}\",id+\"\");\n\n\t\tJSONArray json = server.doGETList(path);\n\t\tList<Software> domains = new ArrayList<Software>();\n\t\tfor(int i=0;i<json.size();i++) {\n\t\t\tSoftware domain = new Software();\n\t\t\tdomain.build((JSONObject)json.get(i));\n\t\t\t domains.add(domain);\n\t\t }\n\t\treturn domains;\n\n    "
                        }
                    },
                    "allParameters": [
                        {
                            "type": {
                                "type": "Server"
                            },
                            "name": "server"
                        },
                        {
                            "type": {
                                "type": "Long"
                            },
                            "name": "id"
                        }
                    ],
                    "path": "/api/project/{id}/software.json",
                    "name": "listByProject"
                },
                {
                    "isStatic": true,
                    "isAbstract": false,
                    "type": {
                        "type": "List"
                    },
                    "queryParameters": [
                        {
                            "type": {
                                "type": "Integer"
                            },
                            "name": "max"
                        },
                        {
                            "type": {
                                "type": "Integer"
                            },
                            "name": "offset"
                        }
                    ],
                    "verb": "GET",
                    "methodParameters": [
                        {
                            "type": {
                                "type": "Server"
                            },
                            "name": "server"
                        }
                    ],
                    "pathParameters": [
                        {
                            "type": {
                                "type": "Long"
                            },
                            "name": "id"
                        }
                    ],
                    "isPublic": true,
                    "code": {
                        "code": {
                            "JAVA": "\n\t\tString path = \"/api/project/{id}/software.json?\";\n\t\tpath = path.replace(\"{id}\",id+\"\");\n\t\tpath = path + \"&max=\" + max;\n\t\tpath = path + \"&offset=\" + offset;\n\n\t\tJSONArray json = server.doGETList(path);\n\t\tList<Software> domains = new ArrayList<Software>();\n\t\tfor(int i=0;i<json.size();i++) {\n\t\t\tSoftware domain = new Software();\n\t\t\tdomain.build((JSONObject)json.get(i));\n\t\t\t domains.add(domain);\n\t\t }\n\t\treturn domains;\n\n    "
                        }
                    },
                    "allParameters": [
                        {
                            "type": {
                                "type": "Server"
                            },
                            "name": "server"
                        },
                        {
                            "type": {
                                "type": "Long"
                            },
                            "name": "id"
                        },
                        {
                            "type": {
                                "type": "Integer"
                            },
                            "name": "max"
                        },
                        {
                            "type": {
                                "type": "Integer"
                            },
                            "name": "offset"
                        }
                    ],
                    "path": "/api/project/{id}/software.json",
                    "name": "listByProject"
                },
                {
                    "isStatic": false,
                    "isAbstract": false,
                    "type": {
                        "type": "Void"
                    },
                    "queryParameters": [
                        
                    ],
                    "verb": "POST",
                    "methodParameters": [
                        {
                            "type": {
                                "type": "Server"
                            },
                            "name": "server"
                        }
                    ],
                    "pathParameters": [
                        
                    ],
                    "isPublic": true,
                    "code": {
                        "code": {
                            "JAVA": "\n\t\tString path = \"/api/software.json?\";\n\n\t\tJSONObject json = server.doPOST(path,this.toJSON());\n\n\t\tthis.build((JSONObject)json.get(\"software\"));\n\n    "
                        }
                    },
                    "allParameters": [
                        {
                            "type": {
                                "type": "Server"
                            },
                            "name": "server"
                        }
                    ],
                    "path": "/api/software.json",
                    "name": "add"
                },
                {
                    "isStatic": true,
                    "isAbstract": false,
                    "type": {
                        "type": "List"
                    },
                    "queryParameters": [
                        
                    ],
                    "verb": "GET",
                    "methodParameters": [
                        {
                            "type": {
                                "type": "Server"
                            },
                            "name": "server"
                        }
                    ],
                    "pathParameters": [
                        
                    ],
                    "isPublic": true,
                    "code": {
                        "code": {
                            "JAVA": "\n\t\tString path = \"/api/software.json?\";\n\n\t\tJSONArray json = server.doGETList(path);\n\t\tList<Software> domains = new ArrayList<Software>();\n\t\tfor(int i=0;i<json.size();i++) {\n\t\t\tSoftware domain = new Software();\n\t\t\tdomain.build((JSONObject)json.get(i));\n\t\t\t domains.add(domain);\n\t\t }\n\t\treturn domains;\n\n    "
                        }
                    },
                    "allParameters": [
                        {
                            "type": {
                                "type": "Server"
                            },
                            "name": "server"
                        }
                    ],
                    "path": "/api/software.json",
                    "name": "list"
                },
                {
                    "isStatic": true,
                    "isAbstract": false,
                    "type": {
                        "type": "List"
                    },
                    "queryParameters": [
                        {
                            "type": {
                                "type": "Integer"
                            },
                            "name": "max"
                        },
                        {
                            "type": {
                                "type": "Integer"
                            },
                            "name": "offset"
                        }
                    ],
                    "verb": "GET",
                    "methodParameters": [
                        {
                            "type": {
                                "type": "Server"
                            },
                            "name": "server"
                        }
                    ],
                    "pathParameters": [
                        
                    ],
                    "isPublic": true,
                    "code": {
                        "code": {
                            "JAVA": "\n\t\tString path = \"/api/software.json?\";\n\t\tpath = path + \"&max=\" + max;\n\t\tpath = path + \"&offset=\" + offset;\n\n\t\tJSONArray json = server.doGETList(path);\n\t\tList<Software> domains = new ArrayList<Software>();\n\t\tfor(int i=0;i<json.size();i++) {\n\t\t\tSoftware domain = new Software();\n\t\t\tdomain.build((JSONObject)json.get(i));\n\t\t\t domains.add(domain);\n\t\t }\n\t\treturn domains;\n\n    "
                        }
                    },
                    "allParameters": [
                        {
                            "type": {
                                "type": "Server"
                            },
                            "name": "server"
                        },
                        {
                            "type": {
                                "type": "Integer"
                            },
                            "name": "max"
                        },
                        {
                            "type": {
                                "type": "Integer"
                            },
                            "name": "offset"
                        }
                    ],
                    "path": "/api/software.json",
                    "name": "list"
                },
                {
                    "isStatic": false,
                    "isAbstract": false,
                    "type": {
                        "type": "Void"
                    },
                    "queryParameters": [
                        
                    ],
                    "verb": "DELETE",
                    "methodParameters": [
                        {
                            "type": {
                                "type": "Server"
                            },
                            "name": "server"
                        }
                    ],
                    "pathParameters": [
                        
                    ],
                    "isPublic": true,
                    "code": {
                        "code": {
                            "JAVA": "\n\t\tString path = \"/api/software/{id}.json?\";\n\t\tpath = path.replace(\"{id}\",getId()+\"\");\n\t\tpath = path + \"&max=\" + getMax();\n\t\tpath = path + \"&offset=\" + getOffset();\n\n\t\tserver.doDELETE(path);\n\t\tbuild(new JSONObject());\n\n    "
                        }
                    },
                    "allParameters": [
                        {
                            "type": {
                                "type": "Server"
                            },
                            "name": "server"
                        }
                    ],
                    "path": "/api/software/{id}.json",
                    "name": "delete"
                },
                {
                    "isStatic": false,
                    "isAbstract": false,
                    "type": {
                        "type": "Void"
                    },
                    "queryParameters": [
                        
                    ],
                    "verb": "PUT",
                    "methodParameters": [
                        {
                            "type": {
                                "type": "Server"
                            },
                            "name": "server"
                        }
                    ],
                    "pathParameters": [
                        
                    ],
                    "isPublic": true,
                    "code": {
                        "code": {
                            "JAVA": "\n\t\tString path = \"/api/software/{id}.json?\";\n\t\tpath = path.replace(\"{id}\",getId()+\"\");\n\t\tpath = path + \"&max=\" + getMax();\n\t\tpath = path + \"&offset=\" + getOffset();\n\n\t\tJSONObject json = server.doPUT(path,this.toJSON());\n\n\t\tthis.build((JSONObject)json.get(\"software\"));\n\n    "
                        }
                    },
                    "allParameters": [
                        {
                            "type": {
                                "type": "Server"
                            },
                            "name": "server"
                        }
                    ],
                    "path": "/api/software/{id}.json",
                    "name": "edit"
                }
            ],
            "name": "AbstractSoftware"
        },
        {
            "fullPackage": "be.cytomine.client.abst",
            "isAbstract": true,
            "comment": {
                "version": "0.1",
                "description": "A parameter for a software. It's a template to create job parameter. When job is init, we create job parameter list based on software parameter list.",
                "author": "ClientBuilder (Lo\u00EFc Rollus)"
            },
            "fields": [
                {
                    "useInConstructor": false,
                    "type": {
                        "type": "String"
                    },
                    "useInSetter": false,
                    "comment": {
                        "description": "The full class name of the domain"
                    },
                    "useInGetter": true,
                    "name": "clazz"
                },
                {
                    "useInConstructor": false,
                    "type": {
                        "type": "Long"
                    },
                    "useInSetter": false,
                    "comment": {
                        "description": "The domain id"
                    },
                    "useInGetter": true,
                    "name": "id"
                },
                {
                    "useInConstructor": false,
                    "type": {
                        "type": "Date"
                    },
                    "useInSetter": false,
                    "comment": {
                        "description": "The date of the domain creation"
                    },
                    "useInGetter": true,
                    "name": "created"
                },
                {
                    "useInConstructor": false,
                    "type": {
                        "type": "Date"
                    },
                    "useInSetter": false,
                    "comment": {
                        "description": "The date of the domain modification"
                    },
                    "useInGetter": true,
                    "name": "updated"
                },
                {
                    "useInConstructor": false,
                    "type": {
                        "type": "Date"
                    },
                    "useInSetter": false,
                    "comment": {
                        "description": "When domain was removed from Cytomine"
                    },
                    "useInGetter": true,
                    "name": "deleted"
                },
                {
                    "useInConstructor": true,
                    "type": {
                        "type": "String"
                    },
                    "useInSetter": true,
                    "comment": {
                        "description": "The parameter name"
                    },
                    "useInGetter": true,
                    "name": "name"
                },
                {
                    "useInConstructor": true,
                    "type": {
                        "type": "String"
                    },
                    "useInSetter": true,
                    "comment": {
                        "description": "The parameter data type (Number, String, Date, Boolean, Domain (e.g: image instance id,...), ListDomain )"
                    },
                    "useInGetter": true,
                    "name": "type"
                },
                {
                    "useInConstructor": false,
                    "type": {
                        "type": "String"
                    },
                    "useInSetter": true,
                    "comment": {
                        "description": "Default value when creating job parameter"
                    },
                    "useInGetter": true,
                    "name": "defaultParamValue"
                },
                {
                    "useInConstructor": false,
                    "type": {
                        "type": "Boolean"
                    },
                    "useInSetter": true,
                    "comment": {
                        "description": "Flag if value is mandatory"
                    },
                    "useInGetter": true,
                    "name": "required"
                },
                {
                    "useInConstructor": true,
                    "type": {
                        "type": "Long"
                    },
                    "useInSetter": true,
                    "comment": {
                        "description": "The software of the parameter"
                    },
                    "useInGetter": true,
                    "name": "software"
                },
                {
                    "useInConstructor": false,
                    "type": {
                        "type": "Integer"
                    },
                    "useInSetter": true,
                    "comment": {
                        "description": "Index for parameter position. When launching software, parameter will be send ordered by index (asc)."
                    },
                    "useInGetter": true,
                    "name": "index"
                },
                {
                    "useInConstructor": false,
                    "type": {
                        "type": "String"
                    },
                    "useInSetter": true,
                    "comment": {
                        "description": "Used for UI. If parameter has '(List)Domain' type, the URI will provide a list of choice. E.g. if uri is 'api/project.json', the choice list will be cytomine project list"
                    },
                    "useInGetter": true,
                    "name": "uri"
                },
                {
                    "useInConstructor": false,
                    "type": {
                        "type": "String"
                    },
                    "useInSetter": true,
                    "comment": {
                        "description": "Used for UI. JSON Fields to print in choice list. E.g. if uri is api/project.json and uriPrintAttribut is 'name', the choice list will contains project name "
                    },
                    "useInGetter": true,
                    "name": "uriPrintAttribut"
                },
                {
                    "useInConstructor": false,
                    "type": {
                        "type": "String"
                    },
                    "useInSetter": true,
                    "comment": {
                        "description": "Used for UI. JSON Fields used to sort choice list. E.g. if uri is api/project.json and uriSortAttribut is 'id', projects will be sort by id (not by name) "
                    },
                    "useInGetter": true,
                    "name": "uriSortAttribut"
                },
                {
                    "useInConstructor": false,
                    "type": {
                        "type": "Boolean"
                    },
                    "useInSetter": true,
                    "comment": {
                        "description": "Indicated if the field is autofilled by the server"
                    },
                    "useInGetter": true,
                    "name": "setByServer"
                }
            ],
            "domainName": "SoftwareParameter",
            "methods": [
                {
                    "isStatic": false,
                    "isAbstract": false,
                    "type": {
                        "type": "Void"
                    },
                    "queryParameters": [
                        
                    ],
                    "verb": null,
                    "methodParameters": [
                        {
                            "type": {
                                "type": "String"
                            },
                            "name": "name"
                        },
                        {
                            "type": {
                                "type": "String"
                            },
                            "name": "type"
                        },
                        {
                            "type": {
                                "type": "Long"
                            },
                            "name": "software"
                        }
                    ],
                    "pathParameters": [
                        
                    ],
                    "isPublic": true,
                    "code": {
                        "code": {
                            "JAVA": "\n\t\tthis.name=name;\n\t\tthis.type=type;\n\t\tthis.software=software;\n\n    "
                        }
                    },
                    "allParameters": [
                        {
                            "type": {
                                "type": "String"
                            },
                            "name": "name"
                        },
                        {
                            "type": {
                                "type": "String"
                            },
                            "name": "type"
                        },
                        {
                            "type": {
                                "type": "Long"
                            },
                            "name": "software"
                        }
                    ],
                    "path": null,
                    "name": "build"
                },
                {
                    "isStatic": false,
                    "isAbstract": false,
                    "type": {
                        "type": "Void"
                    },
                    "queryParameters": [
                        
                    ],
                    "verb": null,
                    "methodParameters": [
                        {
                            "type": {
                                "type": "JSONObject"
                            },
                            "name": "json"
                        }
                    ],
                    "pathParameters": [
                        
                    ],
                    "isPublic": true,
                    "code": {
                        "code": {
                            "JAVA": "\n\t\tthis.clazz =JSONUtils.extractJSONString(json.get(\"class\"));\n\t\tthis.id =JSONUtils.extractJSONLong(json.get(\"id\"));\n\t\tthis.created =JSONUtils.extractJSONDate(json.get(\"created\"));\n\t\tthis.updated =JSONUtils.extractJSONDate(json.get(\"updated\"));\n\t\tthis.deleted =JSONUtils.extractJSONDate(json.get(\"deleted\"));\n\t\tthis.name =JSONUtils.extractJSONString(json.get(\"name\"));\n\t\tthis.type =JSONUtils.extractJSONString(json.get(\"type\"));\n\t\tthis.defaultParamValue =JSONUtils.extractJSONString(json.get(\"defaultParamValue\"));\n\t\tthis.required =JSONUtils.extractJSONBoolean(json.get(\"required\"));\n\t\tthis.software =JSONUtils.extractJSONLong(json.get(\"software\"));\n\t\tthis.index =JSONUtils.extractJSONInteger(json.get(\"index\"));\n\t\tthis.uri =JSONUtils.extractJSONString(json.get(\"uri\"));\n\t\tthis.uriPrintAttribut =JSONUtils.extractJSONString(json.get(\"uriPrintAttribut\"));\n\t\tthis.uriSortAttribut =JSONUtils.extractJSONString(json.get(\"uriSortAttribut\"));\n\t\tthis.setByServer =JSONUtils.extractJSONBoolean(json.get(\"setByServer\"));\n\n    "
                        }
                    },
                    "allParameters": [
                        {
                            "type": {
                                "type": "JSONObject"
                            },
                            "name": "json"
                        }
                    ],
                    "path": null,
                    "name": "build"
                },
                {
                    "isStatic": false,
                    "isAbstract": false,
                    "type": {
                        "type": "JSONObject"
                    },
                    "queryParameters": [
                        
                    ],
                    "verb": null,
                    "methodParameters": [
                        
                    ],
                    "pathParameters": [
                        
                    ],
                    "isPublic": true,
                    "code": {
                        "code": {
                            "JAVA": "\n\t\tJSONObject json=new JSONObject();\n\t\tjson.put(\"class\",JSONUtils.formatJSON(this.clazz));\n\t\tjson.put(\"id\",JSONUtils.formatJSON(this.id));\n\t\tjson.put(\"created\",JSONUtils.formatJSON(this.created));\n\t\tjson.put(\"updated\",JSONUtils.formatJSON(this.updated));\n\t\tjson.put(\"deleted\",JSONUtils.formatJSON(this.deleted));\n\t\tjson.put(\"name\",JSONUtils.formatJSON(this.name));\n\t\tjson.put(\"type\",JSONUtils.formatJSON(this.type));\n\t\tjson.put(\"defaultParamValue\",JSONUtils.formatJSON(this.defaultParamValue));\n\t\tjson.put(\"required\",JSONUtils.formatJSON(this.required));\n\t\tjson.put(\"software\",JSONUtils.formatJSON(this.software));\n\t\tjson.put(\"index\",JSONUtils.formatJSON(this.index));\n\t\tjson.put(\"uri\",JSONUtils.formatJSON(this.uri));\n\t\tjson.put(\"uriPrintAttribut\",JSONUtils.formatJSON(this.uriPrintAttribut));\n\t\tjson.put(\"uriSortAttribut\",JSONUtils.formatJSON(this.uriSortAttribut));\n\t\tjson.put(\"setByServer\",JSONUtils.formatJSON(this.setByServer));\n\n\t\treturn json;\n    "
                        }
                    },
                    "allParameters": [
                        
                    ],
                    "path": null,
                    "name": "toJSON"
                },
                {
                    "isStatic": true,
                    "isAbstract": false,
                    "type": {
                        "type": "SoftwareParameter"
                    },
                    "queryParameters": [
                        
                    ],
                    "verb": "GET",
                    "methodParameters": [
                        {
                            "type": {
                                "type": "Server"
                            },
                            "name": "server"
                        }
                    ],
                    "pathParameters": [
                        {
                            "type": {
                                "type": "Long"
                            },
                            "name": "id"
                        }
                    ],
                    "isPublic": true,
                    "code": {
                        "code": {
                            "JAVA": "\n\t\tString path = \"/api/softwareparameter/{id}.json?\";\n\t\tpath = path.replace(\"{id}\",id+\"\");\n\n\t\tJSONObject json = server.doGET(path);\n\t\tSoftwareParameter domain = new SoftwareParameter();\n\t\tdomain.build(json);\n\t\treturn domain;\n\n    "
                        }
                    },
                    "allParameters": [
                        {
                            "type": {
                                "type": "Server"
                            },
                            "name": "server"
                        },
                        {
                            "type": {
                                "type": "Long"
                            },
                            "name": "id"
                        }
                    ],
                    "path": "/api/softwareparameter/{id}.json",
                    "name": "get"
                },
                {
                    "isStatic": true,
                    "isAbstract": false,
                    "type": {
                        "type": "SoftwareParameter"
                    },
                    "queryParameters": [
                        {
                            "type": {
                                "type": "Boolean"
                            },
                            "name": "setByServer"
                        },
                        {
                            "type": {
                                "type": "Integer"
                            },
                            "name": "max"
                        },
                        {
                            "type": {
                                "type": "Integer"
                            },
                            "name": "offset"
                        }
                    ],
                    "verb": "GET",
                    "methodParameters": [
                        {
                            "type": {
                                "type": "Server"
                            },
                            "name": "server"
                        }
                    ],
                    "pathParameters": [
                        {
                            "type": {
                                "type": "Long"
                            },
                            "name": "id"
                        }
                    ],
                    "isPublic": true,
                    "code": {
                        "code": {
                            "JAVA": "\n\t\tthrow new Exception(\"Not yet implemented\");\n    "
                        }
                    },
                    "allParameters": [
                        {
                            "type": {
                                "type": "Server"
                            },
                            "name": "server"
                        },
                        {
                            "type": {
                                "type": "Long"
                            },
                            "name": "id"
                        },
                        {
                            "type": {
                                "type": "Boolean"
                            },
                            "name": "setByServer"
                        },
                        {
                            "type": {
                                "type": "Integer"
                            },
                            "name": "max"
                        },
                        {
                            "type": {
                                "type": "Integer"
                            },
                            "name": "offset"
                        }
                    ],
                    "path": "/api/software/{id}/parameter.json",
                    "name": "listBySoftware"
                },
                {
                    "isStatic": false,
                    "isAbstract": false,
                    "type": {
                        "type": "Void"
                    },
                    "queryParameters": [
                        
                    ],
                    "verb": "POST",
                    "methodParameters": [
                        {
                            "type": {
                                "type": "Server"
                            },
                            "name": "server"
                        }
                    ],
                    "pathParameters": [
                        
                    ],
                    "isPublic": true,
                    "code": {
                        "code": {
                            "JAVA": "\n\t\tString path = \"/api/softwareparameter.json?\";\n\n\t\tJSONObject json = server.doPOST(path,this.toJSON());\n\n\t\tthis.build((JSONObject)json.get(\"softwareparameter\"));\n\n    "
                        }
                    },
                    "allParameters": [
                        {
                            "type": {
                                "type": "Server"
                            },
                            "name": "server"
                        }
                    ],
                    "path": "/api/softwareparameter.json",
                    "name": "add"
                },
                {
                    "isStatic": true,
                    "isAbstract": false,
                    "type": {
                        "type": "SoftwareParameter"
                    },
                    "queryParameters": [
                        {
                            "type": {
                                "type": "Integer"
                            },
                            "name": "max"
                        },
                        {
                            "type": {
                                "type": "Integer"
                            },
                            "name": "offset"
                        }
                    ],
                    "verb": "GET",
                    "methodParameters": [
                        {
                            "type": {
                                "type": "Server"
                            },
                            "name": "server"
                        }
                    ],
                    "pathParameters": [
                        
                    ],
                    "isPublic": true,
                    "code": {
                        "code": {
                            "JAVA": "\n\t\tthrow new Exception(\"Not yet implemented\");\n    "
                        }
                    },
                    "allParameters": [
                        {
                            "type": {
                                "type": "Server"
                            },
                            "name": "server"
                        },
                        {
                            "type": {
                                "type": "Integer"
                            },
                            "name": "max"
                        },
                        {
                            "type": {
                                "type": "Integer"
                            },
                            "name": "offset"
                        }
                    ],
                    "path": "/api/softwareparameter.json",
                    "name": "list"
                },
                {
                    "isStatic": false,
                    "isAbstract": false,
                    "type": {
                        "type": "Void"
                    },
                    "queryParameters": [
                        
                    ],
                    "verb": "DELETE",
                    "methodParameters": [
                        {
                            "type": {
                                "type": "Server"
                            },
                            "name": "server"
                        }
                    ],
                    "pathParameters": [
                        
                    ],
                    "isPublic": true,
                    "code": {
                        "code": {
                            "JAVA": "\n\t\tString path = \"/api/softwareparameter/{id}.json?\";\n\t\tpath = path.replace(\"{id}\",getId()+\"\");\n\n\t\tserver.doDELETE(path);\n\t\tbuild(new JSONObject());\n\n    "
                        }
                    },
                    "allParameters": [
                        {
                            "type": {
                                "type": "Server"
                            },
                            "name": "server"
                        }
                    ],
                    "path": "/api/softwareparameter/{id}.json",
                    "name": "delete"
                },
                {
                    "isStatic": false,
                    "isAbstract": false,
                    "type": {
                        "type": "Void"
                    },
                    "queryParameters": [
                        
                    ],
                    "verb": "PUT",
                    "methodParameters": [
                        {
                            "type": {
                                "type": "Server"
                            },
                            "name": "server"
                        }
                    ],
                    "pathParameters": [
                        
                    ],
                    "isPublic": true,
                    "code": {
                        "code": {
                            "JAVA": "\n\t\tString path = \"/api/softwareparameter/{id}.json?\";\n\t\tpath = path.replace(\"{id}\",getId()+\"\");\n\n\t\tJSONObject json = server.doPUT(path,this.toJSON());\n\n\t\tthis.build((JSONObject)json.get(\"softwareparameter\"));\n\n    "
                        }
                    },
                    "allParameters": [
                        {
                            "type": {
                                "type": "Server"
                            },
                            "name": "server"
                        }
                    ],
                    "path": "/api/softwareparameter/{id}.json",
                    "name": "edit"
                }
            ],
            "name": "AbstractSoftwareParameter"
        },
        {
            "fullPackage": "be.cytomine.client.abst",
            "isAbstract": true,
            "comment": {
                "version": "0.1",
                "description": "A link between a ROI and a job template",
                "author": "ClientBuilder (Lo\u00EFc Rollus)"
            },
            "fields": [
                {
                    "useInConstructor": false,
                    "type": {
                        "type": "String"
                    },
                    "useInSetter": false,
                    "comment": {
                        "description": "The full class name of the domain"
                    },
                    "useInGetter": true,
                    "name": "clazz"
                },
                {
                    "useInConstructor": false,
                    "type": {
                        "type": "Long"
                    },
                    "useInSetter": false,
                    "comment": {
                        "description": "The domain id"
                    },
                    "useInGetter": true,
                    "name": "id"
                },
                {
                    "useInConstructor": false,
                    "type": {
                        "type": "Date"
                    },
                    "useInSetter": false,
                    "comment": {
                        "description": "The date of the domain creation"
                    },
                    "useInGetter": true,
                    "name": "created"
                },
                {
                    "useInConstructor": false,
                    "type": {
                        "type": "Date"
                    },
                    "useInSetter": false,
                    "comment": {
                        "description": "The date of the domain modification"
                    },
                    "useInGetter": true,
                    "name": "updated"
                },
                {
                    "useInConstructor": false,
                    "type": {
                        "type": "Date"
                    },
                    "useInSetter": false,
                    "comment": {
                        "description": "When domain was removed from Cytomine"
                    },
                    "useInGetter": true,
                    "name": "deleted"
                },
                {
                    "useInConstructor": true,
                    "type": {
                        "type": "Long"
                    },
                    "useInSetter": true,
                    "comment": {
                        "description": "The annotation id"
                    },
                    "useInGetter": true,
                    "name": "annotationIdent"
                },
                {
                    "useInConstructor": false,
                    "type": {
                        "type": "String"
                    },
                    "useInSetter": false,
                    "comment": {
                        "description": "The annotation class type (roi,user,algo,...)"
                    },
                    "useInGetter": true,
                    "name": "annotationClassName"
                },
                {
                    "useInConstructor": true,
                    "type": {
                        "type": "Long"
                    },
                    "useInSetter": true,
                    "comment": {
                        "description": "The template"
                    },
                    "useInGetter": true,
                    "name": "jobTemplate"
                }
            ],
            "domainName": "SoftwareProject",
            "methods": [
                {
                    "isStatic": false,
                    "isAbstract": false,
                    "type": {
                        "type": "Void"
                    },
                    "queryParameters": [
                        
                    ],
                    "verb": null,
                    "methodParameters": [
                        {
                            "type": {
                                "type": "Long"
                            },
                            "name": "annotationIdent"
                        },
                        {
                            "type": {
                                "type": "Long"
                            },
                            "name": "jobTemplate"
                        }
                    ],
                    "pathParameters": [
                        
                    ],
                    "isPublic": true,
                    "code": {
                        "code": {
                            "JAVA": "\n\t\tthis.annotationIdent=annotationIdent;\n\t\tthis.jobTemplate=jobTemplate;\n\n    "
                        }
                    },
                    "allParameters": [
                        {
                            "type": {
                                "type": "Long"
                            },
                            "name": "annotationIdent"
                        },
                        {
                            "type": {
                                "type": "Long"
                            },
                            "name": "jobTemplate"
                        }
                    ],
                    "path": null,
                    "name": "build"
                },
                {
                    "isStatic": false,
                    "isAbstract": false,
                    "type": {
                        "type": "Void"
                    },
                    "queryParameters": [
                        
                    ],
                    "verb": null,
                    "methodParameters": [
                        {
                            "type": {
                                "type": "JSONObject"
                            },
                            "name": "json"
                        }
                    ],
                    "pathParameters": [
                        
                    ],
                    "isPublic": true,
                    "code": {
                        "code": {
                            "JAVA": "\n\t\tthis.clazz =JSONUtils.extractJSONString(json.get(\"class\"));\n\t\tthis.id =JSONUtils.extractJSONLong(json.get(\"id\"));\n\t\tthis.created =JSONUtils.extractJSONDate(json.get(\"created\"));\n\t\tthis.updated =JSONUtils.extractJSONDate(json.get(\"updated\"));\n\t\tthis.deleted =JSONUtils.extractJSONDate(json.get(\"deleted\"));\n\t\tthis.annotationIdent =JSONUtils.extractJSONLong(json.get(\"annotationIdent\"));\n\t\tthis.annotationClassName =JSONUtils.extractJSONString(json.get(\"annotationClassName\"));\n\t\tthis.jobTemplate =JSONUtils.extractJSONLong(json.get(\"jobTemplate\"));\n\n    "
                        }
                    },
                    "allParameters": [
                        {
                            "type": {
                                "type": "JSONObject"
                            },
                            "name": "json"
                        }
                    ],
                    "path": null,
                    "name": "build"
                },
                {
                    "isStatic": false,
                    "isAbstract": false,
                    "type": {
                        "type": "JSONObject"
                    },
                    "queryParameters": [
                        
                    ],
                    "verb": null,
                    "methodParameters": [
                        
                    ],
                    "pathParameters": [
                        
                    ],
                    "isPublic": true,
                    "code": {
                        "code": {
                            "JAVA": "\n\t\tJSONObject json=new JSONObject();\n\t\tjson.put(\"class\",JSONUtils.formatJSON(this.clazz));\n\t\tjson.put(\"id\",JSONUtils.formatJSON(this.id));\n\t\tjson.put(\"created\",JSONUtils.formatJSON(this.created));\n\t\tjson.put(\"updated\",JSONUtils.formatJSON(this.updated));\n\t\tjson.put(\"deleted\",JSONUtils.formatJSON(this.deleted));\n\t\tjson.put(\"annotationIdent\",JSONUtils.formatJSON(this.annotationIdent));\n\t\tjson.put(\"annotationClassName\",JSONUtils.formatJSON(this.annotationClassName));\n\t\tjson.put(\"jobTemplate\",JSONUtils.formatJSON(this.jobTemplate));\n\n\t\treturn json;\n    "
                        }
                    },
                    "allParameters": [
                        
                    ],
                    "path": null,
                    "name": "toJSON"
                },
                {
                    "isStatic": true,
                    "isAbstract": false,
                    "type": {
                        "type": "SoftwareProject"
                    },
                    "queryParameters": [
                        
                    ],
                    "verb": "GET",
                    "methodParameters": [
                        {
                            "type": {
                                "type": "Server"
                            },
                            "name": "server"
                        }
                    ],
                    "pathParameters": [
                        {
                            "type": {
                                "type": "Long"
                            },
                            "name": "id"
                        }
                    ],
                    "isPublic": true,
                    "code": {
                        "code": {
                            "JAVA": "\n\t\tString path = \"/api/softwareproject/{id}.json?\";\n\t\tpath = path.replace(\"{id}\",id+\"\");\n\n\t\tJSONObject json = server.doGET(path);\n\t\tSoftwareProject domain = new SoftwareProject();\n\t\tdomain.build(json);\n\t\treturn domain;\n\n    "
                        }
                    },
                    "allParameters": [
                        {
                            "type": {
                                "type": "Server"
                            },
                            "name": "server"
                        },
                        {
                            "type": {
                                "type": "Long"
                            },
                            "name": "id"
                        }
                    ],
                    "path": "/api/softwareproject/{id}.json",
                    "name": "get"
                },
                {
                    "isStatic": true,
                    "isAbstract": false,
                    "type": {
                        "type": "SoftwareProject"
                    },
                    "queryParameters": [
                        {
                            "type": {
                                "type": "Integer"
                            },
                            "name": "max"
                        },
                        {
                            "type": {
                                "type": "Integer"
                            },
                            "name": "offset"
                        }
                    ],
                    "verb": "GET",
                    "methodParameters": [
                        {
                            "type": {
                                "type": "Server"
                            },
                            "name": "server"
                        }
                    ],
                    "pathParameters": [
                        {
                            "type": {
                                "type": "Long"
                            },
                            "name": "id"
                        }
                    ],
                    "isPublic": true,
                    "code": {
                        "code": {
                            "JAVA": "\n\t\tthrow new Exception(\"Not yet implemented\");\n    "
                        }
                    },
                    "allParameters": [
                        {
                            "type": {
                                "type": "Server"
                            },
                            "name": "server"
                        },
                        {
                            "type": {
                                "type": "Long"
                            },
                            "name": "id"
                        },
                        {
                            "type": {
                                "type": "Integer"
                            },
                            "name": "max"
                        },
                        {
                            "type": {
                                "type": "Integer"
                            },
                            "name": "offset"
                        }
                    ],
                    "path": "/api/project/{id}/softwareproject.json",
                    "name": "listByProject"
                },
                {
                    "isStatic": false,
                    "isAbstract": false,
                    "type": {
                        "type": "Void"
                    },
                    "queryParameters": [
                        
                    ],
                    "verb": "POST",
                    "methodParameters": [
                        {
                            "type": {
                                "type": "Server"
                            },
                            "name": "server"
                        }
                    ],
                    "pathParameters": [
                        
                    ],
                    "isPublic": true,
                    "code": {
                        "code": {
                            "JAVA": "\n\t\tString path = \"/api/softwareproject.json?\";\n\n\t\tJSONObject json = server.doPOST(path,this.toJSON());\n\n\t\tthis.build((JSONObject)json.get(\"softwareproject\"));\n\n    "
                        }
                    },
                    "allParameters": [
                        {
                            "type": {
                                "type": "Server"
                            },
                            "name": "server"
                        }
                    ],
                    "path": "/api/softwareproject.json",
                    "name": "add"
                },
                {
                    "isStatic": true,
                    "isAbstract": false,
                    "type": {
                        "type": "SoftwareProject"
                    },
                    "queryParameters": [
                        {
                            "type": {
                                "type": "Integer"
                            },
                            "name": "max"
                        },
                        {
                            "type": {
                                "type": "Integer"
                            },
                            "name": "offset"
                        }
                    ],
                    "verb": "GET",
                    "methodParameters": [
                        {
                            "type": {
                                "type": "Server"
                            },
                            "name": "server"
                        }
                    ],
                    "pathParameters": [
                        
                    ],
                    "isPublic": true,
                    "code": {
                        "code": {
                            "JAVA": "\n\t\tthrow new Exception(\"Not yet implemented\");\n    "
                        }
                    },
                    "allParameters": [
                        {
                            "type": {
                                "type": "Server"
                            },
                            "name": "server"
                        },
                        {
                            "type": {
                                "type": "Integer"
                            },
                            "name": "max"
                        },
                        {
                            "type": {
                                "type": "Integer"
                            },
                            "name": "offset"
                        }
                    ],
                    "path": "/api/softwareproject.json",
                    "name": "list"
                },
                {
                    "isStatic": false,
                    "isAbstract": false,
                    "type": {
                        "type": "Void"
                    },
                    "queryParameters": [
                        
                    ],
                    "verb": "DELETE",
                    "methodParameters": [
                        {
                            "type": {
                                "type": "Server"
                            },
                            "name": "server"
                        }
                    ],
                    "pathParameters": [
                        
                    ],
                    "isPublic": true,
                    "code": {
                        "code": {
                            "JAVA": "\n\t\tString path = \"/api/softwareproject/{id}.json?\";\n\t\tpath = path.replace(\"{id}\",getId()+\"\");\n\n\t\tserver.doDELETE(path);\n\t\tbuild(new JSONObject());\n\n    "
                        }
                    },
                    "allParameters": [
                        {
                            "type": {
                                "type": "Server"
                            },
                            "name": "server"
                        }
                    ],
                    "path": "/api/softwareproject/{id}.json",
                    "name": "delete"
                }
            ],
            "name": "AbstractSoftwareProject"
        },
        {
            "fullPackage": "be.cytomine.client.abst",
            "isAbstract": true,
            "comment": {
                "version": "0.1",
                "description": "A link between a storage and some images",
                "author": "ClientBuilder (Lo\u00EFc Rollus)"
            },
            "fields": [
                {
                    "useInConstructor": false,
                    "type": {
                        "type": "String"
                    },
                    "useInSetter": false,
                    "comment": {
                        "description": "The full class name of the domain"
                    },
                    "useInGetter": true,
                    "name": "clazz"
                },
                {
                    "useInConstructor": false,
                    "type": {
                        "type": "Long"
                    },
                    "useInSetter": false,
                    "comment": {
                        "description": "The domain id"
                    },
                    "useInGetter": true,
                    "name": "id"
                },
                {
                    "useInConstructor": false,
                    "type": {
                        "type": "Date"
                    },
                    "useInSetter": false,
                    "comment": {
                        "description": "The date of the domain creation"
                    },
                    "useInGetter": true,
                    "name": "created"
                },
                {
                    "useInConstructor": false,
                    "type": {
                        "type": "Date"
                    },
                    "useInSetter": false,
                    "comment": {
                        "description": "The date of the domain modification"
                    },
                    "useInGetter": true,
                    "name": "updated"
                },
                {
                    "useInConstructor": false,
                    "type": {
                        "type": "Date"
                    },
                    "useInSetter": false,
                    "comment": {
                        "description": "When domain was removed from Cytomine"
                    },
                    "useInGetter": true,
                    "name": "deleted"
                },
                {
                    "useInConstructor": true,
                    "type": {
                        "type": "Long"
                    },
                    "useInSetter": true,
                    "comment": {
                        "description": "The storage id"
                    },
                    "useInGetter": true,
                    "name": "storage"
                },
                {
                    "useInConstructor": true,
                    "type": {
                        "type": "Long"
                    },
                    "useInSetter": true,
                    "comment": {
                        "description": "The abstractimage id"
                    },
                    "useInGetter": true,
                    "name": "abstractimage"
                }
            ],
            "domainName": "StorageAbstractImage",
            "methods": [
                {
                    "isStatic": false,
                    "isAbstract": false,
                    "type": {
                        "type": "Void"
                    },
                    "queryParameters": [
                        
                    ],
                    "verb": null,
                    "methodParameters": [
                        {
                            "type": {
                                "type": "Long"
                            },
                            "name": "storage"
                        },
                        {
                            "type": {
                                "type": "Long"
                            },
                            "name": "abstractimage"
                        }
                    ],
                    "pathParameters": [
                        
                    ],
                    "isPublic": true,
                    "code": {
                        "code": {
                            "JAVA": "\n\t\tthis.storage=storage;\n\t\tthis.abstractimage=abstractimage;\n\n    "
                        }
                    },
                    "allParameters": [
                        {
                            "type": {
                                "type": "Long"
                            },
                            "name": "storage"
                        },
                        {
                            "type": {
                                "type": "Long"
                            },
                            "name": "abstractimage"
                        }
                    ],
                    "path": null,
                    "name": "build"
                },
                {
                    "isStatic": false,
                    "isAbstract": false,
                    "type": {
                        "type": "Void"
                    },
                    "queryParameters": [
                        
                    ],
                    "verb": null,
                    "methodParameters": [
                        {
                            "type": {
                                "type": "JSONObject"
                            },
                            "name": "json"
                        }
                    ],
                    "pathParameters": [
                        
                    ],
                    "isPublic": true,
                    "code": {
                        "code": {
                            "JAVA": "\n\t\tthis.clazz =JSONUtils.extractJSONString(json.get(\"class\"));\n\t\tthis.id =JSONUtils.extractJSONLong(json.get(\"id\"));\n\t\tthis.created =JSONUtils.extractJSONDate(json.get(\"created\"));\n\t\tthis.updated =JSONUtils.extractJSONDate(json.get(\"updated\"));\n\t\tthis.deleted =JSONUtils.extractJSONDate(json.get(\"deleted\"));\n\t\tthis.storage =JSONUtils.extractJSONLong(json.get(\"storage\"));\n\t\tthis.abstractimage =JSONUtils.extractJSONLong(json.get(\"abstractimage\"));\n\n    "
                        }
                    },
                    "allParameters": [
                        {
                            "type": {
                                "type": "JSONObject"
                            },
                            "name": "json"
                        }
                    ],
                    "path": null,
                    "name": "build"
                },
                {
                    "isStatic": false,
                    "isAbstract": false,
                    "type": {
                        "type": "JSONObject"
                    },
                    "queryParameters": [
                        
                    ],
                    "verb": null,
                    "methodParameters": [
                        
                    ],
                    "pathParameters": [
                        
                    ],
                    "isPublic": true,
                    "code": {
                        "code": {
                            "JAVA": "\n\t\tJSONObject json=new JSONObject();\n\t\tjson.put(\"class\",JSONUtils.formatJSON(this.clazz));\n\t\tjson.put(\"id\",JSONUtils.formatJSON(this.id));\n\t\tjson.put(\"created\",JSONUtils.formatJSON(this.created));\n\t\tjson.put(\"updated\",JSONUtils.formatJSON(this.updated));\n\t\tjson.put(\"deleted\",JSONUtils.formatJSON(this.deleted));\n\t\tjson.put(\"storage\",JSONUtils.formatJSON(this.storage));\n\t\tjson.put(\"abstractimage\",JSONUtils.formatJSON(this.abstractimage));\n\n\t\treturn json;\n    "
                        }
                    },
                    "allParameters": [
                        
                    ],
                    "path": null,
                    "name": "toJSON"
                },
                {
                    "isStatic": false,
                    "isAbstract": false,
                    "type": {
                        "type": "Void"
                    },
                    "queryParameters": [
                        
                    ],
                    "verb": "POST",
                    "methodParameters": [
                        {
                            "type": {
                                "type": "Server"
                            },
                            "name": "server"
                        }
                    ],
                    "pathParameters": [
                        
                    ],
                    "isPublic": true,
                    "code": {
                        "code": {
                            "JAVA": "\n\t\tString path = \"/api/storage_abstract_image.json?\";\n\n\t\tJSONObject json = server.doPOST(path,this.toJSON());\n\n\t\tthis.build((JSONObject)json.get(\"storageabstractimage\"));\n\n    "
                        }
                    },
                    "allParameters": [
                        {
                            "type": {
                                "type": "Server"
                            },
                            "name": "server"
                        }
                    ],
                    "path": "/api/storage_abstract_image.json",
                    "name": "add"
                },
                {
                    "isStatic": false,
                    "isAbstract": false,
                    "type": {
                        "type": "Void"
                    },
                    "queryParameters": [
                        
                    ],
                    "verb": "DELETE",
                    "methodParameters": [
                        {
                            "type": {
                                "type": "Server"
                            },
                            "name": "server"
                        }
                    ],
                    "pathParameters": [
                        
                    ],
                    "isPublic": true,
                    "code": {
                        "code": {
                            "JAVA": "\n\t\tString path = \"/api/storage_abstract_image/{id}.json?\";\n\t\tpath = path.replace(\"{id}\",getId()+\"\");\n\n\t\tserver.doDELETE(path);\n\t\tbuild(new JSONObject());\n\n    "
                        }
                    },
                    "allParameters": [
                        {
                            "type": {
                                "type": "Server"
                            },
                            "name": "server"
                        }
                    ],
                    "path": "/api/storage_abstract_image/{id}.json",
                    "name": "delete"
                }
            ],
            "name": "AbstractStorageAbstractImage"
        },
        {
            "fullPackage": "be.cytomine.client.abst",
            "isAbstract": true,
            "comment": {
                "version": "0.1",
                "description": "A file uploaded on the server, when finished, we create an 'abstract image' from this uploaded file",
                "author": "ClientBuilder (Lo\u00EFc Rollus)"
            },
            "fields": [
                {
                    "useInConstructor": false,
                    "type": {
                        "type": "String"
                    },
                    "useInSetter": false,
                    "comment": {
                        "description": "The full class name of the domain"
                    },
                    "useInGetter": true,
                    "name": "clazz"
                },
                {
                    "useInConstructor": false,
                    "type": {
                        "type": "Long"
                    },
                    "useInSetter": false,
                    "comment": {
                        "description": "The domain id"
                    },
                    "useInGetter": true,
                    "name": "id"
                },
                {
                    "useInConstructor": false,
                    "type": {
                        "type": "Date"
                    },
                    "useInSetter": false,
                    "comment": {
                        "description": "The date of the domain creation"
                    },
                    "useInGetter": true,
                    "name": "created"
                },
                {
                    "useInConstructor": false,
                    "type": {
                        "type": "Date"
                    },
                    "useInSetter": false,
                    "comment": {
                        "description": "The date of the domain modification"
                    },
                    "useInGetter": true,
                    "name": "updated"
                },
                {
                    "useInConstructor": false,
                    "type": {
                        "type": "Date"
                    },
                    "useInSetter": false,
                    "comment": {
                        "description": "When domain was removed from Cytomine"
                    },
                    "useInGetter": true,
                    "name": "deleted"
                },
                {
                    "useInConstructor": true,
                    "type": {
                        "type": "Long"
                    },
                    "useInSetter": true,
                    "comment": {
                        "description": "The user that upload the file"
                    },
                    "useInGetter": true,
                    "name": "user"
                },
                {
                    "useInConstructor": true,
                    "type": {
                        "type": "Long"
                    },
                    "useInSetter": true,
                    "comment": {
                        "description": "List of project (id) that will get the image"
                    },
                    "useInGetter": true,
                    "name": "projects"
                },
                {
                    "useInConstructor": true,
                    "type": {
                        "type": "Long"
                    },
                    "useInSetter": true,
                    "comment": {
                        "description": "List of storage (id) that will store the image"
                    },
                    "useInGetter": true,
                    "name": "storages"
                },
                {
                    "useInConstructor": true,
                    "type": {
                        "type": "String"
                    },
                    "useInSetter": true,
                    "comment": {
                        "description": "Upload file filename"
                    },
                    "useInGetter": true,
                    "name": "filename"
                },
                {
                    "useInConstructor": true,
                    "type": {
                        "type": "String"
                    },
                    "useInSetter": true,
                    "comment": {
                        "description": "Upload file short name"
                    },
                    "useInGetter": true,
                    "name": "originalFilename"
                },
                {
                    "useInConstructor": true,
                    "type": {
                        "type": "String"
                    },
                    "useInSetter": true,
                    "comment": {
                        "description": "Extension name"
                    },
                    "useInGetter": true,
                    "name": "ext"
                },
                {
                    "useInConstructor": true,
                    "type": {
                        "type": "String"
                    },
                    "useInSetter": true,
                    "comment": {
                        "description": "File content type"
                    },
                    "useInGetter": false,
                    "name": "contentType"
                },
                {
                    "useInConstructor": false,
                    "type": {
                        "type": "Long"
                    },
                    "useInSetter": true,
                    "comment": {
                        "description": "File size"
                    },
                    "useInGetter": true,
                    "name": "size"
                },
                {
                    "useInConstructor": true,
                    "type": {
                        "type": "String"
                    },
                    "useInSetter": true,
                    "comment": {
                        "description": "Path name"
                    },
                    "useInGetter": true,
                    "name": "path"
                },
                {
                    "useInConstructor": false,
                    "type": {
                        "type": "Integer"
                    },
                    "useInSetter": true,
                    "comment": {
                        "description": "File status (UPLOADED = 0,CONVERTED = 1,DEPLOYED = 2,ERROR_FORMAT = 3,ERROR_CONVERT = 4,UNCOMPRESSED = 5,TO_DEPLOY = 6)"
                    },
                    "useInGetter": true,
                    "name": "status"
                },
                {
                    "useInConstructor": false,
                    "type": {
                        "type": "Boolean"
                    },
                    "useInSetter": false,
                    "comment": {
                        "description": "Indicates if the file is uploaded"
                    },
                    "useInGetter": true,
                    "name": "uploaded"
                },
                {
                    "useInConstructor": false,
                    "type": {
                        "type": "Boolean"
                    },
                    "useInSetter": false,
                    "comment": {
                        "description": "Indicates if the file is converted"
                    },
                    "useInGetter": true,
                    "name": "converted"
                },
                {
                    "useInConstructor": false,
                    "type": {
                        "type": "Boolean"
                    },
                    "useInSetter": false,
                    "comment": {
                        "description": "Indicates if the file is deployed"
                    },
                    "useInGetter": true,
                    "name": "deployed"
                },
                {
                    "useInConstructor": false,
                    "type": {
                        "type": "Boolean"
                    },
                    "useInSetter": false,
                    "comment": {
                        "description": "Indicates if there is a error with file format"
                    },
                    "useInGetter": true,
                    "name": "error_format"
                },
                {
                    "useInConstructor": false,
                    "type": {
                        "type": "Boolean"
                    },
                    "useInSetter": false,
                    "comment": {
                        "description": "Indicates if there is an error with file conversion"
                    },
                    "useInGetter": true,
                    "name": "error_convert"
                },
                {
                    "useInConstructor": false,
                    "type": {
                        "type": "Boolean"
                    },
                    "useInSetter": false,
                    "comment": {
                        "description": "Indicates if the file is not compressed"
                    },
                    "useInGetter": true,
                    "name": "uncompressed"
                },
                {
                    "useInConstructor": false,
                    "type": {
                        "type": "Object"
                    },
                    "useInSetter": true,
                    "comment": {
                        "description": "Undefined"
                    },
                    "useInGetter": true,
                    "name": "to_deploy"
                },
                {
                    "useInConstructor": true,
                    "type": {
                        "type": "String"
                    },
                    "useInSetter": true,
                    "comment": {
                        "description": "The converted extension"
                    },
                    "useInGetter": false,
                    "name": "convertedExt"
                },
                {
                    "useInConstructor": true,
                    "type": {
                        "type": "String"
                    },
                    "useInSetter": true,
                    "comment": {
                        "description": "The converted filename"
                    },
                    "useInGetter": false,
                    "name": "convertedFilename"
                }
            ],
            "domainName": "UploadedFile",
            "methods": [
                {
                    "isStatic": false,
                    "isAbstract": false,
                    "type": {
                        "type": "Void"
                    },
                    "queryParameters": [
                        
                    ],
                    "verb": null,
                    "methodParameters": [
                        {
                            "type": {
                                "type": "Long"
                            },
                            "name": "user"
                        },
                        {
                            "type": {
                                "type": "Long"
                            },
                            "name": "projects"
                        },
                        {
                            "type": {
                                "type": "Long"
                            },
                            "name": "storages"
                        },
                        {
                            "type": {
                                "type": "String"
                            },
                            "name": "filename"
                        },
                        {
                            "type": {
                                "type": "String"
                            },
                            "name": "originalFilename"
                        },
                        {
                            "type": {
                                "type": "String"
                            },
                            "name": "ext"
                        },
                        {
                            "type": {
                                "type": "String"
                            },
                            "name": "contentType"
                        },
                        {
                            "type": {
                                "type": "String"
                            },
                            "name": "path"
                        },
                        {
                            "type": {
                                "type": "String"
                            },
                            "name": "convertedExt"
                        },
                        {
                            "type": {
                                "type": "String"
                            },
                            "name": "convertedFilename"
                        }
                    ],
                    "pathParameters": [
                        
                    ],
                    "isPublic": true,
                    "code": {
                        "code": {
                            "JAVA": "\n\t\tthis.user=user;\n\t\tthis.projects=projects;\n\t\tthis.storages=storages;\n\t\tthis.filename=filename;\n\t\tthis.originalFilename=originalFilename;\n\t\tthis.ext=ext;\n\t\tthis.contentType=contentType;\n\t\tthis.path=path;\n\t\tthis.convertedExt=convertedExt;\n\t\tthis.convertedFilename=convertedFilename;\n\n    "
                        }
                    },
                    "allParameters": [
                        {
                            "type": {
                                "type": "Long"
                            },
                            "name": "user"
                        },
                        {
                            "type": {
                                "type": "Long"
                            },
                            "name": "projects"
                        },
                        {
                            "type": {
                                "type": "Long"
                            },
                            "name": "storages"
                        },
                        {
                            "type": {
                                "type": "String"
                            },
                            "name": "filename"
                        },
                        {
                            "type": {
                                "type": "String"
                            },
                            "name": "originalFilename"
                        },
                        {
                            "type": {
                                "type": "String"
                            },
                            "name": "ext"
                        },
                        {
                            "type": {
                                "type": "String"
                            },
                            "name": "contentType"
                        },
                        {
                            "type": {
                                "type": "String"
                            },
                            "name": "path"
                        },
                        {
                            "type": {
                                "type": "String"
                            },
                            "name": "convertedExt"
                        },
                        {
                            "type": {
                                "type": "String"
                            },
                            "name": "convertedFilename"
                        }
                    ],
                    "path": null,
                    "name": "build"
                },
                {
                    "isStatic": false,
                    "isAbstract": false,
                    "type": {
                        "type": "Void"
                    },
                    "queryParameters": [
                        
                    ],
                    "verb": null,
                    "methodParameters": [
                        {
                            "type": {
                                "type": "JSONObject"
                            },
                            "name": "json"
                        }
                    ],
                    "pathParameters": [
                        
                    ],
                    "isPublic": true,
                    "code": {
                        "code": {
                            "JAVA": "\n\t\tthis.clazz =JSONUtils.extractJSONString(json.get(\"class\"));\n\t\tthis.id =JSONUtils.extractJSONLong(json.get(\"id\"));\n\t\tthis.created =JSONUtils.extractJSONDate(json.get(\"created\"));\n\t\tthis.updated =JSONUtils.extractJSONDate(json.get(\"updated\"));\n\t\tthis.deleted =JSONUtils.extractJSONDate(json.get(\"deleted\"));\n\t\tthis.user =JSONUtils.extractJSONLong(json.get(\"user\"));\n\t\tthis.projects =JSONUtils.extractJSONLong(json.get(\"projects\"));\n\t\tthis.storages =JSONUtils.extractJSONLong(json.get(\"storages\"));\n\t\tthis.filename =JSONUtils.extractJSONString(json.get(\"filename\"));\n\t\tthis.originalFilename =JSONUtils.extractJSONString(json.get(\"originalFilename\"));\n\t\tthis.ext =JSONUtils.extractJSONString(json.get(\"ext\"));\n\t\tthis.contentType =JSONUtils.extractJSONString(json.get(\"contentType\"));\n\t\tthis.size =JSONUtils.extractJSONLong(json.get(\"size\"));\n\t\tthis.path =JSONUtils.extractJSONString(json.get(\"path\"));\n\t\tthis.status =JSONUtils.extractJSONInteger(json.get(\"status\"));\n\t\tthis.uploaded =JSONUtils.extractJSONBoolean(json.get(\"uploaded\"));\n\t\tthis.converted =JSONUtils.extractJSONBoolean(json.get(\"converted\"));\n\t\tthis.deployed =JSONUtils.extractJSONBoolean(json.get(\"deployed\"));\n\t\tthis.error_format =JSONUtils.extractJSONBoolean(json.get(\"error_format\"));\n\t\tthis.error_convert =JSONUtils.extractJSONBoolean(json.get(\"error_convert\"));\n\t\tthis.uncompressed =JSONUtils.extractJSONBoolean(json.get(\"uncompressed\"));\n\t\tthis.to_deploy =JSONUtils.extractJSONObject(json.get(\"to_deploy\"));\n\t\tthis.convertedExt =JSONUtils.extractJSONString(json.get(\"convertedExt\"));\n\t\tthis.convertedFilename =JSONUtils.extractJSONString(json.get(\"convertedFilename\"));\n\n    "
                        }
                    },
                    "allParameters": [
                        {
                            "type": {
                                "type": "JSONObject"
                            },
                            "name": "json"
                        }
                    ],
                    "path": null,
                    "name": "build"
                },
                {
                    "isStatic": false,
                    "isAbstract": false,
                    "type": {
                        "type": "JSONObject"
                    },
                    "queryParameters": [
                        
                    ],
                    "verb": null,
                    "methodParameters": [
                        
                    ],
                    "pathParameters": [
                        
                    ],
                    "isPublic": true,
                    "code": {
                        "code": {
                            "JAVA": "\n\t\tJSONObject json=new JSONObject();\n\t\tjson.put(\"class\",JSONUtils.formatJSON(this.clazz));\n\t\tjson.put(\"id\",JSONUtils.formatJSON(this.id));\n\t\tjson.put(\"created\",JSONUtils.formatJSON(this.created));\n\t\tjson.put(\"updated\",JSONUtils.formatJSON(this.updated));\n\t\tjson.put(\"deleted\",JSONUtils.formatJSON(this.deleted));\n\t\tjson.put(\"user\",JSONUtils.formatJSON(this.user));\n\t\tjson.put(\"projects\",JSONUtils.formatJSON(this.projects));\n\t\tjson.put(\"storages\",JSONUtils.formatJSON(this.storages));\n\t\tjson.put(\"filename\",JSONUtils.formatJSON(this.filename));\n\t\tjson.put(\"originalFilename\",JSONUtils.formatJSON(this.originalFilename));\n\t\tjson.put(\"ext\",JSONUtils.formatJSON(this.ext));\n\t\tjson.put(\"size\",JSONUtils.formatJSON(this.size));\n\t\tjson.put(\"path\",JSONUtils.formatJSON(this.path));\n\t\tjson.put(\"status\",JSONUtils.formatJSON(this.status));\n\t\tjson.put(\"uploaded\",JSONUtils.formatJSON(this.uploaded));\n\t\tjson.put(\"converted\",JSONUtils.formatJSON(this.converted));\n\t\tjson.put(\"deployed\",JSONUtils.formatJSON(this.deployed));\n\t\tjson.put(\"error_format\",JSONUtils.formatJSON(this.error_format));\n\t\tjson.put(\"error_convert\",JSONUtils.formatJSON(this.error_convert));\n\t\tjson.put(\"uncompressed\",JSONUtils.formatJSON(this.uncompressed));\n\t\tjson.put(\"to_deploy\",JSONUtils.formatJSON(this.to_deploy));\n\n\t\treturn json;\n    "
                        }
                    },
                    "allParameters": [
                        
                    ],
                    "path": null,
                    "name": "toJSON"
                },
                {
                    "isStatic": true,
                    "isAbstract": false,
                    "type": {
                        "type": "UploadedFile"
                    },
                    "queryParameters": [
                        
                    ],
                    "verb": "GET",
                    "methodParameters": [
                        {
                            "type": {
                                "type": "Server"
                            },
                            "name": "server"
                        }
                    ],
                    "pathParameters": [
                        {
                            "type": {
                                "type": "Long"
                            },
                            "name": "id"
                        }
                    ],
                    "isPublic": true,
                    "code": {
                        "code": {
                            "JAVA": "\n\t\tString path = \"/api/uploadedfile/{id}.json?\";\n\t\tpath = path.replace(\"{id}\",id+\"\");\n\n\t\tJSONObject json = server.doGET(path);\n\t\tUploadedFile domain = new UploadedFile();\n\t\tdomain.build(json);\n\t\treturn domain;\n\n    "
                        }
                    },
                    "allParameters": [
                        {
                            "type": {
                                "type": "Server"
                            },
                            "name": "server"
                        },
                        {
                            "type": {
                                "type": "Long"
                            },
                            "name": "id"
                        }
                    ],
                    "path": "/api/uploadedfile/{id}.json",
                    "name": "get"
                },
                {
                    "isStatic": true,
                    "isAbstract": false,
                    "type": {
                        "type": "Abstractimage.|abstractImage|"
                    },
                    "queryParameters": [
                        
                    ],
                    "verb": "POST",
                    "methodParameters": [
                        {
                            "type": {
                                "type": "Server"
                            },
                            "name": "server"
                        }
                    ],
                    "pathParameters": [
                        {
                            "type": {
                                "type": "Long"
                            },
                            "name": "uploadedFile"
                        }
                    ],
                    "isPublic": true,
                    "code": {
                        "code": {
                            "JAVA": "\n\t\tthrow new Exception(\"Not yet implemented\");\n    "
                        }
                    },
                    "allParameters": [
                        {
                            "type": {
                                "type": "Server"
                            },
                            "name": "server"
                        },
                        {
                            "type": {
                                "type": "Long"
                            },
                            "name": "uploadedFile"
                        }
                    ],
                    "path": "/api/uploadedfile/{uploadedFile}/image.json",
                    "name": "createImage"
                },
                {
                    "isStatic": true,
                    "isAbstract": false,
                    "type": {
                        "type": "Empty"
                    },
                    "queryParameters": [
                        
                    ],
                    "verb": "POST",
                    "methodParameters": [
                        {
                            "type": {
                                "type": "Server"
                            },
                            "name": "server"
                        }
                    ],
                    "pathParameters": [
                        {
                            "type": {
                                "type": "Long"
                            },
                            "name": "id"
                        }
                    ],
                    "isPublic": true,
                    "code": {
                        "code": {
                            "JAVA": "\n\t\tthrow new Exception(\"Not yet implemented\");\n    "
                        }
                    },
                    "allParameters": [
                        {
                            "type": {
                                "type": "Server"
                            },
                            "name": "server"
                        },
                        {
                            "type": {
                                "type": "Long"
                            },
                            "name": "id"
                        }
                    ],
                    "path": "/api/abstractimage/{id}/properties/clear.json",
                    "name": "clearProperties"
                },
                {
                    "isStatic": true,
                    "isAbstract": false,
                    "type": {
                        "type": "Empty"
                    },
                    "queryParameters": [
                        
                    ],
                    "verb": "POST",
                    "methodParameters": [
                        {
                            "type": {
                                "type": "Server"
                            },
                            "name": "server"
                        }
                    ],
                    "pathParameters": [
                        {
                            "type": {
                                "type": "Long"
                            },
                            "name": "id"
                        }
                    ],
                    "isPublic": true,
                    "code": {
                        "code": {
                            "JAVA": "\n\t\tthrow new Exception(\"Not yet implemented\");\n    "
                        }
                    },
                    "allParameters": [
                        {
                            "type": {
                                "type": "Server"
                            },
                            "name": "server"
                        },
                        {
                            "type": {
                                "type": "Long"
                            },
                            "name": "id"
                        }
                    ],
                    "path": "/api/abstractimage/{id}/properties/populate.json",
                    "name": "populateProperties"
                },
                {
                    "isStatic": true,
                    "isAbstract": false,
                    "type": {
                        "type": "Empty"
                    },
                    "queryParameters": [
                        
                    ],
                    "verb": "POST",
                    "methodParameters": [
                        {
                            "type": {
                                "type": "Server"
                            },
                            "name": "server"
                        }
                    ],
                    "pathParameters": [
                        {
                            "type": {
                                "type": "Long"
                            },
                            "name": "id"
                        }
                    ],
                    "isPublic": true,
                    "code": {
                        "code": {
                            "JAVA": "\n\t\tthrow new Exception(\"Not yet implemented\");\n    "
                        }
                    },
                    "allParameters": [
                        {
                            "type": {
                                "type": "Server"
                            },
                            "name": "server"
                        },
                        {
                            "type": {
                                "type": "Long"
                            },
                            "name": "id"
                        }
                    ],
                    "path": "/api/abstractimage/{id}/properties/extract.json",
                    "name": "extractProperties"
                },
                {
                    "isStatic": false,
                    "isAbstract": false,
                    "type": {
                        "type": "Void"
                    },
                    "queryParameters": [
                        
                    ],
                    "verb": "POST",
                    "methodParameters": [
                        {
                            "type": {
                                "type": "Server"
                            },
                            "name": "server"
                        }
                    ],
                    "pathParameters": [
                        
                    ],
                    "isPublic": true,
                    "code": {
                        "code": {
                            "JAVA": "\n\t\tString path = \"/api/uploadedfile.json?\";\n\n\t\tJSONObject json = server.doPOST(path,this.toJSON());\n\n\t\tthis.build((JSONObject)json.get(\"uploadedfile\"));\n\n    "
                        }
                    },
                    "allParameters": [
                        {
                            "type": {
                                "type": "Server"
                            },
                            "name": "server"
                        }
                    ],
                    "path": "/api/uploadedfile.json",
                    "name": "add"
                },
                {
                    "isStatic": true,
                    "isAbstract": false,
                    "type": {
                        "type": "UploadedFile"
                    },
                    "queryParameters": [
                        
                    ],
                    "verb": "GET",
                    "methodParameters": [
                        {
                            "type": {
                                "type": "Server"
                            },
                            "name": "server"
                        }
                    ],
                    "pathParameters": [
                        
                    ],
                    "isPublic": true,
                    "code": {
                        "code": {
                            "JAVA": "\n\t\tthrow new Exception(\"Not yet implemented\");\n    "
                        }
                    },
                    "allParameters": [
                        {
                            "type": {
                                "type": "Server"
                            },
                            "name": "server"
                        }
                    ],
                    "path": "/api/uploadedfile.json",
                    "name": "list"
                },
                {
                    "isStatic": false,
                    "isAbstract": false,
                    "type": {
                        "type": "Void"
                    },
                    "queryParameters": [
                        
                    ],
                    "verb": "DELETE",
                    "methodParameters": [
                        {
                            "type": {
                                "type": "Server"
                            },
                            "name": "server"
                        }
                    ],
                    "pathParameters": [
                        
                    ],
                    "isPublic": true,
                    "code": {
                        "code": {
                            "JAVA": "\n\t\tString path = \"/api/uploadedfile/{id}.json?\";\n\t\tpath = path.replace(\"{id}\",getId()+\"\");\n\n\t\tserver.doDELETE(path);\n\t\tbuild(new JSONObject());\n\n    "
                        }
                    },
                    "allParameters": [
                        {
                            "type": {
                                "type": "Server"
                            },
                            "name": "server"
                        }
                    ],
                    "path": "/api/uploadedfile/{id}.json",
                    "name": "delete"
                },
                {
                    "isStatic": false,
                    "isAbstract": false,
                    "type": {
                        "type": "Void"
                    },
                    "queryParameters": [
                        
                    ],
                    "verb": "PUT",
                    "methodParameters": [
                        {
                            "type": {
                                "type": "Server"
                            },
                            "name": "server"
                        }
                    ],
                    "pathParameters": [
                        
                    ],
                    "isPublic": true,
                    "code": {
                        "code": {
                            "JAVA": "\n\t\tString path = \"/api/uploadedfile/{id}.json?\";\n\t\tpath = path.replace(\"{id}\",getId()+\"\");\n\n\t\tJSONObject json = server.doPUT(path,this.toJSON());\n\n\t\tthis.build((JSONObject)json.get(\"uploadedfile\"));\n\n    "
                        }
                    },
                    "allParameters": [
                        {
                            "type": {
                                "type": "Server"
                            },
                            "name": "server"
                        }
                    ],
                    "path": "/api/uploadedfile/{id}.json",
                    "name": "edit"
                }
            ],
            "name": "AbstractUploadedFile"
        },
        {
            "fullPackage": "be.cytomine.client.abst",
            "isAbstract": true,
            "comment": {
                "version": "0.1",
                "description": "A cytomine human user",
                "author": "ClientBuilder (Lo\u00EFc Rollus)"
            },
            "fields": [
                {
                    "useInConstructor": false,
                    "type": {
                        "type": "String"
                    },
                    "useInSetter": false,
                    "comment": {
                        "description": "The full class name of the domain"
                    },
                    "useInGetter": true,
                    "name": "clazz"
                },
                {
                    "useInConstructor": false,
                    "type": {
                        "type": "Long"
                    },
                    "useInSetter": false,
                    "comment": {
                        "description": "The domain id"
                    },
                    "useInGetter": true,
                    "name": "id"
                },
                {
                    "useInConstructor": false,
                    "type": {
                        "type": "Date"
                    },
                    "useInSetter": false,
                    "comment": {
                        "description": "The date of the domain creation"
                    },
                    "useInGetter": true,
                    "name": "created"
                },
                {
                    "useInConstructor": false,
                    "type": {
                        "type": "Date"
                    },
                    "useInSetter": false,
                    "comment": {
                        "description": "The date of the domain modification"
                    },
                    "useInGetter": true,
                    "name": "updated"
                },
                {
                    "useInConstructor": false,
                    "type": {
                        "type": "Date"
                    },
                    "useInSetter": false,
                    "comment": {
                        "description": "When domain was removed from Cytomine"
                    },
                    "useInGetter": true,
                    "name": "deleted"
                },
                {
                    "useInConstructor": true,
                    "type": {
                        "type": "String"
                    },
                    "useInSetter": true,
                    "comment": {
                        "description": "The username of the user"
                    },
                    "useInGetter": true,
                    "name": "username"
                },
                {
                    "useInConstructor": false,
                    "type": {
                        "type": "Boolean"
                    },
                    "useInSetter": false,
                    "comment": {
                        "description": "If true, user is a userjob"
                    },
                    "useInGetter": true,
                    "name": "algo"
                },
                {
                    "useInConstructor": true,
                    "type": {
                        "type": "String"
                    },
                    "useInSetter": true,
                    "comment": {
                        "description": "The firstname of the user"
                    },
                    "useInGetter": true,
                    "name": "firstname"
                },
                {
                    "useInConstructor": true,
                    "type": {
                        "type": "String"
                    },
                    "useInSetter": true,
                    "comment": {
                        "description": "The lastname of the user"
                    },
                    "useInGetter": true,
                    "name": "lastname"
                },
                {
                    "useInConstructor": true,
                    "type": {
                        "type": "String"
                    },
                    "useInSetter": true,
                    "comment": {
                        "description": "The email of the user"
                    },
                    "useInGetter": true,
                    "name": "email"
                },
                {
                    "useInConstructor": true,
                    "type": {
                        "type": "String"
                    },
                    "useInSetter": true,
                    "comment": {
                        "description": "The SIP account of the user"
                    },
                    "useInGetter": true,
                    "name": "sipAccount"
                },
                {
                    "useInConstructor": false,
                    "type": {
                        "type": "String"
                    },
                    "useInSetter": true,
                    "comment": {
                        "description": "The user public key"
                    },
                    "useInGetter": true,
                    "name": "publicKey"
                },
                {
                    "useInConstructor": false,
                    "type": {
                        "type": "String"
                    },
                    "useInSetter": true,
                    "comment": {
                        "description": "The user private key"
                    },
                    "useInGetter": true,
                    "name": "privateKey"
                },
                {
                    "useInConstructor": false,
                    "type": {
                        "type": "Boolean"
                    },
                    "useInSetter": false,
                    "comment": {
                        "description": "If true, password is expired"
                    },
                    "useInGetter": false,
                    "name": "passwordExpired"
                },
                {
                    "useInConstructor": false,
                    "type": {
                        "type": "Object"
                    },
                    "useInSetter": true,
                    "comment": {
                        "description": "Undefined"
                    },
                    "useInGetter": true,
                    "name": "color"
                },
                {
                    "useInConstructor": false,
                    "type": {
                        "type": "Boolean"
                    },
                    "useInSetter": false,
                    "comment": {
                        "description": "If true, account is expired"
                    },
                    "useInGetter": false,
                    "name": "accountExpired"
                },
                {
                    "useInConstructor": false,
                    "type": {
                        "type": "Boolean"
                    },
                    "useInSetter": false,
                    "comment": {
                        "description": "If true, account is locked"
                    },
                    "useInGetter": false,
                    "name": "accountLocked"
                },
                {
                    "useInConstructor": false,
                    "type": {
                        "type": "Boolean"
                    },
                    "useInSetter": false,
                    "comment": {
                        "description": "(ONLY VISIBLE WHEN DOING GET /api/user/id.format service) True if the user is ADMIN "
                    },
                    "useInGetter": false,
                    "name": "admin"
                },
                {
                    "useInConstructor": false,
                    "type": {
                        "type": "Boolean"
                    },
                    "useInSetter": false,
                    "comment": {
                        "description": "If true, account is enabled"
                    },
                    "useInGetter": false,
                    "name": "enabled"
                },
                {
                    "useInConstructor": false,
                    "type": {
                        "type": "Boolean"
                    },
                    "useInSetter": false,
                    "comment": {
                        "description": "(ONLY VISIBLE WHEN DOING GET /api/user/id.format service) True if the user is NOT ADMIN, NOT USER but a simple GHEST "
                    },
                    "useInGetter": false,
                    "name": "ghest"
                },
                {
                    "useInConstructor": true,
                    "type": {
                        "type": "String"
                    },
                    "useInSetter": true,
                    "comment": {
                        "description": "The user password"
                    },
                    "useInGetter": false,
                    "name": "password"
                },
                {
                    "useInConstructor": true,
                    "type": {
                        "type": "String"
                    },
                    "useInSetter": true,
                    "comment": {
                        "description": "The skype account of the user"
                    },
                    "useInGetter": false,
                    "name": "skypeAccount"
                },
                {
                    "useInConstructor": false,
                    "type": {
                        "type": "Boolean"
                    },
                    "useInSetter": false,
                    "comment": {
                        "description": "(ONLY VISIBLE WHEN DOING GET /api/user/id.format service) True if the user is NOT ADMIN and is USER "
                    },
                    "useInGetter": false,
                    "name": "user"
                }
            ],
            "domainName": "User",
            "methods": [
                {
                    "isStatic": false,
                    "isAbstract": false,
                    "type": {
                        "type": "Void"
                    },
                    "queryParameters": [
                        
                    ],
                    "verb": null,
                    "methodParameters": [
                        {
                            "type": {
                                "type": "String"
                            },
                            "name": "username"
                        },
                        {
                            "type": {
                                "type": "String"
                            },
                            "name": "firstname"
                        },
                        {
                            "type": {
                                "type": "String"
                            },
                            "name": "lastname"
                        },
                        {
                            "type": {
                                "type": "String"
                            },
                            "name": "email"
                        },
                        {
                            "type": {
                                "type": "String"
                            },
                            "name": "sipAccount"
                        },
                        {
                            "type": {
                                "type": "String"
                            },
                            "name": "password"
                        },
                        {
                            "type": {
                                "type": "String"
                            },
                            "name": "skypeAccount"
                        }
                    ],
                    "pathParameters": [
                        
                    ],
                    "isPublic": true,
                    "code": {
                        "code": {
                            "JAVA": "\n\t\tthis.username=username;\n\t\tthis.firstname=firstname;\n\t\tthis.lastname=lastname;\n\t\tthis.email=email;\n\t\tthis.sipAccount=sipAccount;\n\t\tthis.password=password;\n\t\tthis.skypeAccount=skypeAccount;\n\n    "
                        }
                    },
                    "allParameters": [
                        {
                            "type": {
                                "type": "String"
                            },
                            "name": "username"
                        },
                        {
                            "type": {
                                "type": "String"
                            },
                            "name": "firstname"
                        },
                        {
                            "type": {
                                "type": "String"
                            },
                            "name": "lastname"
                        },
                        {
                            "type": {
                                "type": "String"
                            },
                            "name": "email"
                        },
                        {
                            "type": {
                                "type": "String"
                            },
                            "name": "sipAccount"
                        },
                        {
                            "type": {
                                "type": "String"
                            },
                            "name": "password"
                        },
                        {
                            "type": {
                                "type": "String"
                            },
                            "name": "skypeAccount"
                        }
                    ],
                    "path": null,
                    "name": "build"
                },
                {
                    "isStatic": false,
                    "isAbstract": false,
                    "type": {
                        "type": "Void"
                    },
                    "queryParameters": [
                        
                    ],
                    "verb": null,
                    "methodParameters": [
                        {
                            "type": {
                                "type": "JSONObject"
                            },
                            "name": "json"
                        }
                    ],
                    "pathParameters": [
                        
                    ],
                    "isPublic": true,
                    "code": {
                        "code": {
                            "JAVA": "\n\t\tthis.clazz =JSONUtils.extractJSONString(json.get(\"class\"));\n\t\tthis.id =JSONUtils.extractJSONLong(json.get(\"id\"));\n\t\tthis.created =JSONUtils.extractJSONDate(json.get(\"created\"));\n\t\tthis.updated =JSONUtils.extractJSONDate(json.get(\"updated\"));\n\t\tthis.deleted =JSONUtils.extractJSONDate(json.get(\"deleted\"));\n\t\tthis.username =JSONUtils.extractJSONString(json.get(\"username\"));\n\t\tthis.algo =JSONUtils.extractJSONBoolean(json.get(\"algo\"));\n\t\tthis.firstname =JSONUtils.extractJSONString(json.get(\"firstname\"));\n\t\tthis.lastname =JSONUtils.extractJSONString(json.get(\"lastname\"));\n\t\tthis.email =JSONUtils.extractJSONString(json.get(\"email\"));\n\t\tthis.sipAccount =JSONUtils.extractJSONString(json.get(\"sipAccount\"));\n\t\tthis.publicKey =JSONUtils.extractJSONString(json.get(\"publicKey\"));\n\t\tthis.privateKey =JSONUtils.extractJSONString(json.get(\"privateKey\"));\n\t\tthis.passwordExpired =JSONUtils.extractJSONBoolean(json.get(\"passwordExpired\"));\n\t\tthis.color =JSONUtils.extractJSONObject(json.get(\"color\"));\n\t\tthis.accountExpired =JSONUtils.extractJSONBoolean(json.get(\"accountExpired\"));\n\t\tthis.accountLocked =JSONUtils.extractJSONBoolean(json.get(\"accountLocked\"));\n\t\tthis.admin =JSONUtils.extractJSONBoolean(json.get(\"admin\"));\n\t\tthis.enabled =JSONUtils.extractJSONBoolean(json.get(\"enabled\"));\n\t\tthis.ghest =JSONUtils.extractJSONBoolean(json.get(\"ghest\"));\n\t\tthis.password =JSONUtils.extractJSONString(json.get(\"password\"));\n\t\tthis.skypeAccount =JSONUtils.extractJSONString(json.get(\"skypeAccount\"));\n\t\tthis.user =JSONUtils.extractJSONBoolean(json.get(\"user\"));\n\n    "
                        }
                    },
                    "allParameters": [
                        {
                            "type": {
                                "type": "JSONObject"
                            },
                            "name": "json"
                        }
                    ],
                    "path": null,
                    "name": "build"
                },
                {
                    "isStatic": false,
                    "isAbstract": false,
                    "type": {
                        "type": "JSONObject"
                    },
                    "queryParameters": [
                        
                    ],
                    "verb": null,
                    "methodParameters": [
                        
                    ],
                    "pathParameters": [
                        
                    ],
                    "isPublic": true,
                    "code": {
                        "code": {
                            "JAVA": "\n\t\tJSONObject json=new JSONObject();\n\t\tjson.put(\"class\",JSONUtils.formatJSON(this.clazz));\n\t\tjson.put(\"id\",JSONUtils.formatJSON(this.id));\n\t\tjson.put(\"created\",JSONUtils.formatJSON(this.created));\n\t\tjson.put(\"updated\",JSONUtils.formatJSON(this.updated));\n\t\tjson.put(\"deleted\",JSONUtils.formatJSON(this.deleted));\n\t\tjson.put(\"username\",JSONUtils.formatJSON(this.username));\n\t\tjson.put(\"algo\",JSONUtils.formatJSON(this.algo));\n\t\tjson.put(\"firstname\",JSONUtils.formatJSON(this.firstname));\n\t\tjson.put(\"lastname\",JSONUtils.formatJSON(this.lastname));\n\t\tjson.put(\"email\",JSONUtils.formatJSON(this.email));\n\t\tjson.put(\"sipAccount\",JSONUtils.formatJSON(this.sipAccount));\n\t\tjson.put(\"publicKey\",JSONUtils.formatJSON(this.publicKey));\n\t\tjson.put(\"privateKey\",JSONUtils.formatJSON(this.privateKey));\n\t\tjson.put(\"color\",JSONUtils.formatJSON(this.color));\n\n\t\treturn json;\n    "
                        }
                    },
                    "allParameters": [
                        
                    ],
                    "path": null,
                    "name": "toJSON"
                },
                {
                    "isStatic": true,
                    "isAbstract": false,
                    "type": {
                        "type": "User"
                    },
                    "queryParameters": [
                        
                    ],
                    "verb": "GET",
                    "methodParameters": [
                        {
                            "type": {
                                "type": "Server"
                            },
                            "name": "server"
                        }
                    ],
                    "pathParameters": [
                        {
                            "type": {
                                "type": "Long/string"
                            },
                            "name": "id"
                        }
                    ],
                    "isPublic": true,
                    "code": {
                        "code": {
                            "JAVA": "\n\t\tString path = \"/api/user/{id}.json?\";\n\t\tpath = path.replace(\"{id}\",id+\"\");\n\n\t\tJSONObject json = server.doGET(path);\n\t\tUser domain = new User();\n\t\tdomain.build(json);\n\t\treturn domain;\n\n    "
                        }
                    },
                    "allParameters": [
                        {
                            "type": {
                                "type": "Server"
                            },
                            "name": "server"
                        },
                        {
                            "type": {
                                "type": "Long/string"
                            },
                            "name": "id"
                        }
                    ],
                    "path": "/api/user/{id}.json",
                    "name": "get"
                },
                {
                    "isStatic": true,
                    "isAbstract": false,
                    "type": {
                        "type": "User"
                    },
                    "queryParameters": [
                        {
                            "type": {
                                "type": "Boolean"
                            },
                            "name": "online"
                        },
                        {
                            "type": {
                                "type": "Integer"
                            },
                            "name": "max"
                        },
                        {
                            "type": {
                                "type": "Integer"
                            },
                            "name": "offset"
                        }
                    ],
                    "verb": "GET",
                    "methodParameters": [
                        {
                            "type": {
                                "type": "Server"
                            },
                            "name": "server"
                        }
                    ],
                    "pathParameters": [
                        {
                            "type": {
                                "type": "Long"
                            },
                            "name": "id"
                        }
                    ],
                    "isPublic": true,
                    "code": {
                        "code": {
                            "JAVA": "\n\t\tthrow new Exception(\"Not yet implemented\");\n    "
                        }
                    },
                    "allParameters": [
                        {
                            "type": {
                                "type": "Server"
                            },
                            "name": "server"
                        },
                        {
                            "type": {
                                "type": "Long"
                            },
                            "name": "id"
                        },
                        {
                            "type": {
                                "type": "Boolean"
                            },
                            "name": "online"
                        },
                        {
                            "type": {
                                "type": "Integer"
                            },
                            "name": "max"
                        },
                        {
                            "type": {
                                "type": "Integer"
                            },
                            "name": "offset"
                        }
                    ],
                    "path": "/api/project/{id}/user.json",
                    "name": "showByProject"
                },
                {
                    "isStatic": true,
                    "isAbstract": false,
                    "type": {
                        "type": "User"
                    },
                    "queryParameters": [
                        {
                            "type": {
                                "type": "Integer"
                            },
                            "name": "max"
                        },
                        {
                            "type": {
                                "type": "Integer"
                            },
                            "name": "offset"
                        }
                    ],
                    "verb": "GET",
                    "methodParameters": [
                        {
                            "type": {
                                "type": "Server"
                            },
                            "name": "server"
                        }
                    ],
                    "pathParameters": [
                        {
                            "type": {
                                "type": "Long"
                            },
                            "name": "id"
                        }
                    ],
                    "isPublic": true,
                    "code": {
                        "code": {
                            "JAVA": "\n\t\tthrow new Exception(\"Not yet implemented\");\n    "
                        }
                    },
                    "allParameters": [
                        {
                            "type": {
                                "type": "Server"
                            },
                            "name": "server"
                        },
                        {
                            "type": {
                                "type": "Long"
                            },
                            "name": "id"
                        },
                        {
                            "type": {
                                "type": "Integer"
                            },
                            "name": "max"
                        },
                        {
                            "type": {
                                "type": "Integer"
                            },
                            "name": "offset"
                        }
                    ],
                    "path": "/api/project/{id}/admin.json",
                    "name": "showAdminByProject"
                },
                {
                    "isStatic": true,
                    "isAbstract": false,
                    "type": {
                        "type": "User"
                    },
                    "queryParameters": [
                        {
                            "type": {
                                "type": "Integer"
                            },
                            "name": "max"
                        },
                        {
                            "type": {
                                "type": "Integer"
                            },
                            "name": "offset"
                        }
                    ],
                    "verb": "GET",
                    "methodParameters": [
                        {
                            "type": {
                                "type": "Server"
                            },
                            "name": "server"
                        }
                    ],
                    "pathParameters": [
                        {
                            "type": {
                                "type": "Long"
                            },
                            "name": "id"
                        }
                    ],
                    "isPublic": true,
                    "code": {
                        "code": {
                            "JAVA": "\n\t\tthrow new Exception(\"Not yet implemented\");\n    "
                        }
                    },
                    "allParameters": [
                        {
                            "type": {
                                "type": "Server"
                            },
                            "name": "server"
                        },
                        {
                            "type": {
                                "type": "Long"
                            },
                            "name": "id"
                        },
                        {
                            "type": {
                                "type": "Integer"
                            },
                            "name": "max"
                        },
                        {
                            "type": {
                                "type": "Integer"
                            },
                            "name": "offset"
                        }
                    ],
                    "path": "/api/project/{id}/creator.json",
                    "name": "showCreatorByProject"
                },
                {
                    "isStatic": true,
                    "isAbstract": false,
                    "type": {
                        "type": "User"
                    },
                    "queryParameters": [
                        {
                            "type": {
                                "type": "Integer"
                            },
                            "name": "max"
                        },
                        {
                            "type": {
                                "type": "Integer"
                            },
                            "name": "offset"
                        }
                    ],
                    "verb": "GET",
                    "methodParameters": [
                        {
                            "type": {
                                "type": "Server"
                            },
                            "name": "server"
                        }
                    ],
                    "pathParameters": [
                        {
                            "type": {
                                "type": "Long"
                            },
                            "name": "id"
                        }
                    ],
                    "isPublic": true,
                    "code": {
                        "code": {
                            "JAVA": "\n\t\tthrow new Exception(\"Not yet implemented\");\n    "
                        }
                    },
                    "allParameters": [
                        {
                            "type": {
                                "type": "Server"
                            },
                            "name": "server"
                        },
                        {
                            "type": {
                                "type": "Long"
                            },
                            "name": "id"
                        },
                        {
                            "type": {
                                "type": "Integer"
                            },
                            "name": "max"
                        },
                        {
                            "type": {
                                "type": "Integer"
                            },
                            "name": "offset"
                        }
                    ],
                    "path": "/api/ontology/{id}/creator.json",
                    "name": "showCreatorByOntology"
                },
                {
                    "isStatic": true,
                    "isAbstract": false,
                    "type": {
                        "type": "User"
                    },
                    "queryParameters": [
                        {
                            "type": {
                                "type": "Integer"
                            },
                            "name": "max"
                        },
                        {
                            "type": {
                                "type": "Integer"
                            },
                            "name": "offset"
                        }
                    ],
                    "verb": "GET",
                    "methodParameters": [
                        {
                            "type": {
                                "type": "Server"
                            },
                            "name": "server"
                        }
                    ],
                    "pathParameters": [
                        {
                            "type": {
                                "type": "Long"
                            },
                            "name": "id"
                        }
                    ],
                    "isPublic": true,
                    "code": {
                        "code": {
                            "JAVA": "\n\t\tthrow new Exception(\"Not yet implemented\");\n    "
                        }
                    },
                    "allParameters": [
                        {
                            "type": {
                                "type": "Server"
                            },
                            "name": "server"
                        },
                        {
                            "type": {
                                "type": "Long"
                            },
                            "name": "id"
                        },
                        {
                            "type": {
                                "type": "Integer"
                            },
                            "name": "max"
                        },
                        {
                            "type": {
                                "type": "Integer"
                            },
                            "name": "offset"
                        }
                    ],
                    "path": "/api/ontology/{id}/user.json",
                    "name": "showUserByOntology"
                },
                {
                    "isStatic": true,
                    "isAbstract": false,
                    "type": {
                        "type": "User"
                    },
                    "queryParameters": [
                        {
                            "type": {
                                "type": "Integer"
                            },
                            "name": "max"
                        },
                        {
                            "type": {
                                "type": "Integer"
                            },
                            "name": "offset"
                        }
                    ],
                    "verb": "GET",
                    "methodParameters": [
                        {
                            "type": {
                                "type": "Server"
                            },
                            "name": "server"
                        }
                    ],
                    "pathParameters": [
                        {
                            "type": {
                                "type": "Long"
                            },
                            "name": "id"
                        },
                        {
                            "type": {
                                "type": "Long"
                            },
                            "name": "image"
                        }
                    ],
                    "isPublic": true,
                    "code": {
                        "code": {
                            "JAVA": "\n\t\tthrow new Exception(\"Not yet implemented\");\n    "
                        }
                    },
                    "allParameters": [
                        {
                            "type": {
                                "type": "Server"
                            },
                            "name": "server"
                        },
                        {
                            "type": {
                                "type": "Long"
                            },
                            "name": "id"
                        },
                        {
                            "type": {
                                "type": "Long"
                            },
                            "name": "image"
                        },
                        {
                            "type": {
                                "type": "Integer"
                            },
                            "name": "max"
                        },
                        {
                            "type": {
                                "type": "Integer"
                            },
                            "name": "offset"
                        }
                    ],
                    "path": "/api/project/{id}/userlayer.json",
                    "name": "showLayerByProject"
                },
                {
                    "isStatic": true,
                    "isAbstract": false,
                    "type": {
                        "type": "User"
                    },
                    "queryParameters": [
                        
                    ],
                    "verb": "GET",
                    "methodParameters": [
                        {
                            "type": {
                                "type": "Server"
                            },
                            "name": "server"
                        }
                    ],
                    "pathParameters": [
                        
                    ],
                    "isPublic": true,
                    "code": {
                        "code": {
                            "JAVA": "\n\t\tthrow new Exception(\"Not yet implemented\");\n    "
                        }
                    },
                    "allParameters": [
                        {
                            "type": {
                                "type": "Server"
                            },
                            "name": "server"
                        }
                    ],
                    "path": "/api/user/current.json",
                    "name": "showCurrent"
                },
                {
                    "isStatic": true,
                    "isAbstract": false,
                    "type": {
                        "type": "Empty"
                    },
                    "queryParameters": [
                        
                    ],
                    "verb": "POST",
                    "methodParameters": [
                        {
                            "type": {
                                "type": "Server"
                            },
                            "name": "server"
                        }
                    ],
                    "pathParameters": [
                        {
                            "type": {
                                "type": "Long"
                            },
                            "name": "id"
                        },
                        {
                            "type": {
                                "type": "Long"
                            },
                            "name": "idUser"
                        }
                    ],
                    "isPublic": true,
                    "code": {
                        "code": {
                            "JAVA": "\n\t\tthrow new Exception(\"Not yet implemented\");\n    "
                        }
                    },
                    "allParameters": [
                        {
                            "type": {
                                "type": "Server"
                            },
                            "name": "server"
                        },
                        {
                            "type": {
                                "type": "Long"
                            },
                            "name": "id"
                        },
                        {
                            "type": {
                                "type": "Long"
                            },
                            "name": "idUser"
                        }
                    ],
                    "path": "/api/project/{id}/user/{idUser}.json",
                    "name": "addUserToProject"
                },
                {
                    "isStatic": true,
                    "isAbstract": false,
                    "type": {
                        "type": "Empty"
                    },
                    "queryParameters": [
                        
                    ],
                    "verb": "DELETE",
                    "methodParameters": [
                        {
                            "type": {
                                "type": "Server"
                            },
                            "name": "server"
                        }
                    ],
                    "pathParameters": [
                        {
                            "type": {
                                "type": "Long"
                            },
                            "name": "id"
                        },
                        {
                            "type": {
                                "type": "Long"
                            },
                            "name": "idUser"
                        }
                    ],
                    "isPublic": true,
                    "code": {
                        "code": {
                            "JAVA": "\n\t\tthrow new Exception(\"Not yet implemented\");\n    "
                        }
                    },
                    "allParameters": [
                        {
                            "type": {
                                "type": "Server"
                            },
                            "name": "server"
                        },
                        {
                            "type": {
                                "type": "Long"
                            },
                            "name": "id"
                        },
                        {
                            "type": {
                                "type": "Long"
                            },
                            "name": "idUser"
                        }
                    ],
                    "path": "/api/project/{id}/user/{idUser}.json",
                    "name": "deleteUserFromProject"
                },
                {
                    "isStatic": true,
                    "isAbstract": false,
                    "type": {
                        "type": "Empty"
                    },
                    "queryParameters": [
                        
                    ],
                    "verb": "POST",
                    "methodParameters": [
                        {
                            "type": {
                                "type": "Server"
                            },
                            "name": "server"
                        }
                    ],
                    "pathParameters": [
                        {
                            "type": {
                                "type": "Long"
                            },
                            "name": "id"
                        },
                        {
                            "type": {
                                "type": "Long"
                            },
                            "name": "idUser"
                        }
                    ],
                    "isPublic": true,
                    "code": {
                        "code": {
                            "JAVA": "\n\t\tthrow new Exception(\"Not yet implemented\");\n    "
                        }
                    },
                    "allParameters": [
                        {
                            "type": {
                                "type": "Server"
                            },
                            "name": "server"
                        },
                        {
                            "type": {
                                "type": "Long"
                            },
                            "name": "id"
                        },
                        {
                            "type": {
                                "type": "Long"
                            },
                            "name": "idUser"
                        }
                    ],
                    "path": "/api/project/{id}/user/{idUser}/admin.json",
                    "name": "addUserAdminToProject"
                },
                {
                    "isStatic": true,
                    "isAbstract": false,
                    "type": {
                        "type": "Empty"
                    },
                    "queryParameters": [
                        
                    ],
                    "verb": "DELETE",
                    "methodParameters": [
                        {
                            "type": {
                                "type": "Server"
                            },
                            "name": "server"
                        }
                    ],
                    "pathParameters": [
                        {
                            "type": {
                                "type": "Long"
                            },
                            "name": "id"
                        },
                        {
                            "type": {
                                "type": "Long"
                            },
                            "name": "idUser"
                        }
                    ],
                    "isPublic": true,
                    "code": {
                        "code": {
                            "JAVA": "\n\t\tthrow new Exception(\"Not yet implemented\");\n    "
                        }
                    },
                    "allParameters": [
                        {
                            "type": {
                                "type": "Server"
                            },
                            "name": "server"
                        },
                        {
                            "type": {
                                "type": "Long"
                            },
                            "name": "id"
                        },
                        {
                            "type": {
                                "type": "Long"
                            },
                            "name": "idUser"
                        }
                    ],
                    "path": "/api/project/{id}/user/{idUser}/admin.json",
                    "name": "deleteUserAdminFromProject"
                },
                {
                    "isStatic": true,
                    "isAbstract": false,
                    "type": {
                        "type": "User"
                    },
                    "queryParameters": [
                        {
                            "type": {
                                "type": "String"
                            },
                            "name": "password"
                        }
                    ],
                    "verb": "PUT",
                    "methodParameters": [
                        {
                            "type": {
                                "type": "Server"
                            },
                            "name": "server"
                        }
                    ],
                    "pathParameters": [
                        {
                            "type": {
                                "type": "Long"
                            },
                            "name": "id"
                        }
                    ],
                    "isPublic": true,
                    "code": {
                        "code": {
                            "JAVA": "\n\t\tthrow new Exception(\"Not yet implemented\");\n    "
                        }
                    },
                    "allParameters": [
                        {
                            "type": {
                                "type": "Server"
                            },
                            "name": "server"
                        },
                        {
                            "type": {
                                "type": "Long"
                            },
                            "name": "id"
                        },
                        {
                            "type": {
                                "type": "String"
                            },
                            "name": "password"
                        }
                    ],
                    "path": "/api/user/{id}/password.json",
                    "name": "resetPassword"
                },
                {
                    "isStatic": true,
                    "isAbstract": false,
                    "type": {
                        "type": "List"
                    },
                    "queryParameters": [
                        {
                            "type": {
                                "type": "Long"
                            },
                            "name": "project"
                        },
                        {
                            "type": {
                                "type": "Boolean"
                            },
                            "name": "offline"
                        }
                    ],
                    "verb": "GET",
                    "methodParameters": [
                        {
                            "type": {
                                "type": "Server"
                            },
                            "name": "server"
                        }
                    ],
                    "pathParameters": [
                        {
                            "type": {
                                "type": "Long"
                            },
                            "name": "id"
                        }
                    ],
                    "isPublic": true,
                    "code": {
                        "code": {
                            "JAVA": "\n\t\tString path = \"/api/user/{id}/friends.json?\";\n\t\tpath = path.replace(\"{id}\",id+\"\");\n\t\tpath = path + \"&project=\" + project;\n\t\tpath = path + \"&offline=\" + offline;\n\n\t\tJSONArray json = server.doGETList(path);\n\t\tList<User> domains = new ArrayList<User>();\n\t\tfor(int i=0;i<json.size();i++) {\n\t\t\tUser domain = new User();\n\t\t\tdomain.build((JSONObject)json.get(i));\n\t\t\t domains.add(domain);\n\t\t }\n\t\treturn domains;\n\n    "
                        }
                    },
                    "allParameters": [
                        {
                            "type": {
                                "type": "Server"
                            },
                            "name": "server"
                        },
                        {
                            "type": {
                                "type": "Long"
                            },
                            "name": "id"
                        },
                        {
                            "type": {
                                "type": "Long"
                            },
                            "name": "project"
                        },
                        {
                            "type": {
                                "type": "Boolean"
                            },
                            "name": "offline"
                        }
                    ],
                    "path": "/api/user/{id}/friends.json",
                    "name": "listFriends"
                },
                {
                    "isStatic": true,
                    "isAbstract": false,
                    "type": {
                        "type": "List"
                    },
                    "queryParameters": [
                        {
                            "type": {
                                "type": "Long"
                            },
                            "name": "project"
                        },
                        {
                            "type": {
                                "type": "Boolean"
                            },
                            "name": "offline"
                        },
                        {
                            "type": {
                                "type": "Integer"
                            },
                            "name": "max"
                        },
                        {
                            "type": {
                                "type": "Integer"
                            },
                            "name": "offset"
                        }
                    ],
                    "verb": "GET",
                    "methodParameters": [
                        {
                            "type": {
                                "type": "Server"
                            },
                            "name": "server"
                        }
                    ],
                    "pathParameters": [
                        {
                            "type": {
                                "type": "Long"
                            },
                            "name": "id"
                        }
                    ],
                    "isPublic": true,
                    "code": {
                        "code": {
                            "JAVA": "\n\t\tString path = \"/api/user/{id}/friends.json?\";\n\t\tpath = path.replace(\"{id}\",id+\"\");\n\t\tpath = path + \"&project=\" + project;\n\t\tpath = path + \"&offline=\" + offline;\n\t\tpath = path + \"&max=\" + max;\n\t\tpath = path + \"&offset=\" + offset;\n\n\t\tJSONArray json = server.doGETList(path);\n\t\tList<User> domains = new ArrayList<User>();\n\t\tfor(int i=0;i<json.size();i++) {\n\t\t\tUser domain = new User();\n\t\t\tdomain.build((JSONObject)json.get(i));\n\t\t\t domains.add(domain);\n\t\t }\n\t\treturn domains;\n\n    "
                        }
                    },
                    "allParameters": [
                        {
                            "type": {
                                "type": "Server"
                            },
                            "name": "server"
                        },
                        {
                            "type": {
                                "type": "Long"
                            },
                            "name": "id"
                        },
                        {
                            "type": {
                                "type": "Long"
                            },
                            "name": "project"
                        },
                        {
                            "type": {
                                "type": "Boolean"
                            },
                            "name": "offline"
                        },
                        {
                            "type": {
                                "type": "Integer"
                            },
                            "name": "max"
                        },
                        {
                            "type": {
                                "type": "Integer"
                            },
                            "name": "offset"
                        }
                    ],
                    "path": "/api/user/{id}/friends.json",
                    "name": "listFriends"
                },
                {
                    "isStatic": true,
                    "isAbstract": false,
                    "type": {
                        "type": "ListOfId:%idUser%,image:%idImage%,Filename:%ImagePath%,OriginalFilename:%ImageFilename%,Date:%LastPositionDate%"
                    },
                    "queryParameters": [
                        {
                            "type": {
                                "type": "Integer"
                            },
                            "name": "max"
                        },
                        {
                            "type": {
                                "type": "Integer"
                            },
                            "name": "offset"
                        }
                    ],
                    "verb": "GET",
                    "methodParameters": [
                        {
                            "type": {
                                "type": "Server"
                            },
                            "name": "server"
                        }
                    ],
                    "pathParameters": [
                        {
                            "type": {
                                "type": "Long"
                            },
                            "name": "id"
                        }
                    ],
                    "isPublic": true,
                    "code": {
                        "code": {
                            "JAVA": "\n\t\tthrow new Exception(\"Not yet implemented\");\n    "
                        }
                    },
                    "allParameters": [
                        {
                            "type": {
                                "type": "Server"
                            },
                            "name": "server"
                        },
                        {
                            "type": {
                                "type": "Long"
                            },
                            "name": "id"
                        },
                        {
                            "type": {
                                "type": "Integer"
                            },
                            "name": "max"
                        },
                        {
                            "type": {
                                "type": "Integer"
                            },
                            "name": "offset"
                        }
                    ],
                    "path": "/api/project/{id}/online/user.json",
                    "name": "listOnlineFriendsWithPosition"
                },
                {
                    "isStatic": true,
                    "isAbstract": false,
                    "type": {
                        "type": "User"
                    },
                    "queryParameters": [
                        {
                            "type": {
                                "type": "Long"
                            },
                            "name": "username"
                        },
                        {
                            "type": {
                                "type": "Integer"
                            },
                            "name": "max"
                        },
                        {
                            "type": {
                                "type": "Integer"
                            },
                            "name": "offset"
                        }
                    ],
                    "verb": "POST",
                    "methodParameters": [
                        {
                            "type": {
                                "type": "Server"
                            },
                            "name": "server"
                        }
                    ],
                    "pathParameters": [
                        
                    ],
                    "isPublic": true,
                    "code": {
                        "code": {
                            "JAVA": "\n\t\tthrow new Exception(\"Not yet implemented\");\n    "
                        }
                    },
                    "allParameters": [
                        {
                            "type": {
                                "type": "Server"
                            },
                            "name": "server"
                        },
                        {
                            "type": {
                                "type": "Long"
                            },
                            "name": "username"
                        },
                        {
                            "type": {
                                "type": "Integer"
                            },
                            "name": "max"
                        },
                        {
                            "type": {
                                "type": "Integer"
                            },
                            "name": "offset"
                        }
                    ],
                    "path": "/api/ldap/user.json",
                    "name": "addFromLDAP"
                },
                {
                    "isStatic": true,
                    "isAbstract": false,
                    "type": {
                        "type": "Signature:x,PublicKey:x"
                    },
                    "queryParameters": [
                        {
                            "type": {
                                "type": "String"
                            },
                            "name": "method"
                        },
                        {
                            "type": {
                                "type": "String"
                            },
                            "name": "content-MD5"
                        },
                        {
                            "type": {
                                "type": "String"
                            },
                            "name": "content-type"
                        },
                        {
                            "type": {
                                "type": "String"
                            },
                            "name": "date"
                        },
                        {
                            "type": {
                                "type": "String"
                            },
                            "name": "queryString"
                        },
                        {
                            "type": {
                                "type": "String"
                            },
                            "name": "forwardURI"
                        }
                    ],
                    "verb": "GET",
                    "methodParameters": [
                        {
                            "type": {
                                "type": "Server"
                            },
                            "name": "server"
                        }
                    ],
                    "pathParameters": [
                        
                    ],
                    "isPublic": true,
                    "code": {
                        "code": {
                            "JAVA": "\n\t\tthrow new Exception(\"Not yet implemented\");\n    "
                        }
                    },
                    "allParameters": [
                        {
                            "type": {
                                "type": "Server"
                            },
                            "name": "server"
                        },
                        {
                            "type": {
                                "type": "String"
                            },
                            "name": "method"
                        },
                        {
                            "type": {
                                "type": "String"
                            },
                            "name": "content-MD5"
                        },
                        {
                            "type": {
                                "type": "String"
                            },
                            "name": "content-type"
                        },
                        {
                            "type": {
                                "type": "String"
                            },
                            "name": "date"
                        },
                        {
                            "type": {
                                "type": "String"
                            },
                            "name": "queryString"
                        },
                        {
                            "type": {
                                "type": "String"
                            },
                            "name": "forwardURI"
                        }
                    ],
                    "path": "/api/signature.json",
                    "name": "signature"
                },
                {
                    "isStatic": false,
                    "isAbstract": false,
                    "type": {
                        "type": "Void"
                    },
                    "queryParameters": [
                        
                    ],
                    "verb": "POST",
                    "methodParameters": [
                        {
                            "type": {
                                "type": "Server"
                            },
                            "name": "server"
                        }
                    ],
                    "pathParameters": [
                        
                    ],
                    "isPublic": true,
                    "code": {
                        "code": {
                            "JAVA": "\n\t\tString path = \"/api/user.json?\";\n\n\t\tJSONObject json = server.doPOST(path,this.toJSON());\n\n\t\tthis.build((JSONObject)json.get(\"user\"));\n\n    "
                        }
                    },
                    "allParameters": [
                        {
                            "type": {
                                "type": "Server"
                            },
                            "name": "server"
                        }
                    ],
                    "path": "/api/user.json",
                    "name": "add"
                },
                {
                    "isStatic": true,
                    "isAbstract": false,
                    "type": {
                        "type": "List"
                    },
                    "queryParameters": [
                        {
                            "type": {
                                "type": "String"
                            },
                            "name": "publicKey"
                        }
                    ],
                    "verb": "GET",
                    "methodParameters": [
                        {
                            "type": {
                                "type": "Server"
                            },
                            "name": "server"
                        }
                    ],
                    "pathParameters": [
                        
                    ],
                    "isPublic": true,
                    "code": {
                        "code": {
                            "JAVA": "\n\t\tString path = \"/api/user.json?\";\n\t\tpath = path + \"&publicKey=\" + publicKey;\n\n\t\tJSONArray json = server.doGETList(path);\n\t\tList<User> domains = new ArrayList<User>();\n\t\tfor(int i=0;i<json.size();i++) {\n\t\t\tUser domain = new User();\n\t\t\tdomain.build((JSONObject)json.get(i));\n\t\t\t domains.add(domain);\n\t\t }\n\t\treturn domains;\n\n    "
                        }
                    },
                    "allParameters": [
                        {
                            "type": {
                                "type": "Server"
                            },
                            "name": "server"
                        },
                        {
                            "type": {
                                "type": "String"
                            },
                            "name": "publicKey"
                        }
                    ],
                    "path": "/api/user.json",
                    "name": "list"
                },
                {
                    "isStatic": true,
                    "isAbstract": false,
                    "type": {
                        "type": "List"
                    },
                    "queryParameters": [
                        {
                            "type": {
                                "type": "String"
                            },
                            "name": "publicKey"
                        },
                        {
                            "type": {
                                "type": "Integer"
                            },
                            "name": "max"
                        },
                        {
                            "type": {
                                "type": "Integer"
                            },
                            "name": "offset"
                        }
                    ],
                    "verb": "GET",
                    "methodParameters": [
                        {
                            "type": {
                                "type": "Server"
                            },
                            "name": "server"
                        }
                    ],
                    "pathParameters": [
                        
                    ],
                    "isPublic": true,
                    "code": {
                        "code": {
                            "JAVA": "\n\t\tString path = \"/api/user.json?\";\n\t\tpath = path + \"&publicKey=\" + publicKey;\n\t\tpath = path + \"&max=\" + max;\n\t\tpath = path + \"&offset=\" + offset;\n\n\t\tJSONArray json = server.doGETList(path);\n\t\tList<User> domains = new ArrayList<User>();\n\t\tfor(int i=0;i<json.size();i++) {\n\t\t\tUser domain = new User();\n\t\t\tdomain.build((JSONObject)json.get(i));\n\t\t\t domains.add(domain);\n\t\t }\n\t\treturn domains;\n\n    "
                        }
                    },
                    "allParameters": [
                        {
                            "type": {
                                "type": "Server"
                            },
                            "name": "server"
                        },
                        {
                            "type": {
                                "type": "String"
                            },
                            "name": "publicKey"
                        },
                        {
                            "type": {
                                "type": "Integer"
                            },
                            "name": "max"
                        },
                        {
                            "type": {
                                "type": "Integer"
                            },
                            "name": "offset"
                        }
                    ],
                    "path": "/api/user.json",
                    "name": "list"
                },
                {
                    "isStatic": true,
                    "isAbstract": false,
                    "type": {
                        "type": "PublicKey:x,PrivateKey:x"
                    },
                    "queryParameters": [
                        
                    ],
                    "verb": "GET",
                    "methodParameters": [
                        {
                            "type": {
                                "type": "Server"
                            },
                            "name": "server"
                        }
                    ],
                    "pathParameters": [
                        {
                            "type": {
                                "type": "Long"
                            },
                            "name": "id"
                        },
                        {
                            "type": {
                                "type": "String"
                            },
                            "name": "publicKey"
                        }
                    ],
                    "isPublic": true,
                    "code": {
                        "code": {
                            "JAVA": "\n\t\tthrow new Exception(\"Not yet implemented\");\n    "
                        }
                    },
                    "allParameters": [
                        {
                            "type": {
                                "type": "Server"
                            },
                            "name": "server"
                        },
                        {
                            "type": {
                                "type": "Long"
                            },
                            "name": "id"
                        },
                        {
                            "type": {
                                "type": "String"
                            },
                            "name": "publicKey"
                        }
                    ],
                    "path": "/api/userkey/{publicKey}/keys.json",
                    "name": "keys"
                },
                {
                    "isStatic": false,
                    "isAbstract": false,
                    "type": {
                        "type": "Void"
                    },
                    "queryParameters": [
                        
                    ],
                    "verb": "DELETE",
                    "methodParameters": [
                        {
                            "type": {
                                "type": "Server"
                            },
                            "name": "server"
                        }
                    ],
                    "pathParameters": [
                        
                    ],
                    "isPublic": true,
                    "code": {
                        "code": {
                            "JAVA": "\n\t\tString path = \"/api/user/{id}.json?\";\n\t\tpath = path.replace(\"{id}\",getId()+\"\");\n\n\t\tserver.doDELETE(path);\n\t\tbuild(new JSONObject());\n\n    "
                        }
                    },
                    "allParameters": [
                        {
                            "type": {
                                "type": "Server"
                            },
                            "name": "server"
                        }
                    ],
                    "path": "/api/user/{id}.json",
                    "name": "delete"
                },
                {
                    "isStatic": false,
                    "isAbstract": false,
                    "type": {
                        "type": "Void"
                    },
                    "queryParameters": [
                        
                    ],
                    "verb": "PUT",
                    "methodParameters": [
                        {
                            "type": {
                                "type": "Server"
                            },
                            "name": "server"
                        }
                    ],
                    "pathParameters": [
                        
                    ],
                    "isPublic": true,
                    "code": {
                        "code": {
                            "JAVA": "\n\t\tString path = \"/api/user/{id}.json?\";\n\t\tpath = path.replace(\"{id}\",getId()+\"\");\n\n\t\tJSONObject json = server.doPUT(path,this.toJSON());\n\n\t\tthis.build((JSONObject)json.get(\"user\"));\n\n    "
                        }
                    },
                    "allParameters": [
                        {
                            "type": {
                                "type": "Server"
                            },
                            "name": "server"
                        }
                    ],
                    "path": "/api/user/{id}.json",
                    "name": "edit"
                }
            ],
            "name": "AbstractUser"
        },
        {
            "fullPackage": "be.cytomine.client.abst",
            "isAbstract": true,
            "comment": {
                "version": "0.1",
                "description": "An annotation created by a user",
                "author": "ClientBuilder (Lo\u00EFc Rollus)"
            },
            "fields": [
                {
                    "useInConstructor": false,
                    "type": {
                        "type": "String"
                    },
                    "useInSetter": false,
                    "comment": {
                        "description": "The full class name of the domain"
                    },
                    "useInGetter": true,
                    "name": "clazz"
                },
                {
                    "useInConstructor": false,
                    "type": {
                        "type": "Long"
                    },
                    "useInSetter": false,
                    "comment": {
                        "description": "The domain id"
                    },
                    "useInGetter": true,
                    "name": "id"
                },
                {
                    "useInConstructor": false,
                    "type": {
                        "type": "Date"
                    },
                    "useInSetter": false,
                    "comment": {
                        "description": "The date of the domain creation"
                    },
                    "useInGetter": true,
                    "name": "created"
                },
                {
                    "useInConstructor": false,
                    "type": {
                        "type": "Date"
                    },
                    "useInSetter": false,
                    "comment": {
                        "description": "The date of the domain modification"
                    },
                    "useInGetter": true,
                    "name": "updated"
                },
                {
                    "useInConstructor": false,
                    "type": {
                        "type": "Date"
                    },
                    "useInSetter": false,
                    "comment": {
                        "description": "When domain was removed from Cytomine"
                    },
                    "useInGetter": true,
                    "name": "deleted"
                },
                {
                    "useInConstructor": true,
                    "type": {
                        "type": "String"
                    },
                    "useInSetter": true,
                    "comment": {
                        "description": "The WKT of the annotation form"
                    },
                    "useInGetter": true,
                    "name": "location"
                },
                {
                    "useInConstructor": true,
                    "type": {
                        "type": "Long"
                    },
                    "useInSetter": true,
                    "comment": {
                        "description": "The image id of the annotation"
                    },
                    "useInGetter": true,
                    "name": "image"
                },
                {
                    "useInConstructor": false,
                    "type": {
                        "type": "Double"
                    },
                    "useInSetter": true,
                    "comment": {
                        "description": "The geometry compression rate used to simplify the annotation (during creation)"
                    },
                    "useInGetter": true,
                    "name": "geometryCompression"
                },
                {
                    "useInConstructor": true,
                    "type": {
                        "type": "Long"
                    },
                    "useInSetter": true,
                    "comment": {
                        "description": "The project id of the annotation"
                    },
                    "useInGetter": true,
                    "name": "project"
                },
                {
                    "useInConstructor": false,
                    "type": {
                        "type": "Object"
                    },
                    "useInSetter": true,
                    "comment": {
                        "description": "Undefined"
                    },
                    "useInGetter": true,
                    "name": "container"
                },
                {
                    "useInConstructor": true,
                    "type": {
                        "type": "Long"
                    },
                    "useInSetter": true,
                    "comment": {
                        "description": "User id that created this annotation"
                    },
                    "useInGetter": true,
                    "name": "user"
                },
                {
                    "useInConstructor": false,
                    "type": {
                        "type": "Long"
                    },
                    "useInSetter": false,
                    "comment": {
                        "description": "The number of comments added by a user on this annotation"
                    },
                    "useInGetter": true,
                    "name": "nbComments"
                },
                {
                    "useInConstructor": false,
                    "type": {
                        "type": "Double"
                    },
                    "useInSetter": false,
                    "comment": {
                        "description": "The annotation form area"
                    },
                    "useInGetter": true,
                    "name": "area"
                },
                {
                    "useInConstructor": false,
                    "type": {
                        "type": "Integer"
                    },
                    "useInSetter": false,
                    "comment": {
                        "description": "The annotation unit used for perimeter (pixels=0,mm=2,)"
                    },
                    "useInGetter": true,
                    "name": "perimeterUnit"
                },
                {
                    "useInConstructor": false,
                    "type": {
                        "type": "Integer"
                    },
                    "useInSetter": false,
                    "comment": {
                        "description": "The annotation unit used for area (pixels\u00B2=1,micron\u00B2=3)"
                    },
                    "useInGetter": true,
                    "name": "areaUnit"
                },
                {
                    "useInConstructor": false,
                    "type": {
                        "type": "Double"
                    },
                    "useInSetter": false,
                    "comment": {
                        "description": "The annotation form perimeter"
                    },
                    "useInGetter": true,
                    "name": "perimeter"
                },
                {
                    "useInConstructor": false,
                    "type": {
                        "type": "Map"
                    },
                    "useInSetter": false,
                    "comment": {
                        "description": "X,Y coord of the annotation centroid"
                    },
                    "useInGetter": true,
                    "name": "centroid"
                },
                {
                    "useInConstructor": false,
                    "type": {
                        "type": "List"
                    },
                    "useInSetter": true,
                    "comment": {
                        "description": "List of term id mapped with this annotation"
                    },
                    "useInGetter": true,
                    "name": "term"
                },
                {
                    "useInConstructor": false,
                    "type": {
                        "type": "Double"
                    },
                    "useInSetter": false,
                    "comment": {
                        "description": "The similarity rate for this annotation compare to another annotation (from retrieval)"
                    },
                    "useInGetter": true,
                    "name": "similarity"
                },
                {
                    "useInConstructor": false,
                    "type": {
                        "type": "Double"
                    },
                    "useInSetter": false,
                    "comment": {
                        "description": "The reliability value estimated by the software for the mapping between annotation and term"
                    },
                    "useInGetter": true,
                    "name": "rate"
                },
                {
                    "useInConstructor": false,
                    "type": {
                        "type": "Long"
                    },
                    "useInSetter": false,
                    "comment": {
                        "description": "The id of the term map with this annotation by a the software"
                    },
                    "useInGetter": true,
                    "name": "idTerm"
                },
                {
                    "useInConstructor": false,
                    "type": {
                        "type": "Long"
                    },
                    "useInSetter": false,
                    "comment": {
                        "description": "The id of the real term (corresponding to the term add by a real user)"
                    },
                    "useInGetter": true,
                    "name": "idExpectedTerm"
                },
                {
                    "useInConstructor": false,
                    "type": {
                        "type": "String"
                    },
                    "useInSetter": false,
                    "comment": {
                        "description": "URL to get the annotation crop"
                    },
                    "useInGetter": true,
                    "name": "cropURL"
                },
                {
                    "useInConstructor": false,
                    "type": {
                        "type": "String"
                    },
                    "useInSetter": false,
                    "comment": {
                        "description": "URL to get a small annotation crop (<256px)"
                    },
                    "useInGetter": true,
                    "name": "smallCropURL"
                },
                {
                    "useInConstructor": false,
                    "type": {
                        "type": "String"
                    },
                    "useInSetter": false,
                    "comment": {
                        "description": "URL to go to the annotation on the image"
                    },
                    "useInGetter": true,
                    "name": "url"
                },
                {
                    "useInConstructor": false,
                    "type": {
                        "type": "String"
                    },
                    "useInSetter": false,
                    "comment": {
                        "description": "URL to go to the image"
                    },
                    "useInGetter": true,
                    "name": "imageURL"
                },
                {
                    "useInConstructor": false,
                    "type": {
                        "type": "Boolean"
                    },
                    "useInSetter": false,
                    "comment": {
                        "description": "True if annotation has at least one review"
                    },
                    "useInGetter": true,
                    "name": "reviewed"
                },
                {
                    "useInConstructor": false,
                    "type": {
                        "type": "Integer"
                    },
                    "useInSetter": false,
                    "comment": {
                        "description": "The number of reviewed annotations for this annotation"
                    },
                    "useInGetter": false,
                    "name": "countReviewedAnnotations"
                }
            ],
            "domainName": "UserAnnotation",
            "methods": [
                {
                    "isStatic": false,
                    "isAbstract": false,
                    "type": {
                        "type": "Void"
                    },
                    "queryParameters": [
                        
                    ],
                    "verb": null,
                    "methodParameters": [
                        {
                            "type": {
                                "type": "String"
                            },
                            "name": "location"
                        },
                        {
                            "type": {
                                "type": "Long"
                            },
                            "name": "image"
                        },
                        {
                            "type": {
                                "type": "Long"
                            },
                            "name": "project"
                        },
                        {
                            "type": {
                                "type": "Long"
                            },
                            "name": "user"
                        }
                    ],
                    "pathParameters": [
                        
                    ],
                    "isPublic": true,
                    "code": {
                        "code": {
                            "JAVA": "\n\t\tthis.location=location;\n\t\tthis.image=image;\n\t\tthis.project=project;\n\t\tthis.user=user;\n\n    "
                        }
                    },
                    "allParameters": [
                        {
                            "type": {
                                "type": "String"
                            },
                            "name": "location"
                        },
                        {
                            "type": {
                                "type": "Long"
                            },
                            "name": "image"
                        },
                        {
                            "type": {
                                "type": "Long"
                            },
                            "name": "project"
                        },
                        {
                            "type": {
                                "type": "Long"
                            },
                            "name": "user"
                        }
                    ],
                    "path": null,
                    "name": "build"
                },
                {
                    "isStatic": false,
                    "isAbstract": false,
                    "type": {
                        "type": "Void"
                    },
                    "queryParameters": [
                        
                    ],
                    "verb": null,
                    "methodParameters": [
                        {
                            "type": {
                                "type": "JSONObject"
                            },
                            "name": "json"
                        }
                    ],
                    "pathParameters": [
                        
                    ],
                    "isPublic": true,
                    "code": {
                        "code": {
                            "JAVA": "\n\t\tthis.clazz =JSONUtils.extractJSONString(json.get(\"class\"));\n\t\tthis.id =JSONUtils.extractJSONLong(json.get(\"id\"));\n\t\tthis.created =JSONUtils.extractJSONDate(json.get(\"created\"));\n\t\tthis.updated =JSONUtils.extractJSONDate(json.get(\"updated\"));\n\t\tthis.deleted =JSONUtils.extractJSONDate(json.get(\"deleted\"));\n\t\tthis.location =JSONUtils.extractJSONString(json.get(\"location\"));\n\t\tthis.image =JSONUtils.extractJSONLong(json.get(\"image\"));\n\t\tthis.geometryCompression =JSONUtils.extractJSONDouble(json.get(\"geometryCompression\"));\n\t\tthis.project =JSONUtils.extractJSONLong(json.get(\"project\"));\n\t\tthis.container =JSONUtils.extractJSONObject(json.get(\"container\"));\n\t\tthis.user =JSONUtils.extractJSONLong(json.get(\"user\"));\n\t\tthis.nbComments =JSONUtils.extractJSONLong(json.get(\"nbComments\"));\n\t\tthis.area =JSONUtils.extractJSONDouble(json.get(\"area\"));\n\t\tthis.perimeterUnit =JSONUtils.extractJSONInteger(json.get(\"perimeterUnit\"));\n\t\tthis.areaUnit =JSONUtils.extractJSONInteger(json.get(\"areaUnit\"));\n\t\tthis.perimeter =JSONUtils.extractJSONDouble(json.get(\"perimeter\"));\n\t\tthis.centroid =JSONUtils.extractJSONMap(json.get(\"centroid\"));\n\t\tthis.term =JSONUtils.extractJSONList(json.get(\"term\"));\n\t\tthis.similarity =JSONUtils.extractJSONDouble(json.get(\"similarity\"));\n\t\tthis.rate =JSONUtils.extractJSONDouble(json.get(\"rate\"));\n\t\tthis.idTerm =JSONUtils.extractJSONLong(json.get(\"idTerm\"));\n\t\tthis.idExpectedTerm =JSONUtils.extractJSONLong(json.get(\"idExpectedTerm\"));\n\t\tthis.cropURL =JSONUtils.extractJSONString(json.get(\"cropURL\"));\n\t\tthis.smallCropURL =JSONUtils.extractJSONString(json.get(\"smallCropURL\"));\n\t\tthis.url =JSONUtils.extractJSONString(json.get(\"url\"));\n\t\tthis.imageURL =JSONUtils.extractJSONString(json.get(\"imageURL\"));\n\t\tthis.reviewed =JSONUtils.extractJSONBoolean(json.get(\"reviewed\"));\n\t\tthis.countReviewedAnnotations =JSONUtils.extractJSONInteger(json.get(\"countReviewedAnnotations\"));\n\n    "
                        }
                    },
                    "allParameters": [
                        {
                            "type": {
                                "type": "JSONObject"
                            },
                            "name": "json"
                        }
                    ],
                    "path": null,
                    "name": "build"
                },
                {
                    "isStatic": false,
                    "isAbstract": false,
                    "type": {
                        "type": "JSONObject"
                    },
                    "queryParameters": [
                        
                    ],
                    "verb": null,
                    "methodParameters": [
                        
                    ],
                    "pathParameters": [
                        
                    ],
                    "isPublic": true,
                    "code": {
                        "code": {
                            "JAVA": "\n\t\tJSONObject json=new JSONObject();\n\t\tjson.put(\"class\",JSONUtils.formatJSON(this.clazz));\n\t\tjson.put(\"id\",JSONUtils.formatJSON(this.id));\n\t\tjson.put(\"created\",JSONUtils.formatJSON(this.created));\n\t\tjson.put(\"updated\",JSONUtils.formatJSON(this.updated));\n\t\tjson.put(\"deleted\",JSONUtils.formatJSON(this.deleted));\n\t\tjson.put(\"location\",JSONUtils.formatJSON(this.location));\n\t\tjson.put(\"image\",JSONUtils.formatJSON(this.image));\n\t\tjson.put(\"geometryCompression\",JSONUtils.formatJSON(this.geometryCompression));\n\t\tjson.put(\"project\",JSONUtils.formatJSON(this.project));\n\t\tjson.put(\"container\",JSONUtils.formatJSON(this.container));\n\t\tjson.put(\"user\",JSONUtils.formatJSON(this.user));\n\t\tjson.put(\"nbComments\",JSONUtils.formatJSON(this.nbComments));\n\t\tjson.put(\"area\",JSONUtils.formatJSON(this.area));\n\t\tjson.put(\"perimeterUnit\",JSONUtils.formatJSON(this.perimeterUnit));\n\t\tjson.put(\"areaUnit\",JSONUtils.formatJSON(this.areaUnit));\n\t\tjson.put(\"perimeter\",JSONUtils.formatJSON(this.perimeter));\n\t\tjson.put(\"centroid\",JSONUtils.formatJSON(this.centroid));\n\t\tjson.put(\"term\",JSONUtils.formatJSON(this.term));\n\t\tjson.put(\"similarity\",JSONUtils.formatJSON(this.similarity));\n\t\tjson.put(\"rate\",JSONUtils.formatJSON(this.rate));\n\t\tjson.put(\"idTerm\",JSONUtils.formatJSON(this.idTerm));\n\t\tjson.put(\"idExpectedTerm\",JSONUtils.formatJSON(this.idExpectedTerm));\n\t\tjson.put(\"cropURL\",JSONUtils.formatJSON(this.cropURL));\n\t\tjson.put(\"smallCropURL\",JSONUtils.formatJSON(this.smallCropURL));\n\t\tjson.put(\"url\",JSONUtils.formatJSON(this.url));\n\t\tjson.put(\"imageURL\",JSONUtils.formatJSON(this.imageURL));\n\t\tjson.put(\"reviewed\",JSONUtils.formatJSON(this.reviewed));\n\n\t\treturn json;\n    "
                        }
                    },
                    "allParameters": [
                        
                    ],
                    "path": null,
                    "name": "toJSON"
                },
                {
                    "isStatic": true,
                    "isAbstract": false,
                    "type": {
                        "type": "UserAnnotation"
                    },
                    "queryParameters": [
                        
                    ],
                    "verb": "GET",
                    "methodParameters": [
                        {
                            "type": {
                                "type": "Server"
                            },
                            "name": "server"
                        }
                    ],
                    "pathParameters": [
                        {
                            "type": {
                                "type": "Long"
                            },
                            "name": "id"
                        }
                    ],
                    "isPublic": true,
                    "code": {
                        "code": {
                            "JAVA": "\n\t\tString path = \"/api/userannotation/{id}.json?\";\n\t\tpath = path.replace(\"{id}\",id+\"\");\n\n\t\tJSONObject json = server.doGET(path);\n\t\tUserAnnotation domain = new UserAnnotation();\n\t\tdomain.build(json);\n\t\treturn domain;\n\n    "
                        }
                    },
                    "allParameters": [
                        {
                            "type": {
                                "type": "Server"
                            },
                            "name": "server"
                        },
                        {
                            "type": {
                                "type": "Long"
                            },
                            "name": "id"
                        }
                    ],
                    "path": "/api/userannotation/{id}.json",
                    "name": "get"
                },
                {
                    "isStatic": true,
                    "isAbstract": false,
                    "type": {
                        "type": "File"
                    },
                    "queryParameters": [
                        {
                            "type": {
                                "type": "List"
                            },
                            "name": "terms"
                        },
                        {
                            "type": {
                                "type": "List"
                            },
                            "name": "users"
                        },
                        {
                            "type": {
                                "type": "List"
                            },
                            "name": "images"
                        },
                        {
                            "type": {
                                "type": "String"
                            },
                            "name": "format"
                        }
                    ],
                    "verb": "GET",
                    "methodParameters": [
                        {
                            "type": {
                                "type": "Server"
                            },
                            "name": "server"
                        }
                    ],
                    "pathParameters": [
                        {
                            "type": {
                                "type": "Long"
                            },
                            "name": "id"
                        }
                    ],
                    "isPublic": true,
                    "code": {
                        "code": {
                            "JAVA": "\n\t\tthrow new Exception(\"Not yet implemented\");\n    "
                        }
                    },
                    "allParameters": [
                        {
                            "type": {
                                "type": "Server"
                            },
                            "name": "server"
                        },
                        {
                            "type": {
                                "type": "Long"
                            },
                            "name": "id"
                        },
                        {
                            "type": {
                                "type": "List"
                            },
                            "name": "terms"
                        },
                        {
                            "type": {
                                "type": "List"
                            },
                            "name": "users"
                        },
                        {
                            "type": {
                                "type": "List"
                            },
                            "name": "images"
                        },
                        {
                            "type": {
                                "type": "String"
                            },
                            "name": "format"
                        }
                    ],
                    "path": "/api/project/{id}/userannotation/download",
                    "name": "downloadDocumentByProject"
                },
                {
                    "isStatic": true,
                    "isAbstract": false,
                    "type": {
                        "type": "File"
                    },
                    "queryParameters": [
                        
                    ],
                    "verb": "GET",
                    "methodParameters": [
                        {
                            "type": {
                                "type": "Server"
                            },
                            "name": "server"
                        }
                    ],
                    "pathParameters": [
                        {
                            "type": {
                                "type": "Long"
                            },
                            "name": "id"
                        },
                        {
                            "type": {
                                "type": "Integer"
                            },
                            "name": "max_size"
                        },
                        {
                            "type": {
                                "type": "Integer"
                            },
                            "name": "zoom"
                        },
                        {
                            "type": {
                                "type": "Boolean"
                            },
                            "name": "draw"
                        }
                    ],
                    "isPublic": true,
                    "code": {
                        "code": {
                            "JAVA": "\n\t\tthrow new Exception(\"Not yet implemented\");\n    "
                        }
                    },
                    "allParameters": [
                        {
                            "type": {
                                "type": "Server"
                            },
                            "name": "server"
                        },
                        {
                            "type": {
                                "type": "Long"
                            },
                            "name": "id"
                        },
                        {
                            "type": {
                                "type": "Integer"
                            },
                            "name": "max_size"
                        },
                        {
                            "type": {
                                "type": "Integer"
                            },
                            "name": "zoom"
                        },
                        {
                            "type": {
                                "type": "Boolean"
                            },
                            "name": "draw"
                        }
                    ],
                    "path": "/api/userannotation/{id}/crop.json",
                    "name": "crop"
                },
                {
                    "isStatic": true,
                    "isAbstract": false,
                    "type": {
                        "type": "Total:x"
                    },
                    "queryParameters": [
                        
                    ],
                    "verb": "GET",
                    "methodParameters": [
                        {
                            "type": {
                                "type": "Server"
                            },
                            "name": "server"
                        }
                    ],
                    "pathParameters": [
                        
                    ],
                    "isPublic": true,
                    "code": {
                        "code": {
                            "JAVA": "\n\t\tthrow new Exception(\"Not yet implemented\");\n    "
                        }
                    },
                    "allParameters": [
                        {
                            "type": {
                                "type": "Server"
                            },
                            "name": "server"
                        }
                    ],
                    "path": "/api/user/{id}/userannotation/count.json",
                    "name": "countByUser"
                },
                {
                    "isStatic": true,
                    "isAbstract": false,
                    "type": {
                        "type": "Empty"
                    },
                    "queryParameters": [
                        
                    ],
                    "verb": "POST",
                    "methodParameters": [
                        {
                            "type": {
                                "type": "Server"
                            },
                            "name": "server"
                        }
                    ],
                    "pathParameters": [
                        {
                            "type": {
                                "type": "Long"
                            },
                            "name": "userannotation"
                        },
                        {
                            "type": {
                                "type": "String"
                            },
                            "name": "POST JSON: subject"
                        },
                        {
                            "type": {
                                "type": "String"
                            },
                            "name": "POST JSON: message"
                        },
                        {
                            "type": {
                                "type": "List"
                            },
                            "name": "POST JSON: users"
                        },
                        {
                            "type": {
                                "type": "String"
                            },
                            "name": "POST JSON: comment"
                        }
                    ],
                    "isPublic": true,
                    "code": {
                        "code": {
                            "JAVA": "\n\t\tthrow new Exception(\"Not yet implemented\");\n    "
                        }
                    },
                    "allParameters": [
                        {
                            "type": {
                                "type": "Server"
                            },
                            "name": "server"
                        },
                        {
                            "type": {
                                "type": "Long"
                            },
                            "name": "userannotation"
                        },
                        {
                            "type": {
                                "type": "String"
                            },
                            "name": "POST JSON: subject"
                        },
                        {
                            "type": {
                                "type": "String"
                            },
                            "name": "POST JSON: message"
                        },
                        {
                            "type": {
                                "type": "List"
                            },
                            "name": "POST JSON: users"
                        },
                        {
                            "type": {
                                "type": "String"
                            },
                            "name": "POST JSON: comment"
                        }
                    ],
                    "path": "/api/annotation/{userannotation}/comment.json",
                    "name": "addComment"
                },
                {
                    "isStatic": true,
                    "isAbstract": false,
                    "type": {
                        "type": "UserAnnotation"
                    },
                    "queryParameters": [
                        
                    ],
                    "verb": "GET",
                    "methodParameters": [
                        {
                            "type": {
                                "type": "Server"
                            },
                            "name": "server"
                        }
                    ],
                    "pathParameters": [
                        {
                            "type": {
                                "type": "Long"
                            },
                            "name": "userannotation"
                        },
                        {
                            "type": {
                                "type": "Long"
                            },
                            "name": "id"
                        }
                    ],
                    "isPublic": true,
                    "code": {
                        "code": {
                            "JAVA": "\n\t\tthrow new Exception(\"Not yet implemented\");\n    "
                        }
                    },
                    "allParameters": [
                        {
                            "type": {
                                "type": "Server"
                            },
                            "name": "server"
                        },
                        {
                            "type": {
                                "type": "Long"
                            },
                            "name": "userannotation"
                        },
                        {
                            "type": {
                                "type": "Long"
                            },
                            "name": "id"
                        }
                    ],
                    "path": "/api/annotation/{userannotation}/comment/{id}.json",
                    "name": "showComment"
                },
                {
                    "isStatic": true,
                    "isAbstract": false,
                    "type": {
                        "type": "UserAnnotation"
                    },
                    "queryParameters": [
                        {
                            "type": {
                                "type": "Integer"
                            },
                            "name": "max"
                        },
                        {
                            "type": {
                                "type": "Integer"
                            },
                            "name": "offset"
                        }
                    ],
                    "verb": "GET",
                    "methodParameters": [
                        {
                            "type": {
                                "type": "Server"
                            },
                            "name": "server"
                        }
                    ],
                    "pathParameters": [
                        {
                            "type": {
                                "type": "Long"
                            },
                            "name": "userannotation"
                        }
                    ],
                    "isPublic": true,
                    "code": {
                        "code": {
                            "JAVA": "\n\t\tthrow new Exception(\"Not yet implemented\");\n    "
                        }
                    },
                    "allParameters": [
                        {
                            "type": {
                                "type": "Server"
                            },
                            "name": "server"
                        },
                        {
                            "type": {
                                "type": "Long"
                            },
                            "name": "userannotation"
                        },
                        {
                            "type": {
                                "type": "Integer"
                            },
                            "name": "max"
                        },
                        {
                            "type": {
                                "type": "Integer"
                            },
                            "name": "offset"
                        }
                    ],
                    "path": "/api/annotation/{userannotation}/comment.json",
                    "name": "listComments"
                },
                {
                    "isStatic": false,
                    "isAbstract": false,
                    "type": {
                        "type": "Void"
                    },
                    "queryParameters": [
                        
                    ],
                    "verb": "POST",
                    "methodParameters": [
                        {
                            "type": {
                                "type": "Server"
                            },
                            "name": "server"
                        }
                    ],
                    "pathParameters": [
                        
                    ],
                    "isPublic": true,
                    "code": {
                        "code": {
                            "JAVA": "\n\t\tString path = \"/api/userannotation.json?\";\n\n\t\tJSONObject json = server.doPOST(path,this.toJSON());\n\n\t\tthis.build((JSONObject)json.get(\"userannotation\"));\n\n    "
                        }
                    },
                    "allParameters": [
                        {
                            "type": {
                                "type": "Server"
                            },
                            "name": "server"
                        }
                    ],
                    "path": "/api/userannotation.json",
                    "name": "add"
                },
                {
                    "isStatic": true,
                    "isAbstract": false,
                    "type": {
                        "type": "UserAnnotation"
                    },
                    "queryParameters": [
                        {
                            "type": {
                                "type": "Integer"
                            },
                            "name": "max"
                        },
                        {
                            "type": {
                                "type": "Integer"
                            },
                            "name": "offset"
                        }
                    ],
                    "verb": "GET",
                    "methodParameters": [
                        {
                            "type": {
                                "type": "Server"
                            },
                            "name": "server"
                        }
                    ],
                    "pathParameters": [
                        
                    ],
                    "isPublic": true,
                    "code": {
                        "code": {
                            "JAVA": "\n\t\tthrow new Exception(\"Not yet implemented\");\n    "
                        }
                    },
                    "allParameters": [
                        {
                            "type": {
                                "type": "Server"
                            },
                            "name": "server"
                        },
                        {
                            "type": {
                                "type": "Integer"
                            },
                            "name": "max"
                        },
                        {
                            "type": {
                                "type": "Integer"
                            },
                            "name": "offset"
                        }
                    ],
                    "path": "/api/userannotation.json",
                    "name": "list"
                },
                {
                    "isStatic": false,
                    "isAbstract": false,
                    "type": {
                        "type": "Void"
                    },
                    "queryParameters": [
                        
                    ],
                    "verb": "DELETE",
                    "methodParameters": [
                        {
                            "type": {
                                "type": "Server"
                            },
                            "name": "server"
                        }
                    ],
                    "pathParameters": [
                        
                    ],
                    "isPublic": true,
                    "code": {
                        "code": {
                            "JAVA": "\n\t\tString path = \"/api/userannotation/{id}.json?\";\n\t\tpath = path.replace(\"{id}\",getId()+\"\");\n\n\t\tserver.doDELETE(path);\n\t\tbuild(new JSONObject());\n\n    "
                        }
                    },
                    "allParameters": [
                        {
                            "type": {
                                "type": "Server"
                            },
                            "name": "server"
                        }
                    ],
                    "path": "/api/userannotation/{id}.json",
                    "name": "delete"
                },
                {
                    "isStatic": false,
                    "isAbstract": false,
                    "type": {
                        "type": "Void"
                    },
                    "queryParameters": [
                        
                    ],
                    "verb": "PUT",
                    "methodParameters": [
                        {
                            "type": {
                                "type": "Server"
                            },
                            "name": "server"
                        }
                    ],
                    "pathParameters": [
                        
                    ],
                    "isPublic": true,
                    "code": {
                        "code": {
                            "JAVA": "\n\t\tString path = \"/api/userannotation/{id}.json?\";\n\t\tpath = path.replace(\"{id}\",getId()+\"\");\n\n\t\tJSONObject json = server.doPUT(path,this.toJSON());\n\n\t\tthis.build((JSONObject)json.get(\"userannotation\"));\n\n    "
                        }
                    },
                    "allParameters": [
                        {
                            "type": {
                                "type": "Server"
                            },
                            "name": "server"
                        }
                    ],
                    "path": "/api/userannotation/{id}.json",
                    "name": "edit"
                }
            ],
            "name": "AbstractUserAnnotation"
        },
        {
            "fullPackage": "be.cytomine.client.abst",
            "isAbstract": true,
            "comment": {
                "version": "0.1",
                "description": "Link between a group and a user in database",
                "author": "ClientBuilder (Lo\u00EFc Rollus)"
            },
            "fields": [
                {
                    "useInConstructor": false,
                    "type": {
                        "type": "String"
                    },
                    "useInSetter": false,
                    "comment": {
                        "description": "The full class name of the domain"
                    },
                    "useInGetter": true,
                    "name": "clazz"
                },
                {
                    "useInConstructor": false,
                    "type": {
                        "type": "Long"
                    },
                    "useInSetter": false,
                    "comment": {
                        "description": "The domain id"
                    },
                    "useInGetter": true,
                    "name": "id"
                },
                {
                    "useInConstructor": false,
                    "type": {
                        "type": "Date"
                    },
                    "useInSetter": false,
                    "comment": {
                        "description": "The date of the domain creation"
                    },
                    "useInGetter": true,
                    "name": "created"
                },
                {
                    "useInConstructor": false,
                    "type": {
                        "type": "Date"
                    },
                    "useInSetter": false,
                    "comment": {
                        "description": "The date of the domain modification"
                    },
                    "useInGetter": true,
                    "name": "updated"
                },
                {
                    "useInConstructor": false,
                    "type": {
                        "type": "Date"
                    },
                    "useInSetter": false,
                    "comment": {
                        "description": "When domain was removed from Cytomine"
                    },
                    "useInGetter": true,
                    "name": "deleted"
                },
                {
                    "useInConstructor": true,
                    "type": {
                        "type": "Long"
                    },
                    "useInSetter": true,
                    "comment": {
                        "description": "The user id"
                    },
                    "useInGetter": true,
                    "name": "user"
                },
                {
                    "useInConstructor": true,
                    "type": {
                        "type": "Long"
                    },
                    "useInSetter": true,
                    "comment": {
                        "description": "The group id"
                    },
                    "useInGetter": true,
                    "name": "group"
                }
            ],
            "domainName": "UserGroup",
            "methods": [
                {
                    "isStatic": false,
                    "isAbstract": false,
                    "type": {
                        "type": "Void"
                    },
                    "queryParameters": [
                        
                    ],
                    "verb": null,
                    "methodParameters": [
                        {
                            "type": {
                                "type": "Long"
                            },
                            "name": "user"
                        },
                        {
                            "type": {
                                "type": "Long"
                            },
                            "name": "group"
                        }
                    ],
                    "pathParameters": [
                        
                    ],
                    "isPublic": true,
                    "code": {
                        "code": {
                            "JAVA": "\n\t\tthis.user=user;\n\t\tthis.group=group;\n\n    "
                        }
                    },
                    "allParameters": [
                        {
                            "type": {
                                "type": "Long"
                            },
                            "name": "user"
                        },
                        {
                            "type": {
                                "type": "Long"
                            },
                            "name": "group"
                        }
                    ],
                    "path": null,
                    "name": "build"
                },
                {
                    "isStatic": false,
                    "isAbstract": false,
                    "type": {
                        "type": "Void"
                    },
                    "queryParameters": [
                        
                    ],
                    "verb": null,
                    "methodParameters": [
                        {
                            "type": {
                                "type": "JSONObject"
                            },
                            "name": "json"
                        }
                    ],
                    "pathParameters": [
                        
                    ],
                    "isPublic": true,
                    "code": {
                        "code": {
                            "JAVA": "\n\t\tthis.clazz =JSONUtils.extractJSONString(json.get(\"class\"));\n\t\tthis.id =JSONUtils.extractJSONLong(json.get(\"id\"));\n\t\tthis.created =JSONUtils.extractJSONDate(json.get(\"created\"));\n\t\tthis.updated =JSONUtils.extractJSONDate(json.get(\"updated\"));\n\t\tthis.deleted =JSONUtils.extractJSONDate(json.get(\"deleted\"));\n\t\tthis.user =JSONUtils.extractJSONLong(json.get(\"user\"));\n\t\tthis.group =JSONUtils.extractJSONLong(json.get(\"group\"));\n\n    "
                        }
                    },
                    "allParameters": [
                        {
                            "type": {
                                "type": "JSONObject"
                            },
                            "name": "json"
                        }
                    ],
                    "path": null,
                    "name": "build"
                },
                {
                    "isStatic": false,
                    "isAbstract": false,
                    "type": {
                        "type": "JSONObject"
                    },
                    "queryParameters": [
                        
                    ],
                    "verb": null,
                    "methodParameters": [
                        
                    ],
                    "pathParameters": [
                        
                    ],
                    "isPublic": true,
                    "code": {
                        "code": {
                            "JAVA": "\n\t\tJSONObject json=new JSONObject();\n\t\tjson.put(\"class\",JSONUtils.formatJSON(this.clazz));\n\t\tjson.put(\"id\",JSONUtils.formatJSON(this.id));\n\t\tjson.put(\"created\",JSONUtils.formatJSON(this.created));\n\t\tjson.put(\"updated\",JSONUtils.formatJSON(this.updated));\n\t\tjson.put(\"deleted\",JSONUtils.formatJSON(this.deleted));\n\t\tjson.put(\"user\",JSONUtils.formatJSON(this.user));\n\t\tjson.put(\"group\",JSONUtils.formatJSON(this.group));\n\n\t\treturn json;\n    "
                        }
                    },
                    "allParameters": [
                        
                    ],
                    "path": null,
                    "name": "toJSON"
                },
                {
                    "isStatic": true,
                    "isAbstract": false,
                    "type": {
                        "type": "UserGroup"
                    },
                    "queryParameters": [
                        
                    ],
                    "verb": "GET",
                    "methodParameters": [
                        {
                            "type": {
                                "type": "Server"
                            },
                            "name": "server"
                        }
                    ],
                    "pathParameters": [
                        {
                            "type": {
                                "type": "Long"
                            },
                            "name": "user"
                        },
                        {
                            "type": {
                                "type": "Long"
                            },
                            "name": "group"
                        }
                    ],
                    "isPublic": true,
                    "code": {
                        "code": {
                            "JAVA": "\n\t\tString path = \"/api/user/{user}/group/{group}.json?\";\n\t\tpath = path.replace(\"{user}\",user+\"\");\n\t\tpath = path.replace(\"{group}\",group+\"\");\n\n\t\tJSONObject json = server.doGET(path);\n\t\tUserGroup domain = new UserGroup();\n\t\tdomain.build(json);\n\t\treturn domain;\n\n    "
                        }
                    },
                    "allParameters": [
                        {
                            "type": {
                                "type": "Server"
                            },
                            "name": "server"
                        },
                        {
                            "type": {
                                "type": "Long"
                            },
                            "name": "user"
                        },
                        {
                            "type": {
                                "type": "Long"
                            },
                            "name": "group"
                        }
                    ],
                    "path": "/api/user/{user}/group/{group}.json",
                    "name": "get"
                },
                {
                    "isStatic": false,
                    "isAbstract": false,
                    "type": {
                        "type": "Void"
                    },
                    "queryParameters": [
                        
                    ],
                    "verb": "POST",
                    "methodParameters": [
                        {
                            "type": {
                                "type": "Server"
                            },
                            "name": "server"
                        }
                    ],
                    "pathParameters": [
                        
                    ],
                    "isPublic": true,
                    "code": {
                        "code": {
                            "JAVA": "\n\t\tString path = \"/api/user/{user}/group.json?\";\n\n\t\tJSONObject json = server.doPOST(path,this.toJSON());\n\n\t\tthis.build((JSONObject)json.get(\"usergroup\"));\n\n    "
                        }
                    },
                    "allParameters": [
                        {
                            "type": {
                                "type": "Server"
                            },
                            "name": "server"
                        }
                    ],
                    "path": "/api/user/{user}/group.json",
                    "name": "add"
                },
                {
                    "isStatic": true,
                    "isAbstract": false,
                    "type": {
                        "type": "UserGroup"
                    },
                    "queryParameters": [
                        {
                            "type": {
                                "type": "Integer"
                            },
                            "name": "max"
                        },
                        {
                            "type": {
                                "type": "Integer"
                            },
                            "name": "offset"
                        }
                    ],
                    "verb": "GET",
                    "methodParameters": [
                        {
                            "type": {
                                "type": "Server"
                            },
                            "name": "server"
                        }
                    ],
                    "pathParameters": [
                        {
                            "type": {
                                "type": "Long"
                            },
                            "name": "user"
                        }
                    ],
                    "isPublic": true,
                    "code": {
                        "code": {
                            "JAVA": "\n\t\tthrow new Exception(\"Not yet implemented\");\n    "
                        }
                    },
                    "allParameters": [
                        {
                            "type": {
                                "type": "Server"
                            },
                            "name": "server"
                        },
                        {
                            "type": {
                                "type": "Long"
                            },
                            "name": "user"
                        },
                        {
                            "type": {
                                "type": "Integer"
                            },
                            "name": "max"
                        },
                        {
                            "type": {
                                "type": "Integer"
                            },
                            "name": "offset"
                        }
                    ],
                    "path": "/api/user/{user}/group.json",
                    "name": "list"
                },
                {
                    "isStatic": false,
                    "isAbstract": false,
                    "type": {
                        "type": "Void"
                    },
                    "queryParameters": [
                        
                    ],
                    "verb": "DELETE",
                    "methodParameters": [
                        {
                            "type": {
                                "type": "Server"
                            },
                            "name": "server"
                        }
                    ],
                    "pathParameters": [
                        
                    ],
                    "isPublic": true,
                    "code": {
                        "code": {
                            "JAVA": "\n\t\tString path = \"/api/user/{user}/group/{group}.json?\";\n\t\tpath = path.replace(\"{user}\",getUser()+\"\");\n\t\tpath = path.replace(\"{group}\",getGroup()+\"\");\n\n\t\tserver.doDELETE(path);\n\t\tbuild(new JSONObject());\n\n    "
                        }
                    },
                    "allParameters": [
                        {
                            "type": {
                                "type": "Server"
                            },
                            "name": "server"
                        }
                    ],
                    "path": "/api/user/{user}/group/{group}.json",
                    "name": "delete"
                }
            ],
            "name": "AbstractUserGroup"
        },
        {
            "fullPackage": "be.cytomine.client.abst",
            "isAbstract": true,
            "comment": {
                "version": "0.1",
                "description": "A cytomine software user",
                "author": "ClientBuilder (Lo\u00EFc Rollus)"
            },
            "fields": [
                {
                    "useInConstructor": false,
                    "type": {
                        "type": "String"
                    },
                    "useInSetter": false,
                    "comment": {
                        "description": "The full class name of the domain"
                    },
                    "useInGetter": true,
                    "name": "clazz"
                },
                {
                    "useInConstructor": false,
                    "type": {
                        "type": "Long"
                    },
                    "useInSetter": false,
                    "comment": {
                        "description": "The domain id"
                    },
                    "useInGetter": true,
                    "name": "id"
                },
                {
                    "useInConstructor": false,
                    "type": {
                        "type": "Date"
                    },
                    "useInSetter": false,
                    "comment": {
                        "description": "The date of the domain creation"
                    },
                    "useInGetter": true,
                    "name": "created"
                },
                {
                    "useInConstructor": false,
                    "type": {
                        "type": "Date"
                    },
                    "useInSetter": false,
                    "comment": {
                        "description": "The date of the domain modification"
                    },
                    "useInGetter": true,
                    "name": "updated"
                },
                {
                    "useInConstructor": false,
                    "type": {
                        "type": "Date"
                    },
                    "useInSetter": false,
                    "comment": {
                        "description": "When domain was removed from Cytomine"
                    },
                    "useInGetter": true,
                    "name": "deleted"
                },
                {
                    "useInConstructor": true,
                    "type": {
                        "type": "String"
                    },
                    "useInSetter": true,
                    "comment": {
                        "description": "The username of the user"
                    },
                    "useInGetter": true,
                    "name": "username"
                },
                {
                    "useInConstructor": false,
                    "type": {
                        "type": "Boolean"
                    },
                    "useInSetter": false,
                    "comment": {
                        "description": "If true, user is a userjob"
                    },
                    "useInGetter": true,
                    "name": "algo"
                },
                {
                    "useInConstructor": false,
                    "type": {
                        "type": "String"
                    },
                    "useInSetter": false,
                    "comment": {
                        "description": "The username of the user that launch this job"
                    },
                    "useInGetter": true,
                    "name": "humanUsername"
                },
                {
                    "useInConstructor": false,
                    "type": {
                        "type": "String"
                    },
                    "useInSetter": true,
                    "comment": {
                        "description": "The user public key"
                    },
                    "useInGetter": true,
                    "name": "publicKey"
                },
                {
                    "useInConstructor": false,
                    "type": {
                        "type": "String"
                    },
                    "useInSetter": true,
                    "comment": {
                        "description": "The user private key"
                    },
                    "useInGetter": true,
                    "name": "privateKey"
                },
                {
                    "useInConstructor": true,
                    "type": {
                        "type": "Long"
                    },
                    "useInSetter": true,
                    "comment": {
                        "description": "The related job"
                    },
                    "useInGetter": true,
                    "name": "job"
                },
                {
                    "useInConstructor": true,
                    "type": {
                        "type": "Long"
                    },
                    "useInSetter": true,
                    "comment": {
                        "description": "Human user that launch the job"
                    },
                    "useInGetter": true,
                    "name": "user"
                },
                {
                    "useInConstructor": false,
                    "type": {
                        "type": "Double"
                    },
                    "useInSetter": false,
                    "comment": {
                        "description": "The rate succes of the job"
                    },
                    "useInGetter": true,
                    "name": "rate"
                },
                {
                    "useInConstructor": false,
                    "type": {
                        "type": "Boolean"
                    },
                    "useInSetter": false,
                    "comment": {
                        "description": "If true, account is expired"
                    },
                    "useInGetter": false,
                    "name": "accountExpired"
                },
                {
                    "useInConstructor": false,
                    "type": {
                        "type": "Boolean"
                    },
                    "useInSetter": false,
                    "comment": {
                        "description": "If true, account is locked"
                    },
                    "useInGetter": false,
                    "name": "accountLocked"
                },
                {
                    "useInConstructor": false,
                    "type": {
                        "type": "Boolean"
                    },
                    "useInSetter": false,
                    "comment": {
                        "description": "If true, account is enabled"
                    },
                    "useInGetter": false,
                    "name": "enabled"
                },
                {
                    "useInConstructor": true,
                    "type": {
                        "type": "String"
                    },
                    "useInSetter": true,
                    "comment": {
                        "description": "The user password"
                    },
                    "useInGetter": false,
                    "name": "password"
                },
                {
                    "useInConstructor": false,
                    "type": {
                        "type": "Boolean"
                    },
                    "useInSetter": false,
                    "comment": {
                        "description": "If true, password is expired"
                    },
                    "useInGetter": false,
                    "name": "passwordExpired"
                }
            ],
            "domainName": "UserJob",
            "methods": [
                {
                    "isStatic": false,
                    "isAbstract": false,
                    "type": {
                        "type": "Void"
                    },
                    "queryParameters": [
                        
                    ],
                    "verb": null,
                    "methodParameters": [
                        {
                            "type": {
                                "type": "String"
                            },
                            "name": "username"
                        },
                        {
                            "type": {
                                "type": "Long"
                            },
                            "name": "job"
                        },
                        {
                            "type": {
                                "type": "Long"
                            },
                            "name": "user"
                        },
                        {
                            "type": {
                                "type": "String"
                            },
                            "name": "password"
                        }
                    ],
                    "pathParameters": [
                        
                    ],
                    "isPublic": true,
                    "code": {
                        "code": {
                            "JAVA": "\n\t\tthis.username=username;\n\t\tthis.job=job;\n\t\tthis.user=user;\n\t\tthis.password=password;\n\n    "
                        }
                    },
                    "allParameters": [
                        {
                            "type": {
                                "type": "String"
                            },
                            "name": "username"
                        },
                        {
                            "type": {
                                "type": "Long"
                            },
                            "name": "job"
                        },
                        {
                            "type": {
                                "type": "Long"
                            },
                            "name": "user"
                        },
                        {
                            "type": {
                                "type": "String"
                            },
                            "name": "password"
                        }
                    ],
                    "path": null,
                    "name": "build"
                },
                {
                    "isStatic": false,
                    "isAbstract": false,
                    "type": {
                        "type": "Void"
                    },
                    "queryParameters": [
                        
                    ],
                    "verb": null,
                    "methodParameters": [
                        {
                            "type": {
                                "type": "JSONObject"
                            },
                            "name": "json"
                        }
                    ],
                    "pathParameters": [
                        
                    ],
                    "isPublic": true,
                    "code": {
                        "code": {
                            "JAVA": "\n\t\tthis.clazz =JSONUtils.extractJSONString(json.get(\"class\"));\n\t\tthis.id =JSONUtils.extractJSONLong(json.get(\"id\"));\n\t\tthis.created =JSONUtils.extractJSONDate(json.get(\"created\"));\n\t\tthis.updated =JSONUtils.extractJSONDate(json.get(\"updated\"));\n\t\tthis.deleted =JSONUtils.extractJSONDate(json.get(\"deleted\"));\n\t\tthis.username =JSONUtils.extractJSONString(json.get(\"username\"));\n\t\tthis.algo =JSONUtils.extractJSONBoolean(json.get(\"algo\"));\n\t\tthis.humanUsername =JSONUtils.extractJSONString(json.get(\"humanUsername\"));\n\t\tthis.publicKey =JSONUtils.extractJSONString(json.get(\"publicKey\"));\n\t\tthis.privateKey =JSONUtils.extractJSONString(json.get(\"privateKey\"));\n\t\tthis.job =JSONUtils.extractJSONLong(json.get(\"job\"));\n\t\tthis.user =JSONUtils.extractJSONLong(json.get(\"user\"));\n\t\tthis.rate =JSONUtils.extractJSONDouble(json.get(\"rate\"));\n\t\tthis.accountExpired =JSONUtils.extractJSONBoolean(json.get(\"accountExpired\"));\n\t\tthis.accountLocked =JSONUtils.extractJSONBoolean(json.get(\"accountLocked\"));\n\t\tthis.enabled =JSONUtils.extractJSONBoolean(json.get(\"enabled\"));\n\t\tthis.password =JSONUtils.extractJSONString(json.get(\"password\"));\n\t\tthis.passwordExpired =JSONUtils.extractJSONBoolean(json.get(\"passwordExpired\"));\n\n    "
                        }
                    },
                    "allParameters": [
                        {
                            "type": {
                                "type": "JSONObject"
                            },
                            "name": "json"
                        }
                    ],
                    "path": null,
                    "name": "build"
                },
                {
                    "isStatic": false,
                    "isAbstract": false,
                    "type": {
                        "type": "JSONObject"
                    },
                    "queryParameters": [
                        
                    ],
                    "verb": null,
                    "methodParameters": [
                        
                    ],
                    "pathParameters": [
                        
                    ],
                    "isPublic": true,
                    "code": {
                        "code": {
                            "JAVA": "\n\t\tJSONObject json=new JSONObject();\n\t\tjson.put(\"class\",JSONUtils.formatJSON(this.clazz));\n\t\tjson.put(\"id\",JSONUtils.formatJSON(this.id));\n\t\tjson.put(\"created\",JSONUtils.formatJSON(this.created));\n\t\tjson.put(\"updated\",JSONUtils.formatJSON(this.updated));\n\t\tjson.put(\"deleted\",JSONUtils.formatJSON(this.deleted));\n\t\tjson.put(\"username\",JSONUtils.formatJSON(this.username));\n\t\tjson.put(\"algo\",JSONUtils.formatJSON(this.algo));\n\t\tjson.put(\"humanUsername\",JSONUtils.formatJSON(this.humanUsername));\n\t\tjson.put(\"publicKey\",JSONUtils.formatJSON(this.publicKey));\n\t\tjson.put(\"privateKey\",JSONUtils.formatJSON(this.privateKey));\n\t\tjson.put(\"job\",JSONUtils.formatJSON(this.job));\n\t\tjson.put(\"user\",JSONUtils.formatJSON(this.user));\n\t\tjson.put(\"rate\",JSONUtils.formatJSON(this.rate));\n\n\t\treturn json;\n    "
                        }
                    },
                    "allParameters": [
                        
                    ],
                    "path": null,
                    "name": "toJSON"
                },
                {
                    "isStatic": true,
                    "isAbstract": false,
                    "type": {
                        "type": "UserJob"
                    },
                    "queryParameters": [
                        {
                            "type": {
                                "type": "Integer"
                            },
                            "name": "max"
                        },
                        {
                            "type": {
                                "type": "Integer"
                            },
                            "name": "offset"
                        }
                    ],
                    "verb": "GET",
                    "methodParameters": [
                        {
                            "type": {
                                "type": "Server"
                            },
                            "name": "server"
                        }
                    ],
                    "pathParameters": [
                        {
                            "type": {
                                "type": "Long"
                            },
                            "name": "id"
                        }
                    ],
                    "isPublic": true,
                    "code": {
                        "code": {
                            "JAVA": "\n\t\tthrow new Exception(\"Not yet implemented\");\n    "
                        }
                    },
                    "allParameters": [
                        {
                            "type": {
                                "type": "Server"
                            },
                            "name": "server"
                        },
                        {
                            "type": {
                                "type": "Long"
                            },
                            "name": "id"
                        },
                        {
                            "type": {
                                "type": "Integer"
                            },
                            "name": "max"
                        },
                        {
                            "type": {
                                "type": "Integer"
                            },
                            "name": "offset"
                        }
                    ],
                    "path": "/api/userJob/{id}.json",
                    "name": "showUserJob"
                },
                {
                    "isStatic": true,
                    "isAbstract": false,
                    "type": {
                        "type": "UserJob:X"
                    },
                    "queryParameters": [
                        {
                            "type": {
                                "type": "Long"
                            },
                            "name": "id"
                        },
                        {
                            "type": {
                                "type": "Boolean"
                            },
                            "name": "tree"
                        },
                        {
                            "type": {
                                "type": "Long"
                            },
                            "name": "image"
                        },
                        {
                            "type": {
                                "type": "Integer"
                            },
                            "name": "max"
                        },
                        {
                            "type": {
                                "type": "Integer"
                            },
                            "name": "offset"
                        }
                    ],
                    "verb": "GET",
                    "methodParameters": [
                        {
                            "type": {
                                "type": "Server"
                            },
                            "name": "server"
                        }
                    ],
                    "pathParameters": [
                        
                    ],
                    "isPublic": true,
                    "code": {
                        "code": {
                            "JAVA": "\n\t\tthrow new Exception(\"Not yet implemented\");\n    "
                        }
                    },
                    "allParameters": [
                        {
                            "type": {
                                "type": "Server"
                            },
                            "name": "server"
                        },
                        {
                            "type": {
                                "type": "Long"
                            },
                            "name": "id"
                        },
                        {
                            "type": {
                                "type": "Boolean"
                            },
                            "name": "tree"
                        },
                        {
                            "type": {
                                "type": "Long"
                            },
                            "name": "image"
                        },
                        {
                            "type": {
                                "type": "Integer"
                            },
                            "name": "max"
                        },
                        {
                            "type": {
                                "type": "Integer"
                            },
                            "name": "offset"
                        }
                    ],
                    "path": "/api/project/{id}/userjob.json",
                    "name": "listUserJobByProject"
                },
                {
                    "isStatic": true,
                    "isAbstract": false,
                    "type": {
                        "type": "UserJob:X"
                    },
                    "queryParameters": [
                        
                    ],
                    "verb": "POST",
                    "methodParameters": [
                        {
                            "type": {
                                "type": "Server"
                            },
                            "name": "server"
                        }
                    ],
                    "pathParameters": [
                        {
                            "type": {
                                "type": "Long"
                            },
                            "name": "JSON POST DATA: parent"
                        },
                        {
                            "type": {
                                "type": "Long"
                            },
                            "name": "JSON POST DATA: job"
                        },
                        {
                            "type": {
                                "type": "Long"
                            },
                            "name": "JSON POST DATA: software"
                        },
                        {
                            "type": {
                                "type": "Long"
                            },
                            "name": "JSON POST DATA: project"
                        }
                    ],
                    "isPublic": true,
                    "code": {
                        "code": {
                            "JAVA": "\n\t\tthrow new Exception(\"Not yet implemented\");\n    "
                        }
                    },
                    "allParameters": [
                        {
                            "type": {
                                "type": "Server"
                            },
                            "name": "server"
                        },
                        {
                            "type": {
                                "type": "Long"
                            },
                            "name": "JSON POST DATA: parent"
                        },
                        {
                            "type": {
                                "type": "Long"
                            },
                            "name": "JSON POST DATA: job"
                        },
                        {
                            "type": {
                                "type": "Long"
                            },
                            "name": "JSON POST DATA: software"
                        },
                        {
                            "type": {
                                "type": "Long"
                            },
                            "name": "JSON POST DATA: project"
                        }
                    ],
                    "path": "/api/userJob.json",
                    "name": "createUserJob"
                }
            ],
            "name": "AbstractUserJob"
        },
        {
            "fullPackage": "be.cytomine.client.abst",
            "isAbstract": true,
            "comment": {
                "version": "",
                "description": "",
                "author": ""
            },
            "fields": [
                
            ],
            "domainName": null,
            "methods": [
                {
                    "isStatic": true,
                    "isAbstract": false,
                    "type": {
                        "type": "ListOfAllPermissionName(emptyIfUserHasNoPermission)"
                    },
                    "queryParameters": [
                        {
                            "type": {
                                "type": "String"
                            },
                            "name": "auth"
                        },
                        {
                            "type": {
                                "type": "Integer"
                            },
                            "name": "max"
                        },
                        {
                            "type": {
                                "type": "Integer"
                            },
                            "name": "offset"
                        }
                    ],
                    "verb": "POST",
                    "methodParameters": [
                        {
                            "type": {
                                "type": "Server"
                            },
                            "name": "server"
                        }
                    ],
                    "pathParameters": [
                        {
                            "type": {
                                "type": "String"
                            },
                            "name": "domainClassName"
                        },
                        {
                            "type": {
                                "type": "Long"
                            },
                            "name": "domainIdent"
                        },
                        {
                            "type": {
                                "type": "Long"
                            },
                            "name": "user"
                        }
                    ],
                    "isPublic": true,
                    "code": {
                        "code": {
                            "JAVA": "\n\t\tthrow new Exception(\"Not yet implemented\");\n    "
                        }
                    },
                    "allParameters": [
                        {
                            "type": {
                                "type": "Server"
                            },
                            "name": "server"
                        },
                        {
                            "type": {
                                "type": "String"
                            },
                            "name": "domainClassName"
                        },
                        {
                            "type": {
                                "type": "Long"
                            },
                            "name": "domainIdent"
                        },
                        {
                            "type": {
                                "type": "Long"
                            },
                            "name": "user"
                        },
                        {
                            "type": {
                                "type": "String"
                            },
                            "name": "auth"
                        },
                        {
                            "type": {
                                "type": "Integer"
                            },
                            "name": "max"
                        },
                        {
                            "type": {
                                "type": "Integer"
                            },
                            "name": "offset"
                        }
                    ],
                    "path": "/api/domain/{domainClassName}/{domainIdent}/user/{user}.json",
                    "name": "add_a c l"
                },
                {
                    "isStatic": true,
                    "isAbstract": false,
                    "type": {
                        "type": "ListOfAllPermissionName(emptyIfUserHasNoPermission)"
                    },
                    "queryParameters": [
                        {
                            "type": {
                                "type": "Integer"
                            },
                            "name": "max"
                        },
                        {
                            "type": {
                                "type": "Integer"
                            },
                            "name": "offset"
                        }
                    ],
                    "verb": "GET",
                    "methodParameters": [
                        {
                            "type": {
                                "type": "Server"
                            },
                            "name": "server"
                        }
                    ],
                    "pathParameters": [
                        {
                            "type": {
                                "type": "String"
                            },
                            "name": "domainClassName"
                        },
                        {
                            "type": {
                                "type": "Long"
                            },
                            "name": "domainIdent"
                        },
                        {
                            "type": {
                                "type": "Long"
                            },
                            "name": "user"
                        }
                    ],
                    "isPublic": true,
                    "code": {
                        "code": {
                            "JAVA": "\n\t\tthrow new Exception(\"Not yet implemented\");\n    "
                        }
                    },
                    "allParameters": [
                        {
                            "type": {
                                "type": "Server"
                            },
                            "name": "server"
                        },
                        {
                            "type": {
                                "type": "String"
                            },
                            "name": "domainClassName"
                        },
                        {
                            "type": {
                                "type": "Long"
                            },
                            "name": "domainIdent"
                        },
                        {
                            "type": {
                                "type": "Long"
                            },
                            "name": "user"
                        },
                        {
                            "type": {
                                "type": "Integer"
                            },
                            "name": "max"
                        },
                        {
                            "type": {
                                "type": "Integer"
                            },
                            "name": "offset"
                        }
                    ],
                    "path": "/api/domain/{domainClassName}/{domainIdent}/user/{user}.json",
                    "name": "list_a c l"
                },
                {
                    "isStatic": true,
                    "isAbstract": false,
                    "type": {
                        "type": "ListOfAllPermissionName(emptyIfUserHasNoPermission)"
                    },
                    "queryParameters": [
                        {
                            "type": {
                                "type": "Integer"
                            },
                            "name": "max"
                        },
                        {
                            "type": {
                                "type": "Integer"
                            },
                            "name": "offset"
                        }
                    ],
                    "verb": "DELETE",
                    "methodParameters": [
                        {
                            "type": {
                                "type": "Server"
                            },
                            "name": "server"
                        }
                    ],
                    "pathParameters": [
                        {
                            "type": {
                                "type": "String"
                            },
                            "name": "domainClassName"
                        },
                        {
                            "type": {
                                "type": "Long"
                            },
                            "name": "domainIdent"
                        },
                        {
                            "type": {
                                "type": "Long"
                            },
                            "name": "user"
                        },
                        {
                            "type": {
                                "type": "String"
                            },
                            "name": "auth"
                        }
                    ],
                    "isPublic": true,
                    "code": {
                        "code": {
                            "JAVA": "\n\t\tthrow new Exception(\"Not yet implemented\");\n    "
                        }
                    },
                    "allParameters": [
                        {
                            "type": {
                                "type": "Server"
                            },
                            "name": "server"
                        },
                        {
                            "type": {
                                "type": "String"
                            },
                            "name": "domainClassName"
                        },
                        {
                            "type": {
                                "type": "Long"
                            },
                            "name": "domainIdent"
                        },
                        {
                            "type": {
                                "type": "Long"
                            },
                            "name": "user"
                        },
                        {
                            "type": {
                                "type": "String"
                            },
                            "name": "auth"
                        },
                        {
                            "type": {
                                "type": "Integer"
                            },
                            "name": "max"
                        },
                        {
                            "type": {
                                "type": "Integer"
                            },
                            "name": "offset"
                        }
                    ],
                    "path": "/api/domain/{domainClassName}/{domainIdent}/user/{user}.json",
                    "name": "delete_a c l"
                },
                {
                    "isStatic": true,
                    "isAbstract": false,
                    "type": {
                        "type": "AnnotationDomain"
                    },
                    "queryParameters": [
                        
                    ],
                    "verb": "GET",
                    "methodParameters": [
                        {
                            "type": {
                                "type": "Server"
                            },
                            "name": "server"
                        }
                    ],
                    "pathParameters": [
                        {
                            "type": {
                                "type": "Long"
                            },
                            "name": "id"
                        }
                    ],
                    "isPublic": true,
                    "code": {
                        "code": {
                            "JAVA": "\n\t\tthrow new Exception(\"Not yet implemented\");\n    "
                        }
                    },
                    "allParameters": [
                        {
                            "type": {
                                "type": "Server"
                            },
                            "name": "server"
                        },
                        {
                            "type": {
                                "type": "Long"
                            },
                            "name": "id"
                        }
                    ],
                    "path": "/api/annotation/{id}.json",
                    "name": "show_annotation domain"
                },
                {
                    "isStatic": true,
                    "isAbstract": false,
                    "type": {
                        "type": "File"
                    },
                    "queryParameters": [
                        {
                            "type": {
                                "type": "Boolean"
                            },
                            "name": "reviewed"
                        },
                        {
                            "type": {
                                "type": "List"
                            },
                            "name": "terms"
                        },
                        {
                            "type": {
                                "type": "List"
                            },
                            "name": "users"
                        },
                        {
                            "type": {
                                "type": "List"
                            },
                            "name": "images"
                        },
                        {
                            "type": {
                                "type": "String"
                            },
                            "name": "format"
                        }
                    ],
                    "verb": "GET",
                    "methodParameters": [
                        {
                            "type": {
                                "type": "Server"
                            },
                            "name": "server"
                        }
                    ],
                    "pathParameters": [
                        {
                            "type": {
                                "type": "Long"
                            },
                            "name": "id"
                        }
                    ],
                    "isPublic": true,
                    "code": {
                        "code": {
                            "JAVA": "\n\t\tthrow new Exception(\"Not yet implemented\");\n    "
                        }
                    },
                    "allParameters": [
                        {
                            "type": {
                                "type": "Server"
                            },
                            "name": "server"
                        },
                        {
                            "type": {
                                "type": "Long"
                            },
                            "name": "id"
                        },
                        {
                            "type": {
                                "type": "Boolean"
                            },
                            "name": "reviewed"
                        },
                        {
                            "type": {
                                "type": "List"
                            },
                            "name": "terms"
                        },
                        {
                            "type": {
                                "type": "List"
                            },
                            "name": "users"
                        },
                        {
                            "type": {
                                "type": "List"
                            },
                            "name": "images"
                        },
                        {
                            "type": {
                                "type": "String"
                            },
                            "name": "format"
                        }
                    ],
                    "path": "/api/project/{id}/annotation/download",
                    "name": "downloadDocumentByProject_annotation domain"
                },
                {
                    "isStatic": true,
                    "isAbstract": false,
                    "type": {
                        "type": "File"
                    },
                    "queryParameters": [
                        
                    ],
                    "verb": "GET",
                    "methodParameters": [
                        {
                            "type": {
                                "type": "Server"
                            },
                            "name": "server"
                        }
                    ],
                    "pathParameters": [
                        {
                            "type": {
                                "type": "Long"
                            },
                            "name": "id"
                        },
                        {
                            "type": {
                                "type": "Integer"
                            },
                            "name": "max_size"
                        },
                        {
                            "type": {
                                "type": "Integer"
                            },
                            "name": "zoom"
                        },
                        {
                            "type": {
                                "type": "Boolean"
                            },
                            "name": "draw"
                        }
                    ],
                    "isPublic": true,
                    "code": {
                        "code": {
                            "JAVA": "\n\t\tthrow new Exception(\"Not yet implemented\");\n    "
                        }
                    },
                    "allParameters": [
                        {
                            "type": {
                                "type": "Server"
                            },
                            "name": "server"
                        },
                        {
                            "type": {
                                "type": "Long"
                            },
                            "name": "id"
                        },
                        {
                            "type": {
                                "type": "Integer"
                            },
                            "name": "max_size"
                        },
                        {
                            "type": {
                                "type": "Integer"
                            },
                            "name": "zoom"
                        },
                        {
                            "type": {
                                "type": "Boolean"
                            },
                            "name": "draw"
                        }
                    ],
                    "path": "/api/annotation/{id}/crop.json",
                    "name": "crop_annotation domain"
                },
                {
                    "isStatic": true,
                    "isAbstract": false,
                    "type": {
                        "type": "File"
                    },
                    "queryParameters": [
                        {
                            "type": {
                                "type": "String"
                            },
                            "name": "format"
                        },
                        {
                            "type": {
                                "type": "Integer"
                            },
                            "name": "max"
                        },
                        {
                            "type": {
                                "type": "Integer"
                            },
                            "name": "offset"
                        }
                    ],
                    "verb": "GET",
                    "methodParameters": [
                        {
                            "type": {
                                "type": "Server"
                            },
                            "name": "server"
                        }
                    ],
                    "pathParameters": [
                        
                    ],
                    "isPublic": true,
                    "code": {
                        "code": {
                            "JAVA": "\n\t\tthrow new Exception(\"Not yet implemented\");\n    "
                        }
                    },
                    "allParameters": [
                        {
                            "type": {
                                "type": "Server"
                            },
                            "name": "server"
                        },
                        {
                            "type": {
                                "type": "String"
                            },
                            "name": "format"
                        },
                        {
                            "type": {
                                "type": "Integer"
                            },
                            "name": "max"
                        },
                        {
                            "type": {
                                "type": "Integer"
                            },
                            "name": "offset"
                        }
                    ],
                    "path": "/api/annotation/method/download",
                    "name": "downloadSearched_annotation domain"
                },
                {
                    "isStatic": true,
                    "isAbstract": false,
                    "type": {
                        "type": "File"
                    },
                    "queryParameters": [
                        
                    ],
                    "verb": "GET",
                    "methodParameters": [
                        {
                            "type": {
                                "type": "Server"
                            },
                            "name": "server"
                        }
                    ],
                    "pathParameters": [
                        {
                            "type": {
                                "type": "Long"
                            },
                            "name": "id"
                        },
                        {
                            "type": {
                                "type": "Integer"
                            },
                            "name": "zoom"
                        },
                        {
                            "type": {
                                "type": "Boolean"
                            },
                            "name": "draw"
                        }
                    ],
                    "isPublic": true,
                    "code": {
                        "code": {
                            "JAVA": "\n\t\tthrow new Exception(\"Not yet implemented\");\n    "
                        }
                    },
                    "allParameters": [
                        {
                            "type": {
                                "type": "Server"
                            },
                            "name": "server"
                        },
                        {
                            "type": {
                                "type": "Long"
                            },
                            "name": "id"
                        },
                        {
                            "type": {
                                "type": "Integer"
                            },
                            "name": "zoom"
                        },
                        {
                            "type": {
                                "type": "Boolean"
                            },
                            "name": "draw"
                        }
                    ],
                    "path": "/api/annotation/{id}/cropMin.json",
                    "name": "cropMin_annotation domain"
                },
                {
                    "isStatic": true,
                    "isAbstract": false,
                    "type": {
                        "type": "File"
                    },
                    "queryParameters": [
                        {
                            "type": {
                                "type": "Long"
                            },
                            "name": "idImage"
                        },
                        {
                            "type": {
                                "type": "String"
                            },
                            "name": "geometry"
                        },
                        {
                            "type": {
                                "type": "Long"
                            },
                            "name": "annotation"
                        },
                        {
                            "type": {
                                "type": "Long"
                            },
                            "name": "user"
                        },
                        {
                            "type": {
                                "type": "List"
                            },
                            "name": "terms"
                        },
                        {
                            "type": {
                                "type": "Integer"
                            },
                            "name": "max"
                        },
                        {
                            "type": {
                                "type": "Integer"
                            },
                            "name": "offset"
                        }
                    ],
                    "verb": "GET",
                    "methodParameters": [
                        {
                            "type": {
                                "type": "Server"
                            },
                            "name": "server"
                        }
                    ],
                    "pathParameters": [
                        
                    ],
                    "isPublic": true,
                    "code": {
                        "code": {
                            "JAVA": "\n\t\tthrow new Exception(\"Not yet implemented\");\n    "
                        }
                    },
                    "allParameters": [
                        {
                            "type": {
                                "type": "Server"
                            },
                            "name": "server"
                        },
                        {
                            "type": {
                                "type": "Long"
                            },
                            "name": "idImage"
                        },
                        {
                            "type": {
                                "type": "String"
                            },
                            "name": "geometry"
                        },
                        {
                            "type": {
                                "type": "Long"
                            },
                            "name": "annotation"
                        },
                        {
                            "type": {
                                "type": "Long"
                            },
                            "name": "user"
                        },
                        {
                            "type": {
                                "type": "List"
                            },
                            "name": "terms"
                        },
                        {
                            "type": {
                                "type": "Integer"
                            },
                            "name": "max"
                        },
                        {
                            "type": {
                                "type": "Integer"
                            },
                            "name": "offset"
                        }
                    ],
                    "path": "/api/imageinstance/{idImage}/annotation/included.json",
                    "name": "listIncludedAnnotation_annotation domain"
                },
                {
                    "isStatic": true,
                    "isAbstract": false,
                    "type": {
                        "type": "File"
                    },
                    "queryParameters": [
                        {
                            "type": {
                                "type": "Long"
                            },
                            "name": "idImage"
                        },
                        {
                            "type": {
                                "type": "String"
                            },
                            "name": "geometry"
                        },
                        {
                            "type": {
                                "type": "Long"
                            },
                            "name": "annotation"
                        },
                        {
                            "type": {
                                "type": "Long"
                            },
                            "name": "user"
                        },
                        {
                            "type": {
                                "type": "List"
                            },
                            "name": "terms"
                        }
                    ],
                    "verb": "GET",
                    "methodParameters": [
                        {
                            "type": {
                                "type": "Server"
                            },
                            "name": "server"
                        }
                    ],
                    "pathParameters": [
                        
                    ],
                    "isPublic": true,
                    "code": {
                        "code": {
                            "JAVA": "\n\t\tthrow new Exception(\"Not yet implemented\");\n    "
                        }
                    },
                    "allParameters": [
                        {
                            "type": {
                                "type": "Server"
                            },
                            "name": "server"
                        },
                        {
                            "type": {
                                "type": "Long"
                            },
                            "name": "idImage"
                        },
                        {
                            "type": {
                                "type": "String"
                            },
                            "name": "geometry"
                        },
                        {
                            "type": {
                                "type": "Long"
                            },
                            "name": "annotation"
                        },
                        {
                            "type": {
                                "type": "Long"
                            },
                            "name": "user"
                        },
                        {
                            "type": {
                                "type": "List"
                            },
                            "name": "terms"
                        }
                    ],
                    "path": "/api/imageinstance/{idImage}/annotation/included/download",
                    "name": "downloadIncludedAnnotation_annotation domain"
                },
                {
                    "isStatic": true,
                    "isAbstract": false,
                    "type": {
                        "type": "AnnotationDomain"
                    },
                    "queryParameters": [
                        
                    ],
                    "verb": null,
                    "methodParameters": [
                        {
                            "type": {
                                "type": "Server"
                            },
                            "name": "server"
                        }
                    ],
                    "pathParameters": [
                        {
                            "type": {
                                "type": "Long"
                            },
                            "name": "id"
                        }
                    ],
                    "isPublic": true,
                    "code": {
                        "code": {
                            "JAVA": "\n\t\tthrow new Exception(\"Not yet implemented\");\n    "
                        }
                    },
                    "allParameters": [
                        {
                            "type": {
                                "type": "Server"
                            },
                            "name": "server"
                        },
                        {
                            "type": {
                                "type": "Long"
                            },
                            "name": "id"
                        }
                    ],
                    "path": "/rest annotation domain.json",
                    "name": "fillAnnotation_annotation domain"
                },
                {
                    "isStatic": true,
                    "isAbstract": false,
                    "type": {
                        "type": "AnnotationDomain"
                    },
                    "queryParameters": [
                        {
                            "type": {
                                "type": "Integer"
                            },
                            "name": "minPoint"
                        },
                        {
                            "type": {
                                "type": "Integer"
                            },
                            "name": "maxPoint"
                        }
                    ],
                    "verb": "GET",
                    "methodParameters": [
                        {
                            "type": {
                                "type": "Server"
                            },
                            "name": "server"
                        }
                    ],
                    "pathParameters": [
                        {
                            "type": {
                                "type": "Long"
                            },
                            "name": "id"
                        }
                    ],
                    "isPublic": true,
                    "code": {
                        "code": {
                            "JAVA": "\n\t\tthrow new Exception(\"Not yet implemented\");\n    "
                        }
                    },
                    "allParameters": [
                        {
                            "type": {
                                "type": "Server"
                            },
                            "name": "server"
                        },
                        {
                            "type": {
                                "type": "Long"
                            },
                            "name": "id"
                        },
                        {
                            "type": {
                                "type": "Integer"
                            },
                            "name": "minPoint"
                        },
                        {
                            "type": {
                                "type": "Integer"
                            },
                            "name": "maxPoint"
                        }
                    ],
                    "path": "/api/annotation/{id}/simplify.json",
                    "name": "simplify_annotation domain"
                },
                {
                    "isStatic": true,
                    "isAbstract": false,
                    "type": {
                        "type": "AnnotationDomain"
                    },
                    "queryParameters": [
                        {
                            "type": {
                                "type": "Integer"
                            },
                            "name": "minPoint"
                        },
                        {
                            "type": {
                                "type": "Integer"
                            },
                            "name": "maxPoint"
                        },
                        {
                            "type": {
                                "type": "String"
                            },
                            "name": "JSON POST DATA: wkt"
                        }
                    ],
                    "verb": "POST",
                    "methodParameters": [
                        {
                            "type": {
                                "type": "Server"
                            },
                            "name": "server"
                        }
                    ],
                    "pathParameters": [
                        
                    ],
                    "isPublic": true,
                    "code": {
                        "code": {
                            "JAVA": "\n\t\tthrow new Exception(\"Not yet implemented\");\n    "
                        }
                    },
                    "allParameters": [
                        {
                            "type": {
                                "type": "Server"
                            },
                            "name": "server"
                        },
                        {
                            "type": {
                                "type": "Integer"
                            },
                            "name": "minPoint"
                        },
                        {
                            "type": {
                                "type": "Integer"
                            },
                            "name": "maxPoint"
                        },
                        {
                            "type": {
                                "type": "String"
                            },
                            "name": "JSON POST DATA: wkt"
                        }
                    ],
                    "path": "/api/simplify.json",
                    "name": "retrieveSimplify_annotation domain"
                },
                {
                    "isStatic": true,
                    "isAbstract": false,
                    "type": {
                        "type": "AnnotationDomain"
                    },
                    "queryParameters": [
                        {
                            "type": {
                                "type": "Integer"
                            },
                            "name": "minPoint"
                        },
                        {
                            "type": {
                                "type": "Integer"
                            },
                            "name": "maxPoint"
                        },
                        {
                            "type": {
                                "type": "String"
                            },
                            "name": "JSON POST DATA: location"
                        },
                        {
                            "type": {
                                "type": "Boolean"
                            },
                            "name": "JSON POST DATA: review"
                        },
                        {
                            "type": {
                                "type": "Long"
                            },
                            "name": "JSON POST DATA: image"
                        },
                        {
                            "type": {
                                "type": "Boolean"
                            },
                            "name": "JSON POST DATA: remove"
                        },
                        {
                            "type": {
                                "type": "List"
                            },
                            "name": "JSON POST DATA: layers"
                        }
                    ],
                    "verb": "POST",
                    "methodParameters": [
                        {
                            "type": {
                                "type": "Server"
                            },
                            "name": "server"
                        }
                    ],
                    "pathParameters": [
                        
                    ],
                    "isPublic": true,
                    "code": {
                        "code": {
                            "JAVA": "\n\t\tthrow new Exception(\"Not yet implemented\");\n    "
                        }
                    },
                    "allParameters": [
                        {
                            "type": {
                                "type": "Server"
                            },
                            "name": "server"
                        },
                        {
                            "type": {
                                "type": "Integer"
                            },
                            "name": "minPoint"
                        },
                        {
                            "type": {
                                "type": "Integer"
                            },
                            "name": "maxPoint"
                        },
                        {
                            "type": {
                                "type": "String"
                            },
                            "name": "JSON POST DATA: location"
                        },
                        {
                            "type": {
                                "type": "Boolean"
                            },
                            "name": "JSON POST DATA: review"
                        },
                        {
                            "type": {
                                "type": "Long"
                            },
                            "name": "JSON POST DATA: image"
                        },
                        {
                            "type": {
                                "type": "Boolean"
                            },
                            "name": "JSON POST DATA: remove"
                        },
                        {
                            "type": {
                                "type": "List"
                            },
                            "name": "JSON POST DATA: layers"
                        }
                    ],
                    "path": "/api/annotationcorrection.json",
                    "name": "addCorrection_annotation domain"
                },
                {
                    "isStatic": true,
                    "isAbstract": false,
                    "type": {
                        "type": "AnnotationDomain"
                    },
                    "queryParameters": [
                        
                    ],
                    "verb": "POST",
                    "methodParameters": [
                        {
                            "type": {
                                "type": "Server"
                            },
                            "name": "server"
                        }
                    ],
                    "pathParameters": [
                        
                    ],
                    "isPublic": true,
                    "code": {
                        "code": {
                            "JAVA": "\n\t\tthrow new Exception(\"Not yet implemented\");\n    "
                        }
                    },
                    "allParameters": [
                        {
                            "type": {
                                "type": "Server"
                            },
                            "name": "server"
                        }
                    ],
                    "path": "/api/annotation.json",
                    "name": "add_annotation domain"
                },
                {
                    "isStatic": true,
                    "isAbstract": false,
                    "type": {
                        "type": "AnnotationDomain"
                    },
                    "queryParameters": [
                        
                    ],
                    "verb": "DELETE",
                    "methodParameters": [
                        {
                            "type": {
                                "type": "Server"
                            },
                            "name": "server"
                        }
                    ],
                    "pathParameters": [
                        {
                            "type": {
                                "type": "Long"
                            },
                            "name": "id"
                        }
                    ],
                    "isPublic": true,
                    "code": {
                        "code": {
                            "JAVA": "\n\t\tthrow new Exception(\"Not yet implemented\");\n    "
                        }
                    },
                    "allParameters": [
                        {
                            "type": {
                                "type": "Server"
                            },
                            "name": "server"
                        },
                        {
                            "type": {
                                "type": "Long"
                            },
                            "name": "id"
                        }
                    ],
                    "path": "/api/annotation/{id}.json",
                    "name": "delete_annotation domain"
                },
                {
                    "isStatic": true,
                    "isAbstract": false,
                    "type": {
                        "type": "AnnotationListing"
                    },
                    "queryParameters": [
                        {
                            "type": {
                                "type": "Boolean"
                            },
                            "name": "showDefault"
                        },
                        {
                            "type": {
                                "type": "Boolean"
                            },
                            "name": "showBasic"
                        },
                        {
                            "type": {
                                "type": "Boolean"
                            },
                            "name": "showMeta"
                        },
                        {
                            "type": {
                                "type": "Boolean"
                            },
                            "name": "showWKT"
                        },
                        {
                            "type": {
                                "type": "Boolean"
                            },
                            "name": "showGIS"
                        },
                        {
                            "type": {
                                "type": "Boolean"
                            },
                            "name": "showTerm"
                        },
                        {
                            "type": {
                                "type": "Boolean"
                            },
                            "name": "showAlgo"
                        },
                        {
                            "type": {
                                "type": "Boolean"
                            },
                            "name": "showUser"
                        },
                        {
                            "type": {
                                "type": "Boolean"
                            },
                            "name": "showImage"
                        },
                        {
                            "type": {
                                "type": "Boolean"
                            },
                            "name": "hideBasic"
                        },
                        {
                            "type": {
                                "type": "Boolean"
                            },
                            "name": "hideMeta"
                        },
                        {
                            "type": {
                                "type": "Boolean"
                            },
                            "name": "hideWKT"
                        },
                        {
                            "type": {
                                "type": "Boolean"
                            },
                            "name": "hideGIS"
                        },
                        {
                            "type": {
                                "type": "Boolean"
                            },
                            "name": "hideTerm"
                        },
                        {
                            "type": {
                                "type": "Boolean"
                            },
                            "name": "hideAlgo"
                        },
                        {
                            "type": {
                                "type": "Boolean"
                            },
                            "name": "hideUser"
                        },
                        {
                            "type": {
                                "type": "Boolean"
                            },
                            "name": "hideImage"
                        },
                        {
                            "type": {
                                "type": "Long"
                            },
                            "name": "project"
                        },
                        {
                            "type": {
                                "type": "Long"
                            },
                            "name": "job"
                        },
                        {
                            "type": {
                                "type": "Long"
                            },
                            "name": "user"
                        },
                        {
                            "type": {
                                "type": "Long"
                            },
                            "name": "jobForTermAlgo"
                        },
                        {
                            "type": {
                                "type": "Long"
                            },
                            "name": "term"
                        },
                        {
                            "type": {
                                "type": "Long"
                            },
                            "name": "image"
                        },
                        {
                            "type": {
                                "type": "Long"
                            },
                            "name": "suggestedTerm"
                        },
                        {
                            "type": {
                                "type": "Long"
                            },
                            "name": "userForTermAlgo"
                        },
                        {
                            "type": {
                                "type": "Long"
                            },
                            "name": "kmeansValue"
                        },
                        {
                            "type": {
                                "type": "List"
                            },
                            "name": "users"
                        },
                        {
                            "type": {
                                "type": "List"
                            },
                            "name": "images"
                        },
                        {
                            "type": {
                                "type": "List"
                            },
                            "name": "terms"
                        },
                        {
                            "type": {
                                "type": "Boolean"
                            },
                            "name": "notReviewedOnly"
                        },
                        {
                            "type": {
                                "type": "Boolean"
                            },
                            "name": "noTerm"
                        },
                        {
                            "type": {
                                "type": "Boolean"
                            },
                            "name": "noAlgoTerm"
                        },
                        {
                            "type": {
                                "type": "Long"
                            },
                            "name": "multipleTerm"
                        },
                        {
                            "type": {
                                "type": "Boolean"
                            },
                            "name": "kmeans"
                        },
                        {
                            "type": {
                                "type": "String"
                            },
                            "name": "bbox"
                        },
                        {
                            "type": {
                                "type": "Long"
                            },
                            "name": "bboxAnnotation"
                        },
                        {
                            "type": {
                                "type": "Integer"
                            },
                            "name": "max"
                        },
                        {
                            "type": {
                                "type": "Integer"
                            },
                            "name": "offset"
                        }
                    ],
                    "verb": "GET",
                    "methodParameters": [
                        {
                            "type": {
                                "type": "Server"
                            },
                            "name": "server"
                        }
                    ],
                    "pathParameters": [
                        
                    ],
                    "isPublic": true,
                    "code": {
                        "code": {
                            "JAVA": "\n\t\tthrow new Exception(\"Not yet implemented\");\n    "
                        }
                    },
                    "allParameters": [
                        {
                            "type": {
                                "type": "Server"
                            },
                            "name": "server"
                        },
                        {
                            "type": {
                                "type": "Boolean"
                            },
                            "name": "showDefault"
                        },
                        {
                            "type": {
                                "type": "Boolean"
                            },
                            "name": "showBasic"
                        },
                        {
                            "type": {
                                "type": "Boolean"
                            },
                            "name": "showMeta"
                        },
                        {
                            "type": {
                                "type": "Boolean"
                            },
                            "name": "showWKT"
                        },
                        {
                            "type": {
                                "type": "Boolean"
                            },
                            "name": "showGIS"
                        },
                        {
                            "type": {
                                "type": "Boolean"
                            },
                            "name": "showTerm"
                        },
                        {
                            "type": {
                                "type": "Boolean"
                            },
                            "name": "showAlgo"
                        },
                        {
                            "type": {
                                "type": "Boolean"
                            },
                            "name": "showUser"
                        },
                        {
                            "type": {
                                "type": "Boolean"
                            },
                            "name": "showImage"
                        },
                        {
                            "type": {
                                "type": "Boolean"
                            },
                            "name": "hideBasic"
                        },
                        {
                            "type": {
                                "type": "Boolean"
                            },
                            "name": "hideMeta"
                        },
                        {
                            "type": {
                                "type": "Boolean"
                            },
                            "name": "hideWKT"
                        },
                        {
                            "type": {
                                "type": "Boolean"
                            },
                            "name": "hideGIS"
                        },
                        {
                            "type": {
                                "type": "Boolean"
                            },
                            "name": "hideTerm"
                        },
                        {
                            "type": {
                                "type": "Boolean"
                            },
                            "name": "hideAlgo"
                        },
                        {
                            "type": {
                                "type": "Boolean"
                            },
                            "name": "hideUser"
                        },
                        {
                            "type": {
                                "type": "Boolean"
                            },
                            "name": "hideImage"
                        },
                        {
                            "type": {
                                "type": "Long"
                            },
                            "name": "project"
                        },
                        {
                            "type": {
                                "type": "Long"
                            },
                            "name": "job"
                        },
                        {
                            "type": {
                                "type": "Long"
                            },
                            "name": "user"
                        },
                        {
                            "type": {
                                "type": "Long"
                            },
                            "name": "jobForTermAlgo"
                        },
                        {
                            "type": {
                                "type": "Long"
                            },
                            "name": "term"
                        },
                        {
                            "type": {
                                "type": "Long"
                            },
                            "name": "image"
                        },
                        {
                            "type": {
                                "type": "Long"
                            },
                            "name": "suggestedTerm"
                        },
                        {
                            "type": {
                                "type": "Long"
                            },
                            "name": "userForTermAlgo"
                        },
                        {
                            "type": {
                                "type": "Long"
                            },
                            "name": "kmeansValue"
                        },
                        {
                            "type": {
                                "type": "List"
                            },
                            "name": "users"
                        },
                        {
                            "type": {
                                "type": "List"
                            },
                            "name": "images"
                        },
                        {
                            "type": {
                                "type": "List"
                            },
                            "name": "terms"
                        },
                        {
                            "type": {
                                "type": "Boolean"
                            },
                            "name": "notReviewedOnly"
                        },
                        {
                            "type": {
                                "type": "Boolean"
                            },
                            "name": "noTerm"
                        },
                        {
                            "type": {
                                "type": "Boolean"
                            },
                            "name": "noAlgoTerm"
                        },
                        {
                            "type": {
                                "type": "Long"
                            },
                            "name": "multipleTerm"
                        },
                        {
                            "type": {
                                "type": "Boolean"
                            },
                            "name": "kmeans"
                        },
                        {
                            "type": {
                                "type": "String"
                            },
                            "name": "bbox"
                        },
                        {
                            "type": {
                                "type": "Long"
                            },
                            "name": "bboxAnnotation"
                        },
                        {
                            "type": {
                                "type": "Integer"
                            },
                            "name": "max"
                        },
                        {
                            "type": {
                                "type": "Integer"
                            },
                            "name": "offset"
                        }
                    ],
                    "path": "/api/annotation.json",
                    "name": "search_annotation domain"
                },
                {
                    "isStatic": true,
                    "isAbstract": false,
                    "type": {
                        "type": "AnnotationDomain"
                    },
                    "queryParameters": [
                        {
                            "type": {
                                "type": "Boolean"
                            },
                            "name": "fill"
                        }
                    ],
                    "verb": "PUT",
                    "methodParameters": [
                        {
                            "type": {
                                "type": "Server"
                            },
                            "name": "server"
                        }
                    ],
                    "pathParameters": [
                        {
                            "type": {
                                "type": "Long"
                            },
                            "name": "id"
                        }
                    ],
                    "isPublic": true,
                    "code": {
                        "code": {
                            "JAVA": "\n\t\tthrow new Exception(\"Not yet implemented\");\n    "
                        }
                    },
                    "allParameters": [
                        {
                            "type": {
                                "type": "Server"
                            },
                            "name": "server"
                        },
                        {
                            "type": {
                                "type": "Long"
                            },
                            "name": "id"
                        },
                        {
                            "type": {
                                "type": "Boolean"
                            },
                            "name": "fill"
                        }
                    ],
                    "path": "/api/annotation/{id}.json",
                    "name": "update_annotation domain"
                },
                {
                    "isStatic": true,
                    "isAbstract": false,
                    "type": {
                        "type": "JobTemplateAnnotation"
                    },
                    "queryParameters": [
                        
                    ],
                    "verb": "GET",
                    "methodParameters": [
                        {
                            "type": {
                                "type": "Server"
                            },
                            "name": "server"
                        }
                    ],
                    "pathParameters": [
                        {
                            "type": {
                                "type": "Long"
                            },
                            "name": "id"
                        }
                    ],
                    "isPublic": true,
                    "code": {
                        "code": {
                            "JAVA": "\n\t\tthrow new Exception(\"Not yet implemented\");\n    "
                        }
                    },
                    "allParameters": [
                        {
                            "type": {
                                "type": "Server"
                            },
                            "name": "server"
                        },
                        {
                            "type": {
                                "type": "Long"
                            },
                            "name": "id"
                        }
                    ],
                    "path": "/api/jobtemplateannotation/{id}.json",
                    "name": "show_job template annotation"
                },
                {
                    "isStatic": true,
                    "isAbstract": false,
                    "type": {
                        "type": "JobTemplateAnnotation"
                    },
                    "queryParameters": [
                        
                    ],
                    "verb": "POST",
                    "methodParameters": [
                        {
                            "type": {
                                "type": "Server"
                            },
                            "name": "server"
                        }
                    ],
                    "pathParameters": [
                        
                    ],
                    "isPublic": true,
                    "code": {
                        "code": {
                            "JAVA": "\n\t\tthrow new Exception(\"Not yet implemented\");\n    "
                        }
                    },
                    "allParameters": [
                        {
                            "type": {
                                "type": "Server"
                            },
                            "name": "server"
                        }
                    ],
                    "path": "/api/jobtemplateannotation.{fomat}",
                    "name": "add_job template annotation"
                },
                {
                    "isStatic": true,
                    "isAbstract": false,
                    "type": {
                        "type": "JobTemplateAnnotation"
                    },
                    "queryParameters": [
                        {
                            "type": {
                                "type": "Long"
                            },
                            "name": "jobtemplate"
                        },
                        {
                            "type": {
                                "type": "Long"
                            },
                            "name": "annotation"
                        },
                        {
                            "type": {
                                "type": "Integer"
                            },
                            "name": "max"
                        },
                        {
                            "type": {
                                "type": "Integer"
                            },
                            "name": "offset"
                        }
                    ],
                    "verb": "GET",
                    "methodParameters": [
                        {
                            "type": {
                                "type": "Server"
                            },
                            "name": "server"
                        }
                    ],
                    "pathParameters": [
                        
                    ],
                    "isPublic": true,
                    "code": {
                        "code": {
                            "JAVA": "\n\t\tthrow new Exception(\"Not yet implemented\");\n    "
                        }
                    },
                    "allParameters": [
                        {
                            "type": {
                                "type": "Server"
                            },
                            "name": "server"
                        },
                        {
                            "type": {
                                "type": "Long"
                            },
                            "name": "jobtemplate"
                        },
                        {
                            "type": {
                                "type": "Long"
                            },
                            "name": "annotation"
                        },
                        {
                            "type": {
                                "type": "Integer"
                            },
                            "name": "max"
                        },
                        {
                            "type": {
                                "type": "Integer"
                            },
                            "name": "offset"
                        }
                    ],
                    "path": "/api/jobtemplateannotation.{fomat}",
                    "name": "list_job template annotation"
                },
                {
                    "isStatic": true,
                    "isAbstract": false,
                    "type": {
                        "type": "JobTemplateAnnotation"
                    },
                    "queryParameters": [
                        
                    ],
                    "verb": "DELETE",
                    "methodParameters": [
                        {
                            "type": {
                                "type": "Server"
                            },
                            "name": "server"
                        }
                    ],
                    "pathParameters": [
                        {
                            "type": {
                                "type": "Long"
                            },
                            "name": "id"
                        }
                    ],
                    "isPublic": true,
                    "code": {
                        "code": {
                            "JAVA": "\n\t\tthrow new Exception(\"Not yet implemented\");\n    "
                        }
                    },
                    "allParameters": [
                        {
                            "type": {
                                "type": "Server"
                            },
                            "name": "server"
                        },
                        {
                            "type": {
                                "type": "Long"
                            },
                            "name": "id"
                        }
                    ],
                    "path": "/api/jobtemplateannotation/{id}.json",
                    "name": "delete_job template annotation"
                },
                {
                    "isStatic": true,
                    "isAbstract": false,
                    "type": {
                        "type": "RelationTerm"
                    },
                    "queryParameters": [
                        
                    ],
                    "verb": "GET",
                    "methodParameters": [
                        {
                            "type": {
                                "type": "Server"
                            },
                            "name": "server"
                        }
                    ],
                    "pathParameters": [
                        {
                            "type": {
                                "type": "Long"
                            },
                            "name": "idrelation"
                        },
                        {
                            "type": {
                                "type": "Long"
                            },
                            "name": "idterm1"
                        },
                        {
                            "type": {
                                "type": "Long"
                            },
                            "name": "idterm2"
                        }
                    ],
                    "isPublic": true,
                    "code": {
                        "code": {
                            "JAVA": "\n\t\tthrow new Exception(\"Not yet implemented\");\n    "
                        }
                    },
                    "allParameters": [
                        {
                            "type": {
                                "type": "Server"
                            },
                            "name": "server"
                        },
                        {
                            "type": {
                                "type": "Long"
                            },
                            "name": "idrelation"
                        },
                        {
                            "type": {
                                "type": "Long"
                            },
                            "name": "idterm1"
                        },
                        {
                            "type": {
                                "type": "Long"
                            },
                            "name": "idterm2"
                        }
                    ],
                    "path": "/api/relation/parent/term1/{idterm1}/term2/{idterm2}.json",
                    "name": "show_relation term"
                },
                {
                    "isStatic": true,
                    "isAbstract": false,
                    "type": {
                        "type": "RelationTerm"
                    },
                    "queryParameters": [
                        {
                            "type": {
                                "type": "Integer"
                            },
                            "name": "max"
                        },
                        {
                            "type": {
                                "type": "Integer"
                            },
                            "name": "offset"
                        }
                    ],
                    "verb": "GET",
                    "methodParameters": [
                        {
                            "type": {
                                "type": "Server"
                            },
                            "name": "server"
                        }
                    ],
                    "pathParameters": [
                        {
                            "type": {
                                "type": "Long"
                            },
                            "name": "id"
                        },
                        {
                            "type": {
                                "type": "Integer"
                            },
                            "name": "i"
                        }
                    ],
                    "isPublic": true,
                    "code": {
                        "code": {
                            "JAVA": "\n\t\tthrow new Exception(\"Not yet implemented\");\n    "
                        }
                    },
                    "allParameters": [
                        {
                            "type": {
                                "type": "Server"
                            },
                            "name": "server"
                        },
                        {
                            "type": {
                                "type": "Long"
                            },
                            "name": "id"
                        },
                        {
                            "type": {
                                "type": "Integer"
                            },
                            "name": "i"
                        },
                        {
                            "type": {
                                "type": "Integer"
                            },
                            "name": "max"
                        },
                        {
                            "type": {
                                "type": "Integer"
                            },
                            "name": "offset"
                        }
                    ],
                    "path": "/api/relation/term/{i}/{id}.json",
                    "name": "listByTerm_relation term"
                },
                {
                    "isStatic": true,
                    "isAbstract": false,
                    "type": {
                        "type": "RelationTerm"
                    },
                    "queryParameters": [
                        {
                            "type": {
                                "type": "Integer"
                            },
                            "name": "max"
                        },
                        {
                            "type": {
                                "type": "Integer"
                            },
                            "name": "offset"
                        }
                    ],
                    "verb": "GET",
                    "methodParameters": [
                        {
                            "type": {
                                "type": "Server"
                            },
                            "name": "server"
                        }
                    ],
                    "pathParameters": [
                        {
                            "type": {
                                "type": "Long"
                            },
                            "name": "id"
                        },
                        {
                            "type": {
                                "type": "Integer"
                            },
                            "name": "i"
                        }
                    ],
                    "isPublic": true,
                    "code": {
                        "code": {
                            "JAVA": "\n\t\tthrow new Exception(\"Not yet implemented\");\n    "
                        }
                    },
                    "allParameters": [
                        {
                            "type": {
                                "type": "Server"
                            },
                            "name": "server"
                        },
                        {
                            "type": {
                                "type": "Long"
                            },
                            "name": "id"
                        },
                        {
                            "type": {
                                "type": "Integer"
                            },
                            "name": "i"
                        },
                        {
                            "type": {
                                "type": "Integer"
                            },
                            "name": "max"
                        },
                        {
                            "type": {
                                "type": "Integer"
                            },
                            "name": "offset"
                        }
                    ],
                    "path": "/api/relation/term/{id}.json",
                    "name": "listByTermAll_relation term"
                },
                {
                    "isStatic": true,
                    "isAbstract": false,
                    "type": {
                        "type": "RelationTerm"
                    },
                    "queryParameters": [
                        
                    ],
                    "verb": "POST",
                    "methodParameters": [
                        {
                            "type": {
                                "type": "Server"
                            },
                            "name": "server"
                        }
                    ],
                    "pathParameters": [
                        
                    ],
                    "isPublic": true,
                    "code": {
                        "code": {
                            "JAVA": "\n\t\tthrow new Exception(\"Not yet implemented\");\n    "
                        }
                    },
                    "allParameters": [
                        {
                            "type": {
                                "type": "Server"
                            },
                            "name": "server"
                        }
                    ],
                    "path": "/api/relation/parent/term.json",
                    "name": "add_relation term"
                },
                {
                    "isStatic": true,
                    "isAbstract": false,
                    "type": {
                        "type": "RelationTerm"
                    },
                    "queryParameters": [
                        
                    ],
                    "verb": "DELETE",
                    "methodParameters": [
                        {
                            "type": {
                                "type": "Server"
                            },
                            "name": "server"
                        }
                    ],
                    "pathParameters": [
                        {
                            "type": {
                                "type": "Long"
                            },
                            "name": "idrelation"
                        },
                        {
                            "type": {
                                "type": "Long"
                            },
                            "name": "idterm1"
                        },
                        {
                            "type": {
                                "type": "Long"
                            },
                            "name": "idterm2"
                        }
                    ],
                    "isPublic": true,
                    "code": {
                        "code": {
                            "JAVA": "\n\t\tthrow new Exception(\"Not yet implemented\");\n    "
                        }
                    },
                    "allParameters": [
                        {
                            "type": {
                                "type": "Server"
                            },
                            "name": "server"
                        },
                        {
                            "type": {
                                "type": "Long"
                            },
                            "name": "idrelation"
                        },
                        {
                            "type": {
                                "type": "Long"
                            },
                            "name": "idterm1"
                        },
                        {
                            "type": {
                                "type": "Long"
                            },
                            "name": "idterm2"
                        }
                    ],
                    "path": "/api/relation/parent/term1/{idterm1}/term2/{idterm2}.json",
                    "name": "delete_relation term"
                },
                {
                    "isStatic": true,
                    "isAbstract": false,
                    "type": {
                        "type": "Term"
                    },
                    "queryParameters": [
                        
                    ],
                    "verb": "GET",
                    "methodParameters": [
                        {
                            "type": {
                                "type": "Server"
                            },
                            "name": "server"
                        }
                    ],
                    "pathParameters": [
                        {
                            "type": {
                                "type": "Long"
                            },
                            "name": "id"
                        }
                    ],
                    "isPublic": true,
                    "code": {
                        "code": {
                            "JAVA": "\n\t\tthrow new Exception(\"Not yet implemented\");\n    "
                        }
                    },
                    "allParameters": [
                        {
                            "type": {
                                "type": "Server"
                            },
                            "name": "server"
                        },
                        {
                            "type": {
                                "type": "Long"
                            },
                            "name": "id"
                        }
                    ],
                    "path": "/api/term/{id}.json",
                    "name": "show_term"
                },
                {
                    "isStatic": true,
                    "isAbstract": false,
                    "type": {
                        "type": "Term"
                    },
                    "queryParameters": [
                        {
                            "type": {
                                "type": "Integer"
                            },
                            "name": "max"
                        },
                        {
                            "type": {
                                "type": "Integer"
                            },
                            "name": "offset"
                        }
                    ],
                    "verb": "GET",
                    "methodParameters": [
                        {
                            "type": {
                                "type": "Server"
                            },
                            "name": "server"
                        }
                    ],
                    "pathParameters": [
                        {
                            "type": {
                                "type": "Long"
                            },
                            "name": "id"
                        }
                    ],
                    "isPublic": true,
                    "code": {
                        "code": {
                            "JAVA": "\n\t\tthrow new Exception(\"Not yet implemented\");\n    "
                        }
                    },
                    "allParameters": [
                        {
                            "type": {
                                "type": "Server"
                            },
                            "name": "server"
                        },
                        {
                            "type": {
                                "type": "Long"
                            },
                            "name": "id"
                        },
                        {
                            "type": {
                                "type": "Integer"
                            },
                            "name": "max"
                        },
                        {
                            "type": {
                                "type": "Integer"
                            },
                            "name": "offset"
                        }
                    ],
                    "path": "/api/ontology/{idontology}/term.json",
                    "name": "listByOntology_term"
                },
                {
                    "isStatic": true,
                    "isAbstract": false,
                    "type": {
                        "type": "Term"
                    },
                    "queryParameters": [
                        {
                            "type": {
                                "type": "Integer"
                            },
                            "name": "max"
                        },
                        {
                            "type": {
                                "type": "Integer"
                            },
                            "name": "offset"
                        }
                    ],
                    "verb": "GET",
                    "methodParameters": [
                        {
                            "type": {
                                "type": "Server"
                            },
                            "name": "server"
                        }
                    ],
                    "pathParameters": [
                        {
                            "type": {
                                "type": "Long"
                            },
                            "name": "id"
                        }
                    ],
                    "isPublic": true,
                    "code": {
                        "code": {
                            "JAVA": "\n\t\tthrow new Exception(\"Not yet implemented\");\n    "
                        }
                    },
                    "allParameters": [
                        {
                            "type": {
                                "type": "Server"
                            },
                            "name": "server"
                        },
                        {
                            "type": {
                                "type": "Long"
                            },
                            "name": "id"
                        },
                        {
                            "type": {
                                "type": "Integer"
                            },
                            "name": "max"
                        },
                        {
                            "type": {
                                "type": "Integer"
                            },
                            "name": "offset"
                        }
                    ],
                    "path": "/api/project/{idProject}/term.json",
                    "name": "listAllByProject_term"
                },
                {
                    "isStatic": true,
                    "isAbstract": false,
                    "type": {
                        "type": "Term"
                    },
                    "queryParameters": [
                        
                    ],
                    "verb": "POST",
                    "methodParameters": [
                        {
                            "type": {
                                "type": "Server"
                            },
                            "name": "server"
                        }
                    ],
                    "pathParameters": [
                        
                    ],
                    "isPublic": true,
                    "code": {
                        "code": {
                            "JAVA": "\n\t\tthrow new Exception(\"Not yet implemented\");\n    "
                        }
                    },
                    "allParameters": [
                        {
                            "type": {
                                "type": "Server"
                            },
                            "name": "server"
                        }
                    ],
                    "path": "/api/term.json",
                    "name": "add_term"
                },
                {
                    "isStatic": true,
                    "isAbstract": false,
                    "type": {
                        "type": "Term"
                    },
                    "queryParameters": [
                        {
                            "type": {
                                "type": "Integer"
                            },
                            "name": "max"
                        },
                        {
                            "type": {
                                "type": "Integer"
                            },
                            "name": "offset"
                        }
                    ],
                    "verb": "GET",
                    "methodParameters": [
                        {
                            "type": {
                                "type": "Server"
                            },
                            "name": "server"
                        }
                    ],
                    "pathParameters": [
                        
                    ],
                    "isPublic": true,
                    "code": {
                        "code": {
                            "JAVA": "\n\t\tthrow new Exception(\"Not yet implemented\");\n    "
                        }
                    },
                    "allParameters": [
                        {
                            "type": {
                                "type": "Server"
                            },
                            "name": "server"
                        },
                        {
                            "type": {
                                "type": "Integer"
                            },
                            "name": "max"
                        },
                        {
                            "type": {
                                "type": "Integer"
                            },
                            "name": "offset"
                        }
                    ],
                    "path": "/api/term.json",
                    "name": "list_term"
                },
                {
                    "isStatic": true,
                    "isAbstract": false,
                    "type": {
                        "type": "Term"
                    },
                    "queryParameters": [
                        
                    ],
                    "verb": "DELETE",
                    "methodParameters": [
                        {
                            "type": {
                                "type": "Server"
                            },
                            "name": "server"
                        }
                    ],
                    "pathParameters": [
                        {
                            "type": {
                                "type": "Long"
                            },
                            "name": "id"
                        }
                    ],
                    "isPublic": true,
                    "code": {
                        "code": {
                            "JAVA": "\n\t\tthrow new Exception(\"Not yet implemented\");\n    "
                        }
                    },
                    "allParameters": [
                        {
                            "type": {
                                "type": "Server"
                            },
                            "name": "server"
                        },
                        {
                            "type": {
                                "type": "Long"
                            },
                            "name": "id"
                        }
                    ],
                    "path": "/api/term/{id}.json",
                    "name": "delete_term"
                },
                {
                    "isStatic": true,
                    "isAbstract": false,
                    "type": {
                        "type": "Term"
                    },
                    "queryParameters": [
                        
                    ],
                    "verb": "PUT",
                    "methodParameters": [
                        {
                            "type": {
                                "type": "Server"
                            },
                            "name": "server"
                        }
                    ],
                    "pathParameters": [
                        {
                            "type": {
                                "type": "Long"
                            },
                            "name": "id"
                        }
                    ],
                    "isPublic": true,
                    "code": {
                        "code": {
                            "JAVA": "\n\t\tthrow new Exception(\"Not yet implemented\");\n    "
                        }
                    },
                    "allParameters": [
                        {
                            "type": {
                                "type": "Server"
                            },
                            "name": "server"
                        },
                        {
                            "type": {
                                "type": "Long"
                            },
                            "name": "id"
                        }
                    ],
                    "path": "/api/term/{id}.json",
                    "name": "update_term"
                }
            ],
            "name": "AbstractGeneral"
        }
    ]
}